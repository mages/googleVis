[{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"demonstration-of-googlevis","dir":"Articles","previous_headings":"","what":"Demonstration of googleVis","title":"googleVis examples","text":"may take little load charts. Please patient. charts require Internet connection. examples taken googleVis demo. can execute demo via details charts examples see help files individual googleVis function review Google Charts API documentation Terms Service.","code":"library(googleVis) demo(googleVis)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"line-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Line chart","title":"googleVis examples","text":"","code":"df=data.frame(country=c(\"US\", \"GB\", \"BR\"),                val1=c(10,13,14),                val2=c(23,12,32)) Line <- gvisLineChart(df) plot(Line)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"line-chart-with-two-axis","dir":"Articles","previous_headings":"Demonstration of googleVis > Line chart","what":"Line chart with two axis","title":"googleVis examples","text":"","code":"Line2 <- gvisLineChart(df, \"country\", c(\"val1\",\"val2\"),                        options=list(                          series=\"[{targetAxisIndex: 0},                                  {targetAxisIndex:1}]\",                          vAxes=\"[{title:'val1'}, {title:'val2'}]\"                        )) plot(Line2)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"bar-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Bar chart","title":"googleVis examples","text":"","code":"Bar <- gvisBarChart(df) plot(Bar)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"column-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Column chart","title":"googleVis examples","text":"","code":"Column <- gvisColumnChart(df) plot(Column)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"area-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Area chart","title":"googleVis examples","text":"","code":"Area <- gvisAreaChart(df) plot(Area)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"stepped-area-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Stepped Area chart","title":"googleVis examples","text":"","code":"SteppedArea <- gvisSteppedAreaChart(df, xvar=\"country\",                                      yvar=c(\"val1\", \"val2\"),                                     options=list(isStacked=TRUE)) plot(SteppedArea)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"combo-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Combo chart","title":"googleVis examples","text":"","code":"Combo <- gvisComboChart(df, xvar=\"country\",                         yvar=c(\"val1\", \"val2\"),                         options=list(seriesType=\"bars\",                                      series='{1: {type:\"line\"}}')) plot(Combo)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"scatter-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Scatter chart","title":"googleVis examples","text":"","code":"Scatter <- gvisScatterChart(women,                              options=list(                               legend=\"none\",                               lineWidth=2, pointSize=0,                               title=\"Women\", vAxis=\"{title:'weight (lbs)'}\",                               hAxis=\"{title:'height (in)'}\",                                width=300, height=300)) plot(Scatter)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"bubble-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Bubble chart","title":"googleVis examples","text":"","code":"Bubble <- gvisBubbleChart(Fruits, idvar=\"Fruit\",                            xvar=\"Sales\", yvar=\"Expenses\",                           colorvar=\"Year\", sizevar=\"Profit\",                           options=list(                             hAxis='{minValue:75, maxValue:125}')) plot(Bubble)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"customizing-lines","dir":"Articles","previous_headings":"Demonstration of googleVis > Bubble chart","what":"Customizing Lines","title":"googleVis examples","text":"","code":"Dashed <-  gvisLineChart(df, xvar=\"country\", yvar=c(\"val1\",\"val2\"),                         options=list(                           series=\"[{color:'green', targetAxisIndex: 0,                            lineWidth: 1, lineDashStyle: [2, 2, 20, 2, 20, 2]},                            {color: 'blue',targetAxisIndex: 1,                            lineWidth: 2, lineDashStyle: [4, 1]}]\",                           vAxes=\"[{title:'val1'}, {title:'val2'}]\"                         )) plot(Dashed)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"customizing-points","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Customizing points","title":"googleVis examples","text":"","code":"M <- matrix(nrow=6,ncol=6) M[col(M)==row(M)] <- 1:6 dat <- data.frame(X=1:6, M) SC <- gvisScatterChart(dat,                         options=list(                          title=\"Customizing points\",                          legend=\"right\",                          pointSize=30,                          series=\"{                               0: { pointShape: 'circle' },                               1: { pointShape: 'triangle' },                               2: { pointShape: 'square' },                               3: { pointShape: 'diamond' },                               4: { pointShape: 'star' },                               5: { pointShape: 'polygon' }                               }\")) plot(SC)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"add-edit-button-for-on-the-fly-customisation","dir":"Articles","previous_headings":"Demonstration of googleVis > Customizing points","what":"Add edit button for on the fly customisation","title":"googleVis examples","text":"option available charts well.","code":"Line4 <-  gvisLineChart(df, \"country\", c(\"val1\",\"val2\"),                         options=list(gvis.editor=\"Edit me!\")) plot(Line4)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"a-chart-with-many-options-set","dir":"Articles","previous_headings":"Demonstration of googleVis > Customizing points","what":"A chart with many options set","title":"googleVis examples","text":"","code":"Line3 <-  gvisLineChart(df, xvar=\"country\", yvar=c(\"val1\",\"val2\"),                         options=list(                           title=\"Hello World\",                           titleTextStyle=\"{color:'red',                                             fontName:'Courier',                                             fontSize:16}\",                                                    backgroundColor=\"#D3D3D3\",                                                     vAxis=\"{gridlines:{color:'red', count:3}}\",                           hAxis=\"{title:'Country', titleTextStyle:{color:'blue'}}\",                           series=\"[{color:'green', targetAxisIndex: 0},                                     {color: 'orange',targetAxisIndex:1}]\",                           vAxes=\"[{title:'val1'}, {title:'val2'}]\",                           legend=\"bottom\",                           curveType=\"function\",                           width=500,                           height=300                                                  )) plot(Line3)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"candlestick-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Candlestick chart","title":"googleVis examples","text":"","code":"Candle <- gvisCandlestickChart(OpenClose,                                 options=list(legend='none')) plot(Candle)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"pie-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Pie chart","title":"googleVis examples","text":"","code":"Pie <- gvisPieChart(CityPopularity) plot(Pie)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"gauge","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Gauge","title":"googleVis examples","text":"","code":"Gauge <-  gvisGauge(CityPopularity,                      options=list(min=0, max=800, greenFrom=500,                                  greenTo=800, yellowFrom=300, yellowTo=500,                                  redFrom=0, redTo=300, width=400, height=300)) plot(Gauge)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"geo-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Geo Chart","title":"googleVis examples","text":"","code":"Geo=gvisGeoChart(Exports, locationvar=\"Country\",                   colorvar=\"Profit\",                  options=list(projection=\"kavrayskiy-vii\")) plot(Geo)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"example-showing-us-data-by-state","dir":"Articles","previous_headings":"Demonstration of googleVis > Geo Chart","what":"Example showing US data by state","title":"googleVis examples","text":"","code":"require(datasets) states <- data.frame(state.name, state.x77) GeoStates <- gvisGeoChart(states, \"state.name\", \"Illiteracy\",                           options=list(region=\"US\",                                         displayMode=\"regions\",                                         resolution=\"provinces\",                                        width=600, height=400)) plot(GeoStates)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"show-hurricane-andrew-1992-storm-track-with-markers","dir":"Articles","previous_headings":"Demonstration of googleVis > Geo Chart","what":"Show Hurricane Andrew (1992) storm track with markers","title":"googleVis examples","text":"","code":"GeoMarker <- gvisGeoChart(Andrew, \"LatLong\",                            sizevar='Speed_kt',                           colorvar=\"Pressure_mb\",                            options=list(region=\"US\")) plot(GeoMarker)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"table","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Table","title":"googleVis examples","text":"Click column header sort rows","code":"Table <- gvisTable(Stock,                     formats=list(Value=\"#,###\")) plot(Table)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"table-with-pages","dir":"Articles","previous_headings":"Demonstration of googleVis > Table","what":"Table with pages","title":"googleVis examples","text":"","code":"PopTable <- gvisTable(Population,                        formats=list(Population=\"#,###\",                                    '% of World Population'='#.#%'),                       options=list(page='enable')) plot(PopTable)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"org-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Org chart","title":"googleVis examples","text":"Double click parent collapse children.","code":"Org <- gvisOrgChart(Regions,                      options=list(width=600, height=250,                                  size='large', allowCollapse=TRUE)) plot(Org)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"tree-map","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Tree Map","title":"googleVis examples","text":"Left mouse-click drill , right mouse-click move level.","code":"Tree <- gvisTreeMap(Regions,                       \"Region\", \"Parent\",                      \"Val\", \"Fac\",                      options=list(fontSize=16)) plot(Tree)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"annotation-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Annotation chart","title":"googleVis examples","text":"","code":"Anno <- gvisAnnotationChart(Stock,                              datevar=\"Date\",                             numvar=\"Value\",                              idvar=\"Device\",                             titlevar=\"Title\",                              annotationvar=\"Annotation\",                             options=list(                               width=600, height=350,                               fill=10, displayExactValues=TRUE,                               colors=\"['#0000ff','#00ff00']\") ) plot(Anno)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"sankey-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Sankey chart","title":"googleVis examples","text":"","code":"datSK <- data.frame(From=c(rep(\"A\",3), rep(\"B\", 3)),                     To=c(rep(c(\"X\", \"Y\", \"Z\"),2)),                     Weight=c(5,7,6,2,9,4))  Sankey <- gvisSankey(datSK, from=\"From\", to=\"To\", weight=\"Weight\",                      options=list(                        sankey=\"{link: {color: { fill: '#d799ae' } },                             node: { color: { fill: '#a61d4c' },                             label: { color: '#871b47' } }}\")) plot(Sankey)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"histogram","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Histogram","title":"googleVis examples","text":"","code":"set.seed(123) datHist=data.frame(A=rpois(100, 20),                    B=rpois(100, 5),                    C=rpois(100, 50))  Hist <- gvisHistogram(datHist, options=list(   legend=\"{ position: 'top', maxLines: 2 }\",   colors=\"['#5C3292', '#1A8763', '#871B47']\",   width=400, height=360)) plot(Hist)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"calendar-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Calendar chart","title":"googleVis examples","text":"","code":"Cal <- gvisCalendar(Cairo,                      datevar=\"Date\",                      numvar=\"Temp\",                     options=list(                       title=\"Daily temperature in Cairo\",                       height=320,                       calendar=\"{yearLabel: { fontName: 'Times-Roman',                                fontSize: 32, color: '#1A8763', bold: true},                                cellSize: 10,                                cellColor: { stroke: 'red', strokeOpacity: 0.2 },                                focusedCellColor: {stroke:'red'}}\") ) plot(Cal)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"timeline-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Timeline chart","title":"googleVis examples","text":"","code":"datTL <- data.frame(Position=c(rep(\"President\", 3), rep(\"Vice\", 3)),                     Name=c(\"Washington\", \"Adams\", \"Jefferson\",                            \"Adams\", \"Jefferson\", \"Burr\"),                     start=as.Date(x=rep(c(\"1789-03-29\", \"1797-02-03\",                                            \"1801-02-03\"),2)),                     end=as.Date(x=rep(c(\"1797-02-03\", \"1801-02-03\",                                          \"1809-02-03\"),2)))  Timeline <- gvisTimeline(data=datTL,                           rowlabel=\"Name\",                          barlabel=\"Position\",                          start=\"start\",                           end=\"end\",                          options=list(timeline=\"{groupByRowLabel:false}\",                                       backgroundColor='#ffd',                                        height=350,                                       colors=\"['#cbb69d', '#603913', '#c69c6e']\")) plot(Timeline)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"gantt-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Gantt chart","title":"googleVis examples","text":"","code":"daysToMilliseconds <- function(days){   days * 24 * 60 * 60 * 1000 }  dat <- data.frame(   taskID = c(\"Research\", \"Write\", \"Cite\", \"Complete\", \"Outline\"),   taskName = c(\"Find sources\", \"Write Paper\",  \"Create bibliography\", \"Hand in paper\", \"Outline paper\"),   resource = c(NA, \"write\", \"write\", \"complete\", \"write\"),   start = c(as.Date(\"2015-01-01\"), NA, NA, NA, NA),   end = as.Date(c(\"2015-01-05\", \"2015-01-09\", \"2015-01-07\", \"2015-01-10\", \"2015-01-06\")),   duration = c(NA, daysToMilliseconds(c(3, 1, 1, 1))),   percentComplete = c(100, 25, 20, 0, 100),   dependencies = c(NA, \"Research, Outline\", \"Research\", \"Cite, Write\", \"Research\") )  gntt <- gvisGantt(dat, taskID = \"taskID\",                   taskName = \"taskName\",                    resource = \"resource\",                   start = \"start\",                   end = \"end\",                    duration = \"duration\",                   percentComplete = \"percentComplete\",                   dependencies = \"dependencies\")  plot(gntt)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"word-tree-chart","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Word tree chart","title":"googleVis examples","text":"","code":"wt1 <- gvisWordTree(Cats, textvar = \"Phrase\") plot(wt1)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"merging-charts","dir":"Articles","previous_headings":"Demonstration of googleVis","what":"Merging charts","title":"googleVis examples","text":"","code":"G <- gvisGeoChart(Exports, \"Country\", \"Profit\",                    options=list(width=300, height=300)) T <- gvisTable(Exports,                 options=list(width=220, height=300))  GT <- gvisMerge(G,T, horizontal=TRUE)  plot(GT)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"flash-charts","dir":"Articles","previous_headings":"","what":"Flash charts","title":"googleVis examples","text":"following chart requires Flash player.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_examples.html","id":"motion-chart","dir":"Articles","previous_headings":"Flash charts","what":"Motion chart","title":"googleVis examples","text":"Google motion chart requires Flash, longer supported browsers. alternative plotly::ggplotly. see https://plotly.com/r/animations/#mulitple-trace-animations can change displaying settings via browser, e.g. level opacity non-selected items, chart type. state string ‘Advanced’ tab can used set settings via R. Just copy past string browser argument state options list. example motion chart, initial line chart displayed.","code":"Motion=gvisMotionChart(Fruits,                         idvar=\"Fruit\",                         timevar=\"Year\") ## Warning in gvisMotionChart(Fruits, idvar = \"Fruit\", timevar = \"Year\"): Flash charts are no longer supported by most browsers. ## An alternative is plotly::ggplotly. ## For more see https://plotly.com/r/animations/#mulitple-trace-animations plot(Motion) myStateSettings <-' {\"xZoomedDataMin\":1199145600000,\"colorOption\":\"2\", \"duration\":{\"timeUnit\":\"Y\",\"multiplier\":1},\"yLambda\":1, \"yAxisOption\":\"4\",\"sizeOption\":\"_UNISIZE\", \"iconKeySettings\":[],\"xLambda\":1,\"nonSelectedAlpha\":0, \"xZoomedDataMax\":1262304000000,\"iconType\":\"LINE\", \"dimensions\":{\"iconDimensions\":[\"dim0\"]}, \"showTrails\":false,\"uniColorForNonSelected\":false, \"xAxisOption\":\"_TIME\",\"orderedByX\":false,\"playDuration\":15000, \"xZoomedIn\":false,\"time\":\"2010\",\"yZoomedDataMin\":0, \"yZoomedIn\":false,\"orderedByY\":false,\"yZoomedDataMax\":100} ' M <- gvisMotionChart(Fruits, \"Fruit\", \"Year\", options=list(state=myStateSettings)) ## Warning in gvisMotionChart(Fruits, \"Fruit\", \"Year\", options = list(state = myStateSettings)): Flash charts are no longer supported by most browsers. ## An alternative is plotly::ggplotly. ## For more see https://plotly.com/r/animations/#mulitple-trace-animations plot(M) ## See demo(package='googleVis') for other available demos."},{"path":[]},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"motivation","dir":"Articles","previous_headings":"Introduction","what":"Motivation","title":"Introduction to googleVis","text":"2006 Hans Rosling gave inspiring talk TED (Rosling 2006) social economic developments world past 50 years, challenged views perceptions many listeners. Rosling used extensive data analysis reach conclusions. visualise talk, team Gapminder (Foundation 2010) developed animated bubble charts, aka motion charts. Rosling’s presentation popularised idea use interactive charts. One year later software behind Gapminder bought Google integrated motion charts Google Charts API (Inc. 2012a), formerly known Google Visualisation API. 2010 Sebastián Pérez Saaibi (Saaibi 2010) presented R/Rmetrics Workshop Computational Finance Financial Engineering, idea use Google motion charts visualise R output R.rsp package (Bengtsson 2012). Inspired talks desire use interactive data visualisation tools foster dialogue data analysts others authors vignette started development googleVis package (Gesmann Castillo 2011) August 2010.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"google-chart-tools","dir":"Articles","previous_headings":"Introduction > Motivation","what":"Google Chart Tools","title":"Introduction to googleVis","text":"Google Charts API (Inc. 2012a) allows users create interactive charts part Google documents, spreadsheets web pages. text, focus usage API part web pages. Google Public Data Explorer (Inc. 2012c) provides good example, demonstrating use interactive charts can help analyse data. Please note, charts rendered browser. charting data can either embedded HTML file read dynamically. key Google Charts data structured DataTable (Inc. 2012d), googleVis package helps, transforms R data frames JSON (JSON.org 2006) objects, using jsonlite package (Ooms 2014), basis DataTable. example shall look html-code motion chart Google’s visualisation gallery (Inc. 2012b). code data processed rendered browser submitted server1. notice HTML code five generic parts: references Google’s AJAX (l. 4) Visualisation API (ll. 7 - 8), data visualise DataTable (ll. 11 - 24), instance call create chart (ll. 25 - 26), method call draw chart including options, shown width height (l. 27), HTML <div> element add chart page (ll. 32 – 34). principles hold true interactive charts Google Chart Tools, see examples next section. However, use API read Google Terms Service (Inc 2012).","code":"1 <html>  2  <head>  3   <script type=\"text/javascript\"   4     src=\"https://www.google.com/jsapi\">  5   <\/script>  6   <script type=\"text/javascript\">  7     google.load('visualization', '1',   8      {'packages':['motionchart']});  9    google.setOnLoadCallback(drawChart); 10    function drawChart() { 11    var data=new google.visualization.DataTable(); 12    data.addColumn('string', 'Fruit'); 13    data.addColumn('date', 'Date'); 14    data.addColumn('number', 'Sales'); 15    data.addColumn('number', 'Expenses'); 16    data.addColumn('string', 'Location'); 17    data.addRows([ 18    ['Apples',new Date(1988,0,1),1000,300,'East'], 19    ['Oranges',new Date(1988,0,1),1150,200,'West'], 20    ['Bananas',new Date(1988,0,1),300,250,'West'], 21    ['Apples',new Date(1989,6,1),1200,400,'East'], 22    ['Oranges',new Date(1989,6,1),750,150,'West'], 23    ['Bananas',new Date(1989,6,1),788,617,'West'] 24    ]); 25    var chart=new google.visualization.MotionChart( 26      document.getElementById('chart_div')); 27    chart.draw(data, {width: 600, height:300}); 28   } 29   <\/script> 30  <\/head> 31  <body> 32   <div id=\"chart_div\"  33        style=\"width:600px; height:300px;\"> 34   <\/div> 35  <\/body> 36 <\/html>"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"the-googlevis-package","dir":"Articles","previous_headings":"","what":"The googleVis package","title":"Introduction to googleVis","text":"googleVis package provides interface R Google Chart Tools. functions package allow user visualise data stored R data frames Google Charts. output googleVis function HTML code contains data references JavaScript functions hosted Google. browser Internet connection required view output, chart types, notably motion charts, also Flash. Examples several chart types shown , combined gvisMerge function.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"sec:Installation","dir":"Articles","previous_headings":"The googleVis package","what":"Installation","title":"Introduction to googleVis","text":"can install googleVis usual way CRAN, e.g.: installation successful command library(googleVis) gives following message:","code":"install.packages('googleVis') library(googleVis) ##  ## Welcome to googleVis version 0.6.13 ##  ## Please read Google's Terms of Use ## before you start using the package: ## https://developers.google.com/terms/ ##  ## Note, the plot method of googleVis will by default use ## the standard browser to display its output. ##  ## See the googleVis package vignettes for more details, ## or visit https://mages.github.io/googleVis/. ##  ## To suppress this message use: ## suppressPackageStartupMessages(library(googleVis))"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"concepts-of-the-googlevis-package","dir":"Articles","previous_headings":"","what":"Concepts of the googleVis package","title":"Introduction to googleVis","text":"individual functions googleVis package documented help pages. cover basic concepts package. example, show generate geo chart. works similarly APIs. examples covered demos2 googleVis package. design visualisation functions fairly generic. name visualisation function 'gvis' + ChartType. geo chart : data input data.frame, locationvar, colorvar, sizevar hovervar specify various columns used plot. Display options set optional list, discuss detail later. options data requirements follow Google Charts API documented help pages, see argument chartid allows user set chart ID output chart manually. argument missing random ID using tempfile(pattern='') generated. Unique chart IDs required place one chart web page. output googleVis function list lists (nested list) containing information chart type, chart ID HTML code sub-list header, chart, caption footer. idea behind concept users can get complete web page, time offer facility extract specific parts, chart . particularly helpful package functions used solutions user wants feed visualisation output sites. output googleVis function class gvis list. Generic print (print.gvis) plot (plot.gvis) functions exist ease handling objects. illustrate concept shall create Geo chart using Exports data set.","code":"gchart <-  gvisGeoChart(data,                      locationvar = \"\",                      colorvar = \"\",                      sizevar = \"\",                      hovervar = \"\",                      options = list(),                      chartid) help('gvisGeoChart')"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"geo-chart-example","dir":"Articles","previous_headings":"Concepts of the googleVis package","what":"Geo Chart Example","title":"Introduction to googleVis","text":"Following documentation Google Geo Chart API need data set least one column location variable. example use Exports data set: use columns 'Country' 'Profit' location colour variable respectively. structural output gvisGeoChart list lists described first two items list contain information chart type used individual chart ID: html output list header, chart, caption footer. allows user extract certain parts page, create complete html page. header part html page basic html formatting tags: used print statement tag 'header' instead gchart$html$header achieve formatted screen output. output cat(gchart$html$chart). actual Google visualisation code stored data named character vector chart item HTML list. chart made several JavaScript HTML statements. Please notice JavaScript functions uniquely named information chart ID. concept allows user get chart code directly specific parts; see examples help page print.gvis details. complete chart can displayed via: Similarly can also access specific components chart, e.g. (output truncated) basic chart caption html footer final items html list (output truncated):","code":"data(Exports) Exports ##          Country Profit Online ## 1        Germany      3   TRUE ## 2         Brazil      4  FALSE ## 3  United States      5   TRUE ## 4         France      4   TRUE ## 5        Hungary      3  FALSE ## 6          India      2   TRUE ## 7        Iceland      1  FALSE ## 8         Norway      4   TRUE ## 9          Spain      5   TRUE ## 10        Turkey      1  FALSE gchart <-  gvisGeoChart(data = Exports,                        locationvar='Country',                       colorvar='Profit',                       options=list(projection=\"kavrayskiy-vii\",                                     width=400, height=200)) str(gchart) ## List of 3 ##  $ type   : chr \"GeoChart\" ##  $ chartid: chr \"GeoChartID3ade3d936cba\" ##  $ html   :List of 4 ##   ..$ header : chr \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0  ##   ..$ chart  : Named chr [1:7] \"<!-- GeoChart generated in R 4.2.0 ##   .. ..- attr(*, \"names\")= chr [1:7] \"jsHeader\" \"jsData\" \"jsDrawCh ##   ..$ caption: chr \"<div><span>Data: Exports &#8226; Chart ID: <a  ##   ..$ footer : chr \"\\n<!-- htmlFooter -->\\n<span> \\n  R version 4. ##  - attr(*, \"class\")= chr [1:2] \"gvis\" \"list\" gchart$type ## [1] \"GeoChart\" gchart$chartid ## [1] \"GeoChartID3ade3d936cba\" print(gchart, tag='header') ## <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" ##   \"https://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"> ## <html xmlns=\"https://www.w3.org/1999/xhtml\"> ## <head> ## <title>GeoChartID3ade3d936cba<\/title> ## <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" /> ## <style type=\"text/css\"> ## body { ##   color: #444444; ##   font-family: Arial,Helvetica,sans-serif; ##   font-size: 75%; ##   } ##   a { ##   color: #4D87C7; ##   text-decoration: none; ## } ## <\/style> ## <\/head> ## <body> names(gchart$html$chart) ## [1] \"jsHeader\"       \"jsData\"         \"jsDrawChart\"    \"jsDisplayChart\" ## [5] \"jsFooter\"       \"jsChart\"        \"divChart\" print(gchart, tag='chart')  ## or cat(gchart$html$chart) ## <!-- GeoChart generated in R 4.2.0 by googleVis 0.6.13 package --> ## <!-- Fri Apr 22 21:18:08 2022 --> ##  ##  ## <!-- jsHeader --> ## <script type=\"text/javascript\"> ##   ## // jsData  ## function gvisDataGeoChartID3ade3d936cba () { ## var data = new google.visualization.DataTable(); ## var datajson = ## [ ##  [ ## \"Germany\", ## 3 ## ], ## [ ## \"Brazil\", ## 4 ## ], ## [ ## \"United States\", ## 5 ## ], ## [ ## \"France\", ## 4 ## ], ## [ ## \"Hungary\", ## 3 ## ], ## [ ## \"India\", ## 2 ## ], ## [ ## \"Iceland\", ## 1 ## ], ## [ ## \"Norway\", ## 4 ## ], ## [ ## \"Spain\", ## 5 ## ], ## [ ## \"Turkey\", ## 1 ## ]  ## ]; ## data.addColumn('string','Country'); ## data.addColumn('number','Profit'); ## data.addRows(datajson); ## return(data); ## } ##   ## // jsDrawChart ## function drawChartGeoChartID3ade3d936cba() { ## var data = gvisDataGeoChartID3ade3d936cba(); ## var options = {}; ## options[\"width\"] = 400; ## options[\"height\"] = 200; ## options[\"projection\"] = \"kavrayskiy-vii\"; ##  ##  ##     var chart = new google.visualization.GeoChart( ##     document.getElementById('GeoChartID3ade3d936cba') ##     ); ##     chart.draw(data,options); ##      ##  ## } ##    ##   ## // jsDisplayChart ## (function() { ## var pkgs = window.__gvisPackages = window.__gvisPackages || []; ## var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; ## var chartid = \"geochart\"; ##    ## // Manually see if chartid is in pkgs (not all browsers support Array.indexOf) ## var i, newPackage = true; ## for (i = 0; newPackage && i < pkgs.length; i++) { ## if (pkgs[i] === chartid) ## newPackage = false; ## } ## if (newPackage) ##   pkgs.push(chartid); ##    ## // Add the drawChart function to the global list of callbacks ## callbacks.push(drawChartGeoChartID3ade3d936cba); ## })(); ## function displayChartGeoChartID3ade3d936cba() { ##   var pkgs = window.__gvisPackages = window.__gvisPackages || []; ##   var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; ##   window.clearTimeout(window.__gvisLoad); ##   // The timeout is set to 100 because otherwise the container div we are ##   // targeting might not be part of the document yet ##   window.__gvisLoad = setTimeout(function() { ##   var pkgCount = pkgs.length; ##   google.load(\"visualization\", \"1\", { packages:pkgs, callback: function() { ##   if (pkgCount != pkgs.length) { ##   // Race condition where another setTimeout call snuck in after us; if ##   // that call added a package, we must not shift its callback ##   return; ## } ## while (callbacks.length > 0) ## callbacks.shift()(); ## } }); ## }, 100); ## } ##   ## // jsFooter ## <\/script> ##   ## <!-- jsChart -->   ## <script type=\"text/javascript\" src=\"https://www.google.com/jsapi?callback=displayChartGeoChartID3ade3d936cba\"><\/script> ##   ## <!-- divChart --> ##    ## <div id=\"GeoChartID3ade3d936cba\"  ##   style=\"width: 400; height: 200;\"> ## <\/div> cat(gchart$html$chart['jsChart']) # or print(gchart, 'jsChart') ##  ## <!-- jsChart -->   ## <script type=\"text/javascript\" src=\"https://www.google.com/jsapi?c print(gchart, tag='caption') ## <div><span>Data: Exports &#8226; Chart ID: <a href=\"Chart_GeoChart print(gchart, tag='footer') ##  ## <!-- htmlFooter --> ## <span>  ##   R version 4.2.0 (2022-04-22)  ##   &#8226; <a href=\"https://developers.google.com/terms/\">Google Te ## <\/span><\/div> ## <\/body> ## <\/html>"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"displaying-gvis-objects-locally","dir":"Articles","previous_headings":"","what":"Displaying gvis objects locally","title":"Introduction to googleVis","text":"display page locally, simply type: plot method gvis-objects creates HTML files temporary folder using type chart ID information object display output using R built-web server. Note chart caption provides link chart code via chart ID copy paste. R command tempdir() show path per-session temporary directory, files written. can write chart local html file via print command file argument, e.g. Alternatively use function plot.gvis explicitly, e.g. suppose html file stored /Users/JoeBloggs/myGoogleVisChart.html. Using plot.gvis file copied temporary directory displayed via R HTTP help server , way gvis-object:","code":"plot(gchart)  # returns invisibly the file name print(gchart, file=\"myGoogleVisChart.html\") plot.gvis(\"/Users/JoeBloggs/myGoogleVisChart.html\")"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"setting-options","dir":"Articles","previous_headings":"","what":"Setting options","title":"Introduction to googleVis","text":"Setting various options googleVis objects can bit cumbersome first. options follow Google Charts API can set via named list using argument options. following example, create line chart set various options: can see example , simpler options can set name=value, e.g. width=500, complex options sub-components listed curly brackets {} arrays [], e.g. define two axes. Generally, following rules apply: parameters names include “.” set single value, e.g. width height. set like one R, options=list(width=200, height=300). Boolean arguments set either TRUE FALSE, using R syntax. parameters names include “.” set multiple values, e.g. color, wrapped [ ], e.g.  options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") parameters names include “.” present parameters several sub-options set string wrapped “{ }”. values sub-options set via parameter:value. Boolean values stated 'true' 'false'. example Google documentation states formatting options vertical axis vAxis.format. parameter can set R : options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g.  titleTextStyle.color, titleTextStyle.fontName titleTextStyle.fontSize, can combined one list item : options=list(titleTextStyle=\"{color:'red',fontName:'Courier', fontSize:16}\") parameters can one value per sub-options wrapped [ ]. example set labels left right axes use: options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\")","code":"df <- data.frame(country=c(\"US\", \"GB\", \"BR\"),                   val1=c(1,3,4), val2=c(23,12,32))  Line <-  gvisLineChart(df, xvar=\"country\", yvar=c(\"val1\",\"val2\"),                        options=list(                          title=\"Hello World\",                          titleTextStyle=\"{color:'red',                                             fontName:'Courier',                                             fontSize:16}\",                                                   backgroundColor=\"#D3D3D3\",                                                    vAxis=\"{gridlines:{color:'red', count:3}}\",                          hAxis=\"{title:'Country', titleTextStyle:{color:'blue'}}\",                          series=\"[{color:'green', targetAxisIndex: 0},                                      {color: 'orange',targetAxisIndex:1}]\",                          vAxes=\"[{title:'val1'}, {title:'val2'}]\",                          legend=\"bottom\",                          curveType=\"function\",                          width=500,                          height=300                                                 )) plot(Line)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"chart-editor","dir":"Articles","previous_headings":"Setting options","what":"Chart Editor","title":"Introduction to googleVis","text":"special option charts gvis.editor, adds edit button page, allowing user edit, change customise chart fly. content option gvis.editor describes label browser button.","code":"Editor <- gvisLineChart(df, options=list(gvis.editor='Edit me!')) plot(Editor)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"embedding-googlevis-in-web-sites","dir":"Articles","previous_headings":"","what":"Embedding googleVis in web sites","title":"Introduction to googleVis","text":"Suppose existing web page like integrate output googleVis function, gvisLineChart. case need chart output gvisLineChart. can either copy paste output R console existing html page, write content directly file process .","code":"print(gchart, 'chart')  ## or cat(gchart$html$chart) print(gchart, 'chart', file='myfilename')"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"using-googlevis-with-shiny","dir":"Articles","previous_headings":"","what":"Using googleVis with shiny","title":"Introduction to googleVis","text":"Shiny package RStudio, makes incredibly easy build interactive web applications R. version 0.4.0 googleVis support shiny apps added. Joe Cheng contributed renderGvis function allows users use googleVis output shiny similar way plotting functions. following example taken help file renderGvis. displays scatter chart user can select data set displayed. can run example locally following statement.","code":"# server.R library(googleVis)  shinyServer(function(input, output) {   datasetInput <- reactive({     switch(input$dataset,            \"rock\" = rock,            \"pressure\" = pressure,            \"cars\" = cars)   })      output$view <- renderGvis({     gvisScatterChart(datasetInput())   }) })  # ui.R shinyUI(pageWithSidebar(   headerPanel(\"googleVis on Shiny\"),   sidebarPanel(     selectInput(\"dataset\", \"Choose a dataset:\",                  choices = c(\"rock\", \"pressure\", \"cars\"))   ),   mainPanel(     htmlOutput(\"view\")   ) )) library(shiny) runApp(system.file(\"shiny/\", package=\"googleVis\"))"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"setting-default-behaviour-of-print-gvis-and-plot-gvis","dir":"Articles","previous_headings":"","what":"Setting default behaviour of print.gvis and plot.gvis","title":"Introduction to googleVis","text":"googleVis version 0.3.2 function plot.gvis gained argument print.gvis: tag. default tag argument set NULL plot.gvis plot function display output browser window. However, tag NULL function plot.gvis behave exactly like print.gvis. default tag can set functions globally via options() function. package load googleVis sets options(gvis.print.tag='html') options(gvis.plot.tag=NULL). Suppose set options(gvis.plot.tag='chart') following plot statements print chart part gvis-object , without opening browser window. might seem bit odd first, yet becomes helpful write R Markdown files knitr files packages R.rsp. draft file may want see output googleVis interactive way, set options(gvis.plot.tag=NULL) top file change setting 'chart' parse file, say knitr. ensure plot statements return HTML code chart, rather opening browser windows.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"using-googlevis-with-knitr","dir":"Articles","previous_headings":"","what":"Using googleVis with knitr","title":"Introduction to googleVis","text":"Using googleVis knitr (Xie 2013) convenient way creating interactive reproducible reports. approach taken knitr similar Sweave, can combine R code text formatting tags. However, knitr can also export HTML, required embed googleVis charts. include googleVis output knitr document set self_contained option false YAML header: Furthermore, chunk option results set 'asis', html output written markdown file. can either use print statement: alternative change behaviour plot function via setting options(gvis.plot.tag = 'chart'). setting plot(x) longer open browser window, produce output print(x, tag='chart'), x gvis-object. Hence, setting option gvis.plot.tag knitr markdown Rmd-file 'chart' automatically turn following plot statements html output. Note can use options() command knitr file switch interactive mode, likely experiment, via copying pasting R code console running knit whole file. comprehensive example given help file ?plot.gvis.","code":"--- title: \"My document\" output:   html_document:     self_contained: false --- ```{r results='asis'} gchart <- gvisColumnChart(CityPopularity, 'City', 'Popularity',                         options=list(width=550, height=450,                                      legend='none')) print(gchart, 'chart') ```"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"using-googlevis-in-presentations","dir":"Articles","previous_headings":"","what":"Using googleVis in presentations","title":"Introduction to googleVis","text":"Google Chart Tools designed web pages, surprise can difficult impossible embed googleVis output traditional presentation software like MS PowerPoint, Google Docs, OpenOffice Impress Apple Keynote. easiest way include screen shots slide links live web pages. approach requires presenter switch applications talk. can fun, quite often . alternative build presentation web page . popular approach slidify package Ramnath Vaidyanathan, (Vaidyanathan 2012) builds knitr Markdown approach previous section. example slidify presentation googleVis tutorial given useR! conference 2013, Gesmann Castillo (2013).","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"using-trendlines-with-googlevis","dir":"Articles","previous_headings":"","what":"Using Trendlines with googleVis","title":"Introduction to googleVis","text":"trendline line superimposed chart revealing overall direction data. Google Charts can automatically generate trendlines Scatter Charts, Bar Charts, Column Charts Line Charts. details visit: https://developers.google.com/chart/interactive/docs/gallery/trendlines","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"linear-trend-line","dir":"Articles","previous_headings":"Using Trendlines with googleVis","what":"Linear trend line","title":"Introduction to googleVis","text":"","code":"plot(   gvisScatterChart(women, options=list(trendlines=\"0\")) )"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"exponential-trend-line-with-equation-shown-in-legend","dir":"Articles","previous_headings":"Using Trendlines with googleVis","what":"Exponential trend line with equation shown in legend","title":"Introduction to googleVis","text":"","code":"plot(   gvisScatterChart(women, options=list(     trendlines=\"{0: { type: 'exponential',                        visibleInLegend: 'true',                       color: 'green',                      lineWidth: 10,                      opacity: 0.5}}\",     chartArea=\"{left:50,top:20,width:'50%',height:'75%'}\")) )"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"add-trend-line-to-column-chart","dir":"Articles","previous_headings":"Using Trendlines with googleVis","what":"Add trend line to column chart","title":"Introduction to googleVis","text":"","code":"dat <- data.frame(val1=c(1,3,4,5,6,8),                    val2=c(12,23,32,40,50,55)) plot(   gvisColumnChart(dat,                   options=list(trendlines=\"{0: {}}\")) )"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"changing-labels-in-legend","dir":"Articles","previous_headings":"Using Trendlines with googleVis","what":"Changing labels in legend","title":"Introduction to googleVis","text":"","code":"dat$val3 <- c(5,6,10,12,15,20) plot(   gvisColumnChart(dat,                   options=list(trendlines=\"{                           0: {                             labelInLegend: 'Trendline 1',                             visibleInLegend: true,},                            1:{                             labelInLegend: 'Trendline 2',                             visibleInLegend: true}                           }\",                           chartArea=\"{left:50,top:20,                                       width:'50%',height:'75%'}\"                   )) )"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"using-roles-via-googlevis","dir":"Articles","previous_headings":"","what":"Using Roles via googleVis","title":"Introduction to googleVis","text":"Roles add ability pass columns processing downstream. Role columns must follow column pertain . Proper naming conventions must observed. example, roles fulfilling tooltip roles must called “foo.blah.tooltip”. details see Google documentation. following examples help illustrate concept. first example uses data set additional column pop.html.tooltip first 11 letters Latin alphabet. column mapped automatically tooltip user hovers chart point. HTML code can embedded tooltip well, option isHtml set true. Often helpful highlight certain parts data. Google API distinguishes certainty emphasis. similar way additional columns boolean values added data. Using roles column bar charts specifics. Instead ‘emphasize’ use ‘style’ change colours. Setting annotations style ‘line’ allows adding little reference lines plot. Intervals help add error bars, confidence levels, etc. Note options set either via interval intervals, set intervals. examples give indication can achieved intervals. details visit Google documentation. tool tips geo charts need little work around, Tooltip.header variable set empty string:","code":"df <- data.frame(year=1:11,pop=1:11,                  pop.html.tooltip=letters[1:11]) plot(    gvisScatterChart(df) ) df <- data.frame(year=1:11, x=1:11,                  x.scope=c(rep(TRUE, 8), rep(FALSE, 3)),                  y=11:1, y.html.tooltip=LETTERS[11:1],                                   y.certainty=c(rep(TRUE, 5), rep(FALSE, 6)),                  y.emphasis=c(rep(FALSE, 4), rep(TRUE, 7))) plot(   gvisScatterChart(df,options=list(lineWidth=2)) ) dat <- data.frame(Year=2010:2013,                   Sales=c(600, 1500, 800, 1000),                   Sales.html.tooltip=c('$600K in our first year!',                                        'Sunspot activity made this our best year ever!',                                        '$800K in 2012.',                                        '$1M in sales last year.'),                   Sales.certainty=c(TRUE, FALSE, TRUE, FALSE)) plot(   gvisColumnChart(dat, xvar='Year',                    yvar=c('Sales', 'Sales.certainty')   ) ) df <- data.frame(country=c(\"US\", \"GB\", \"BR\"),                   val1=c(1,3,4),                   val1.emphasis=c(TRUE, TRUE, FALSE),                  val2=c(23,12,32)) plot(   gvisLineChart(df, xvar=\"country\",                  yvar=c(\"val1\", \"val1.emphasis\")   ) ) plot(   gvisLineChart(df, xvar=\"country\",                  yvar=c(\"val1\", \"val1.emphasis\", \"val2\")   ) ) dat <- data.frame(Year=2010:2013,                    Sales=c(600, 1500, 800, 1000),                   Sales.annotation=c('First year', NA, NA, 'Last Year'),                   Sales.annotationText=c('$600K in our first year!',                                        NA,                                        NA,                                        '$1M in sales last year.'))        plot(   gvisLineChart(dat, xvar='Year',                    yvar=c('Sales',                          'Sales.annotation',                          'Sales.annotationText'),                          options=list(annotations = \"{style:'line'}\")   ) ) df <- data.frame(Year=2013:2014, Sales=c(120, 130),                   Sales.interval.1=c(100,110),                   Sales.interval.2=c(140, 150),                  Sales.interval.3=c(90, 100),                  Sales.interval.4=c(150, 170),                  Sales.style=c('red', 'gold'),                  Sales.annotation=c(\"North\", \"South\"),                  check.names=FALSE)  plot(   gvisBarChart(df, xvar='Year',                 yvar=c('Sales',                                              'Sales.interval.1',                        'Sales.interval.2',                       'Sales.style',                       'Sales.annotation')   ) ) plot(   gvisLineChart(df, xvar='Year',                 yvar=c('Sales',                        'Sales.interval.1',                        'Sales.interval.2'),                options=list(series=\"[{color:'purple'}]\")   ) ) plot(   gvisLineChart(df, xvar='Year',                  yvar=c('Sales',                         'Sales.interval.1',                         'Sales.interval.2',                         'Sales.interval.3',                         'Sales.interval.4'),                 options=list(series=\"[{color:'purple'}]\",                              lineWidth=4,                              interval=\"{             'i1': { 'style':'line', 'color':'#D3362D', 'lineWidth': 0.5 },             'i2': { 'style':'line', 'color':'#F1CA3A', 'lineWidth': 1 },             'i3': { 'style':'line', 'color':'#5F9654', 'lineWidth': 2 },             'i4': { 'style':'line', 'color':'#5F9654', 'lineWidth': 3 }         }\")   ) ) plot(   gvisLineChart(df, xvar='Year',                  yvar=c('Sales',                         'Sales.interval.1',                         'Sales.interval.2',                         'Sales.interval.3',                         'Sales.interval.4'),                 options=list(series=\"[{color:'purple'}]\",                              lineWidth=4,                              intervals=\"{ 'style':'area' }\",                              interval=\"{                                'i1': { 'color': '#4374E0', 'style':'bars', 'barWidth':0, 'lineWidth':4, 'pointSize':10, 'fillOpacity':1 },                                'i2': { 'color': '#E49307', 'style':'bars', 'barWidth':0, 'lineWidth':4, 'pointSize':10, 'fillOpacity':1 }}\"                                                                                        )   ) ) Exports$Profit.tooltip <- paste(\"<b>Test<\/b>\", Exports$Profit) Exports$Tooltip.header <- \"\" GeoTooltip <- gvisGeoChart(   Exports,    locationvar = \"Country\",    colorvar = \"Profit\",   hovervar = \"Tooltip.header\",   options = list(tooltip = \"{isHtml: true}\") ) plot(GeoTooltip)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"beyond-r","dir":"Articles","previous_headings":"","what":"Beyond R","title":"Introduction to googleVis","text":"section present ideas go beyond usual coding R somewhat experimental.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"registering-to-catch-events","dir":"Articles","previous_headings":"Beyond R","what":"Registering to catch events","title":"Introduction to googleVis","text":"Google visualisations can fire receive events. exposes following two JavaScript methods: google.visualization.events.trigger() fires event, google.visualization.events.addListener() listens events. example registering receive selection event Google documentation: deal special case ‘select’ event ‘addListner’ method. event available visualisations acts user interactions, e.g. user selection clicks. ‘addListener’ method expects JavaScript code, can embedded gvis-object via options (undocumented) parameter gvis.listener.jscode. examples: Look selected item Wikipedia: way can use code charts, e.g. org- line charts: following advanced example selected value table displayed message box: details see demo(EventListener) Google Charts Reference.","code":"var table = new google.visualization.Table(document.getElementById('table_div')); table.draw(data, options); google.visualization.events.addListener(table, 'select', selectHandler);  function selectHandler() {   alert('A table row was selected'); } jscode <- \"window.open('https://en.wikipedia.org/wiki/'                    + data.getValue(chart.getSelection()[0].row,0)); \"  J1 <- gvisGeoChart(Exports, locationvar='Country', sizevar = 'Profit',                  options=list(dataMode=\"regions\",                                gvis.listener.jscode=jscode)) plot(J1) plot(gvisOrgChart(Regions,  options=list(gvis.listener.jscode=jscode))) plot(gvisLineChart(Regions[,c(1,3)], options=list(gvis.listener.jscode=jscode))) jscode <- \"        var sel = chart.getSelection();        var row = sel[0].row;        var text = data.getValue(row,1);        alert(text); \" J2 <- gvisTable(Population[1:5,],                  options=list(gvis.listener.jscode=jscode)) plot(J2)"},{"path":[]},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"is-there-an-alternative-for-the-flash-based-motion-chart","dir":"Articles","previous_headings":"Frequent ask questions – FAQ","what":"Is there an alternative for the Flash based motion chart","title":"Introduction to googleVis","text":"R packages provide alternatives Flash based Google motion chart, plotly, gganimate","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"can-i-use-googlevis-output-in-pdf-files","dir":"Articles","previous_headings":"Frequent ask questions – FAQ","what":"Can I use googleVis output in PDF files?","title":"Introduction to googleVis","text":", directly. Google Charts API designed dynamic web output screen paper. details see Google’s online documentation printing PNG charts.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"can-i-change-the-colour-of-the-bubbles-in-motion-charts","dir":"Articles","previous_headings":"Frequent ask questions – FAQ","what":"Can I change the colour of the bubbles in motion charts?","title":"Introduction to googleVis","text":", unfortunately . colours set Google Charts API changed user.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"why-cant-i-see-motion-charts-when-i-open-them-from-a-local-directory","dir":"Articles","previous_headings":"Frequent ask questions – FAQ","what":"Why can’t I see motion charts when I open them from a local directory?","title":"Introduction to googleVis","text":"Note Flash charts may work loaded local file due security settings, therefore require displayed via web server. However, can overcome issue changing Flash security settings. Tony Breyal posted following solution stackoverflow.com: Go https://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html Click dropbox says ’Edit location’ choose ’add location’ Click ’browse folder’ Choose folder saved HTML file Click OK","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"why-cant-i-see-motion-charts-on-my-ipadiphone","dir":"Articles","previous_headings":"Frequent ask questions – FAQ","what":"Why can’t I see motion charts on my iPad/iPhone?","title":"Introduction to googleVis","text":"Motion charts (also geo maps annotated time lines) rendered browser using Flash, unlike charts use HTML5. Unfortunately, Flash directly supported iOS devices iPads iPhones.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"how-can-i-set-axes-limits-with-googlevis","dir":"Articles","previous_headings":"Frequent ask questions – FAQ","what":"How can I set axes limits with googleVis?","title":"Introduction to googleVis","text":"Unfortunately, arguments ylim xlim. Instead, Google Charts axes options set via hAxes vAxes, ‘h’ ‘v’ indicating horizontal vertical axis. precisely, set viewWindowMode:'explicit' set viewWindow desired min max values. Additionally, wrap [{}] brackets settings sub options h/vAxes. also options minValue maxValue, allow extend axes ranges. minimal example, setting y-axis limits 0 10:","code":"dat <- data.frame(x=LETTERS[1:10],                    y=c(0, 4, -2, 2, 4, 3, 8, 15, 10, 4)) area1 <- gvisAreaChart(xvar=\"x\", yvar=\"y\", data=dat,         options=list(vAxes=\"[{viewWindowMode:'explicit',             viewWindow:{min:0, max:10}}]\",                         width=500, height=400,                          title=\"y-limits set from 0 to 10\"),             chartid=\"area1ylim\") plot(area1)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"how-do-i-deal-with-apostrophes-in-column-names","dir":"Articles","previous_headings":"Frequent ask questions – FAQ","what":"How do I deal with apostrophes in column names?","title":"Introduction to googleVis","text":"googleVis package converts data frames JSON objects. column names resulting JSON tables encapsulated single speech marks. Hence apostrophes column names input data frame encapsulated double backslash. little example:","code":"df <- data.frame(\"Year\"=c('2009', '2010'),                   \"Alice\\\\'s salary\"=c(86.1, 93.3),                   \"Bob\\\\'s salary\"=c(95.3, 100.5),                  check.names=FALSE)  gchart <- gvisColumnChart(df, options=list(vAxis='{baseline:0}',                              title=\"Salary\",                             legend=\"{position:'bottom'}\")) plot(gchart)"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"how-can-i-change-the-look-and-feel-of-the-charts","dir":"Articles","previous_headings":"Frequent ask questions – FAQ","what":"How can I change the look and feel of the charts?","title":"Introduction to googleVis","text":"charts lot options allow change look feel output, see help files details. However, googleVis provides interface Google Charts API. specific questions charts please ask Google Visualisation API newsgroup. frequent ask questions regarding API check: https://developers.google.com/chart/interactive/faq.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"is-it-possible-to-use-googlevis-in-corporate-work","dir":"Articles","previous_headings":"Frequent ask questions – FAQ","what":"Is it possible to use googleVis in corporate work?","title":"Introduction to googleVis","text":"Review Google Terms Service get touch colleagues / Legal. doubt contact Google directly.","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"bugs-and-issues","dir":"Articles","previous_headings":"","what":"Bugs and issues","title":"Introduction to googleVis","text":"find issues bugs googleVis, please drop us line add issues list: (https://github.com/mages/googleVis/issues)","code":""},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"Introduction to googleVis","text":"Please cite googleVis use work publications:","code":"citation(\"googleVis\") ##  ## To cite the googleVis package in publications use: ##  ##   Markus Gesmann and Diego de Castillo. Using the Google Visualisation ##   API with R. The R Journal, 3(2):40-44, December 2011. ##  ## A BibTeX entry for LaTeX users is ##  ##   @Article{, ##     title = {googleVis: Interface between R and the Google Visualisation API}, ##     author = {Markus Gesmann and Diego {de Castillo}}, ##     journal = {The R Journal}, ##     year = {2011}, ##     volume = {3}, ##     number = {2}, ##     pages = {40--44}, ##     month = {December}, ##     url = {https://journal.r-project.org/archive/2011-2/RJournal_2011-2_Gesmann+de~Castillo.pdf}, ##   }"},{"path":"https://mages.github.io/googleVis/articles/googleVis_intro.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to googleVis","text":"Bengtsson, Henrik. 2012. “R.rsp: R Server Pages.” https://CRAN.R-project.org/package=R.rsp. Foundation, Gapminder. 2010. “Gapminder.” https://www.gapminder.org. Gesmann, Markus, Diego de Castillo. 2011. “Using Google Visualisation API R.” R Journal 3 (2): 40–44. https://journal.r-project.org/archive/2011-2/RJournal_2011-2_Gesmann+de~Castillo.pdf. ———. 2013. GoogleVis Tutorial. useR! 2013, University Castilla-La Mancha, Albacete, Spain. Inc., Google. 2012a. “Google Chart Tools.” https://developers.google.com/chart/interactive/docs/gallery. ———. 2012b. “Google Motion Chart API.” https://developers.google.com/chart/interactive/docs/gallery/motionchart.html. ———. 2012c. “Google Public Data Explorer.” https://www.google.com/publicdata/directory. ———. 2012d. “Google Visualisation Reference.” https://developers.google.com/chart/interactive/docs/reference. Inc, Google. 2012. “Google API Terms Service.” https://developers.google.com/terms/. JSON.org. 2006. “JSON.” https://www.json.org/. Ooms, Jeroen. 2014. “Jsonlite Package: Practical Consistent Mapping Json Data R Objects.” arXiv:1403.2805. https://arxiv.org/abs/1403.2805. Rosling, Hans. 2006. “TED Talk: Hans Rosling Shows Best Stats ’ve Ever Seen.” TED Talk; https://www.ted.com/talks/hans_rosling_the_best_stats_you_ve_ever_seen. Saaibi, Sebastián Pérez. 2010. R/RMETRICS Generator Tool Google Motion Charts. https://www.rmetrics.org/. Vaidyanathan, Ramnath. 2012. Slidify: Generate Reproducible Html5 Slides R Markdown. https://github.com/ramnathv/slidify/. Xie, Yihui. 2013. Knitr: General-Purpose Package Dynamic Report Generation R. https://CRAN.R-project.org/package=knitr.","code":""},{"path":"https://mages.github.io/googleVis/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Markus Gesmann. Author, maintainer. Diego de Castillo. Author. Joe Cheng. Contributor. Ashley Baldry. Contributor. Durey Ingeniería. Contributor.","code":""},{"path":"https://mages.github.io/googleVis/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Markus Gesmann Diego de Castillo. Using Google Visualisation API R. R Journal, 3(2):40-44, December 2011.","code":"@Article{,   title = {googleVis: Interface between R and the Google Visualisation API},   author = {Markus Gesmann and Diego {de Castillo}},   journal = {The R Journal},   year = {2011},   volume = {3},   number = {2},   pages = {40--44},   month = {December},   url = {https://journal.r-project.org/archive/2011-2/RJournal_2011-2_Gesmann+de~Castillo.pdf}, }"},{"path":"https://mages.github.io/googleVis/index.html","id":"googlevis","dir":"","previous_headings":"","what":"R Interface to Google Charts","title":"R Interface to Google Charts","text":"googleVis package provides interface R Google’s charts tools. allows users create web pages interactive charts based R data frames. Charts displayed locally via R HTTP help server. modern browser Internet connection required. data remains local uploaded Google. Check examples googleVis demo. Please read Google’s Terms Use start using package.","code":""},{"path":"https://mages.github.io/googleVis/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Interface to Google Charts","text":"can install stable version CRAN:","code":"install.packages('googleVis')"},{"path":"https://mages.github.io/googleVis/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Interface to Google Charts","text":"See googleVis package vignette details. brief introduction read five page R Journal article.","code":"library(googleVis) ?googleVis demo(googleVis)"},{"path":"https://mages.github.io/googleVis/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"R Interface to Google Charts","text":"package free open source software, licensed GPL 2 later. googleVis documentation Markus Gesmann & Diego de Castillo licensed Creative Commons Attribution-ShareAlike 4.0 International License","code":""},{"path":"https://mages.github.io/googleVis/reference/Andrew.html","id":null,"dir":"Reference","previous_headings":"","what":"Hurricane Andrew: googleVis example data set — Andrew","title":"Hurricane Andrew: googleVis example data set — Andrew","text":"Hurricane Andrew storm path 16 August 28 August 1992","code":""},{"path":"https://mages.github.io/googleVis/reference/Andrew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hurricane Andrew: googleVis example data set — Andrew","text":"","code":"data(Andrew)"},{"path":"https://mages.github.io/googleVis/reference/Andrew.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hurricane Andrew: googleVis example data set — Andrew","text":"data frame 47 observations following 8 variables. Date/Time UTC POSIXct Lat numeric vector Long numeric vector Pressure_mb numeric vector Speed_kt numeric vector Category factor levels Hurricane Tropical Depression Tropical Storm LatLong character vector Tip character vector","code":""},{"path":"https://mages.github.io/googleVis/reference/Andrew.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hurricane Andrew: googleVis example data set — Andrew","text":"National Hurricane Center: https://www.nhc.noaa.gov/1992andrew.html","code":""},{"path":"https://mages.github.io/googleVis/reference/Andrew.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hurricane Andrew: googleVis example data set — Andrew","text":"","code":"data(Andrew)  AndrewGeoMap <- gvisGeoMap(Andrew, locationvar='LatLong', numvar='Speed_kt',                           hovervar='Category',                           options=list(width=800,height=400,                           region='US', dataMode='Markers')) #> Warning: GeoMap (gvisGeoMap) is Flash based, conisder using GeoChart (gvisGeoChart) instead. #> For more details visit: goo.gl/tkiEV8  AndrewMap <- gvisMap(Andrew, 'LatLong' , 'Tip',                            options=list(showTip=TRUE, showLine=TRUE,                            enableScrollWheel=TRUE,                            mapType='hybrid', useMapTypeControl=TRUE,          width=800,height=400))  AndrewTable <- gvisTable(Andrew,options=list(width=800))  ## Combine the outputs into one page:  AndrewVis <- gvisMerge(AndrewGeoMap, AndrewMap)  plot(AndrewVis) #> starting httpd help server ... #>  done"},{"path":"https://mages.github.io/googleVis/reference/Cairo.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily temperature data for Cairo — Cairo","title":"Daily temperature data for Cairo — Cairo","text":"average air temperature (C) Cairo 2002 2004.","code":""},{"path":"https://mages.github.io/googleVis/reference/Cairo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily temperature data for Cairo — Cairo","text":"","code":"data(Cairo)"},{"path":"https://mages.github.io/googleVis/reference/Cairo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily temperature data for Cairo — Cairo","text":"data frame 1091 observations following 2 variables. Date calendar date Temp average temperatur Celsius","code":""},{"path":"https://mages.github.io/googleVis/reference/Cairo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Daily temperature data for Cairo — Cairo","text":"Wood, S.N. (2006) Generalized Additive Models: Introduction R","code":""},{"path":"https://mages.github.io/googleVis/reference/Cairo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily temperature data for Cairo — Cairo","text":"","code":"data(Cairo) plot(gvisCalendar(Cairo))"},{"path":"https://mages.github.io/googleVis/reference/Cats.html","id":null,"dir":"Reference","previous_headings":"","what":"Cat Search Terms — Cats","title":"Cat Search Terms — Cats","text":"set responses search terms cats","code":""},{"path":"https://mages.github.io/googleVis/reference/Cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cat Search Terms — Cats","text":"","code":"data(Cats)"},{"path":"https://mages.github.io/googleVis/reference/Cats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cat Search Terms — Cats","text":"data frame 18 observations following 3 variables. Phrase Search term cats Size Number times term searched Sentiment Numeric value 0-10 sentiment term","code":""},{"path":"https://mages.github.io/googleVis/reference/Cats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cat Search Terms — Cats","text":"","code":"data(Cats) plot(gvisWordTree(Cats, textvar = \"Phrase\"))"},{"path":"https://mages.github.io/googleVis/reference/CityPopularity.html","id":null,"dir":"Reference","previous_headings":"","what":"CityPopularity: googleVis example data set — CityPopularity","title":"CityPopularity: googleVis example data set — CityPopularity","text":"Example data set illustrate use googleVis package.","code":""},{"path":"https://mages.github.io/googleVis/reference/CityPopularity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CityPopularity: googleVis example data set — CityPopularity","text":"","code":"data(CityPopularity)"},{"path":"https://mages.github.io/googleVis/reference/CityPopularity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CityPopularity: googleVis example data set — CityPopularity","text":"data frame 6 observations following 2 variables. City factor levels Boston Chicago Houston Los Angeles Miami New York Popularity numeric vector","code":""},{"path":"https://mages.github.io/googleVis/reference/CityPopularity.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CityPopularity: googleVis example data set — CityPopularity","text":"Google Geo Map  API: https://developers.google.com/chart/interactive/docs/gallery/geomap.html","code":""},{"path":"https://mages.github.io/googleVis/reference/CityPopularity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CityPopularity: googleVis example data set — CityPopularity","text":"","code":"data(CityPopularity) str(CityPopularity) #> 'data.frame':\t6 obs. of  2 variables: #>  $ City      : Factor w/ 6 levels \"Boston\",\"Chicago\",..: 6 1 5 2 4 3 #>  $ Popularity: num  200 300 400 500 600 700"},{"path":"https://mages.github.io/googleVis/reference/Exports.html","id":null,"dir":"Reference","previous_headings":"","what":"Exports: googleVis example data set — Exports","title":"Exports: googleVis example data set — Exports","text":"Example data set illustrate use googleVis package.","code":""},{"path":"https://mages.github.io/googleVis/reference/Exports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exports: googleVis example data set — Exports","text":"","code":"data(Exports)"},{"path":"https://mages.github.io/googleVis/reference/Exports.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exports: googleVis example data set — Exports","text":"data frame 10 observations following 3 variables. Country factor levels Brazil, Germany ... Profit numeric vector Online logical vector","code":""},{"path":"https://mages.github.io/googleVis/reference/Exports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exports: googleVis example data set — Exports","text":"","code":"data(Exports) str(Exports) #> 'data.frame':\t10 obs. of  3 variables: #>  $ Country: Factor w/ 10 levels \"Brazil\",\"France\",..: 3 1 10 2 4 6 5 7 8 9 #>  $ Profit : num  3 4 5 4 3 2 1 4 5 1 #>  $ Online : logi  TRUE FALSE TRUE TRUE FALSE TRUE ..."},{"path":"https://mages.github.io/googleVis/reference/Fruits.html","id":null,"dir":"Reference","previous_headings":"","what":"Fruits: googleVis example data set — Fruits","title":"Fruits: googleVis example data set — Fruits","text":"Example data set illustrate use googleVis package.","code":""},{"path":"https://mages.github.io/googleVis/reference/Fruits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fruits: googleVis example data set — Fruits","text":"","code":"data(Fruits)"},{"path":"https://mages.github.io/googleVis/reference/Fruits.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fruits: googleVis example data set — Fruits","text":"data frame 9 observations following 7 variables. Fruit factor levels Apples Bananas Oranges Year numeric vector Location factor levels East West Sales numeric vector Expenses numeric vector Profit numeric vector Date Date","code":""},{"path":"https://mages.github.io/googleVis/reference/Fruits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fruits: googleVis example data set — Fruits","text":"","code":"data(Fruits) M <- gvisMotionChart(Fruits, idvar=\"Fruit\", timevar=\"Year\") #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations  if (FALSE) {  plot(M) }"},{"path":"https://mages.github.io/googleVis/reference/OpenClose.html","id":null,"dir":"Reference","previous_headings":"","what":"OpenClose: googleVis example data set — OpenClose","title":"OpenClose: googleVis example data set — OpenClose","text":"Example data set illustrate use googleVis package.","code":""},{"path":"https://mages.github.io/googleVis/reference/OpenClose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OpenClose: googleVis example data set — OpenClose","text":"","code":"data(OpenClose)"},{"path":"https://mages.github.io/googleVis/reference/OpenClose.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OpenClose: googleVis example data set — OpenClose","text":"data frame 5 observations following 5 variables. Weekday factor levels Fri Mon Thurs Tues Wed Low numeric vector Open numeric vector Close numeric vector High numeric vector","code":""},{"path":"https://mages.github.io/googleVis/reference/OpenClose.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"OpenClose: googleVis example data set — OpenClose","text":"Google Visualisation: Candlestick Chart   https://developers.google.com/chart/interactive/docs/gallery/candlestickchart?csw=1","code":""},{"path":"https://mages.github.io/googleVis/reference/OpenClose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OpenClose: googleVis example data set — OpenClose","text":"","code":"OpenClose #>   Weekday Low Open Close High #> 1     Mon  20   28    38   45 #> 2    Tues  31   38    55   66 #> 3     Wed  50   55    77   80 #> 4   Thurs  50   77    66   77 #> 5     Fri  15   66    22   68 plot(gvisCandlestickChart(OpenClose, options=list(legend='none')))"},{"path":"https://mages.github.io/googleVis/reference/Population.html","id":null,"dir":"Reference","previous_headings":"","what":"Population: googleVis example data set — Population","title":"Population: googleVis example data set — Population","text":"Example data set illustrate use googleVis package.","code":""},{"path":"https://mages.github.io/googleVis/reference/Population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population: googleVis example data set — Population","text":"","code":"data(Population)"},{"path":"https://mages.github.io/googleVis/reference/Population.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population: googleVis example data set — Population","text":"data frame 195 observations following 7 variables. Rank numeric vector population ranking Country country name character Population population % World Population % world population Flag html image-tag wikipedia country flag Mode logical test vector Date date test vector","code":""},{"path":"https://mages.github.io/googleVis/reference/Population.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population: googleVis example data set — Population","text":"Sourced Wikipedia (columns 1 5): https://en.wikipedia.org/wiki/List_of_countries_by_population, 9 October 2010.","code":""},{"path":"https://mages.github.io/googleVis/reference/Population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population: googleVis example data set — Population","text":"","code":"data(Population) tbl <- gvisTable(Population)  if (FALSE) { plot(tbl) }"},{"path":"https://mages.github.io/googleVis/reference/Regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Regions: googleVis example data set — Regions","title":"Regions: googleVis example data set — Regions","text":"Example data set illustrate use googleVis package.","code":""},{"path":"https://mages.github.io/googleVis/reference/Regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regions: googleVis example data set — Regions","text":"","code":"data(Regions)"},{"path":"https://mages.github.io/googleVis/reference/Regions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regions: googleVis example data set — Regions","text":"data frame 11 observations following 4 variables. Region factor levels America, Asia ... Parent parent region identifier Val numeric vector Fac numeric vector","code":""},{"path":"https://mages.github.io/googleVis/reference/Regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regions: googleVis example data set — Regions","text":"","code":"data(Regions) Tree <- gvisTreeMap(Regions,  \"Region\", \"Parent\", \"Val\", \"Fac\",                     options=list(width=600, height=500,                                  showScale=TRUE, fontSize=16)) if (FALSE) { plot(Tree) }"},{"path":"https://mages.github.io/googleVis/reference/Stock.html","id":null,"dir":"Reference","previous_headings":"","what":"Stock: googleVis example data set — Stock","title":"Stock: googleVis example data set — Stock","text":"Example data set illustrate use googleVis package.","code":""},{"path":"https://mages.github.io/googleVis/reference/Stock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stock: googleVis example data set — Stock","text":"","code":"data(Stock)"},{"path":"https://mages.github.io/googleVis/reference/Stock.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stock: googleVis example data set — Stock","text":"data frame 12 observations following 5 variables. Date Date Device character vector Value numeric vector Title factor levels Bought pencils stock Annotation factor levels Bought 200k pencils Ran stock pens 4pm","code":""},{"path":"https://mages.github.io/googleVis/reference/Stock.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Stock: googleVis example data set — Stock","text":"Google Annotated Time Line  API:   https://developers.google.com/chart/interactive/docs/gallery/annotatedtimeline.html","code":""},{"path":"https://mages.github.io/googleVis/reference/Stock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stock: googleVis example data set — Stock","text":"","code":"## Create data as used by Google in their annotated time line example   Date <- as.Date(paste(\"2008-1-\", 1:6, sep=\"\"))  Pencils <- c(3000, 14045, 5502, 75284, 41476, 333222)  Pencils.titles <-c(rep(NA,4), 'Bought pencils', NA)  Pencils.annotation <-c(rep(NA,4), 'Bought 200k pencils', NA)  Pens <- c(40645, 20374, 50766, 14334, 66467, 39463)  Pens.titles <- c(rep(NA, 3), 'Out of stock', NA, NA)  Pens.annotation <- c(rep(NA, 3), 'Ran of out stock of pens at 4pm', NA, NA)   original.df=data.frame(Date, Pencils, Pencils.titles,                         Pencils.annotation, Pens, Pens.titles,                         Pens.annotation)      Stock <- reshape(original.df, idvar=\"Date\", times=c(\"Pencils\", \"Pens\"),                    timevar=\"Device\",                   varying=list(c(\"Pencils\", \"Pens\"),                                c(\"Pencils.titles\", \"Pens.titles\"),                                c(\"Pencils.annotation\", \"Pens.annotation\")),                     v.names=c(\"Value\", \"Title\", \"Annotation\"),                    direction=\"long\")"},{"path":"https://mages.github.io/googleVis/reference/createGoogleGadget.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Google Gadget — createGoogleGadget","title":"Create a Google Gadget — createGoogleGadget","text":"Create Google Gadget based Google Visualisation Object","code":""},{"path":"https://mages.github.io/googleVis/reference/createGoogleGadget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Google Gadget — createGoogleGadget","text":"","code":"createGoogleGadget(gvis)"},{"path":"https://mages.github.io/googleVis/reference/createGoogleGadget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Google Gadget — createGoogleGadget","text":"gvis object class 'gvis', e.g. output googleVis visualisation functions.","code":""},{"path":"https://mages.github.io/googleVis/reference/createGoogleGadget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Google Gadget — createGoogleGadget","text":"createGoogleGadget returns Google Gadget XML string.","code":""},{"path":"https://mages.github.io/googleVis/reference/createGoogleGadget.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Google Gadget — createGoogleGadget","text":"information Google Gadgets see:   https://developers.google.com/gadgets/","code":""},{"path":"https://mages.github.io/googleVis/reference/createGoogleGadget.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Google Gadget — createGoogleGadget","text":"Markus Gesmann","code":""},{"path":"https://mages.github.io/googleVis/reference/createGoogleGadget.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Google Gadget — createGoogleGadget","text":"Google Gadgets can embedded various Google products, example part Google Code wiki page, Blogger Google Sites. cases XML gadget file hosted online, e.g. using Google Docs. Blogger gadgets can embedded via design tab, Google Sites via menu \"Insert\" -> \"gadgets ...\" -> \"Add gadget ULR\". Google Code wiki gadget can embedded via <wiki:gadget url=\"https://example.com/gadget.xml\" height=\"200\" border=\"0\" />","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/createGoogleGadget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Google Gadget — createGoogleGadget","text":"","code":"M <- gvisMotionChart(Fruits, idvar=\"Fruit\", timevar=\"Year\") #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations gdgt <- createGoogleGadget(M) cat(gdgt) #> <?xml version=\"1.0\" encoding=\"UTF-8\" ?>  #> <Module> #>   <ModulePrefs title=\"MotionChartID382735298db1\" /> #>   <Content type=\"html\"> #>   <![CDATA[  #>    <!-- MotionChart generated in R 4.2.0 by googleVis 0.6.13 package --> #> <!-- Fri Apr 22 21:17:42 2022 --> #>  #>  #> <!-- jsHeader --> #> <script type=\"text/javascript\"> #>  #>  #> // jsData  #> function gvisDataMotionChartID382735298db1 () { #> var data = new google.visualization.DataTable(); #> var datajson = #> [ #>  [ #> \"Apples\", #> 2008, #> \"West\", #> 98, #> 78, #> 20, #> \"2008-12-31\" #> ], #> [ #> \"Apples\", #> 2009, #> \"West\", #> 111, #> 79, #> 32, #> \"2009-12-31\" #> ], #> [ #> \"Apples\", #> 2010, #> \"West\", #> 89, #> 76, #> 13, #> \"2010-12-31\" #> ], #> [ #> \"Oranges\", #> 2008, #> \"East\", #> 96, #> 81, #> 15, #> \"2008-12-31\" #> ], #> [ #> \"Bananas\", #> 2008, #> \"East\", #> 85, #> 76, #> 9, #> \"2008-12-31\" #> ], #> [ #> \"Oranges\", #> 2009, #> \"East\", #> 93, #> 80, #> 13, #> \"2009-12-31\" #> ], #> [ #> \"Bananas\", #> 2009, #> \"East\", #> 94, #> 78, #> 16, #> \"2009-12-31\" #> ], #> [ #> \"Oranges\", #> 2010, #> \"East\", #> 98, #> 91, #> 7, #> \"2010-12-31\" #> ], #> [ #> \"Bananas\", #> 2010, #> \"East\", #> 81, #> 71, #> 10, #> \"2010-12-31\" #> ]  #> ]; #> data.addColumn('string','Fruit'); #> data.addColumn('number','Year'); #> data.addColumn('string','Location'); #> data.addColumn('number','Sales'); #> data.addColumn('number','Expenses'); #> data.addColumn('number','Profit'); #> data.addColumn('string','Date'); #> data.addRows(datajson); #> return(data); #> } #>  #>  #> // jsDrawChart #> function drawChartMotionChartID382735298db1() { #> var data = gvisDataMotionChartID382735298db1(); #> var options = {}; #> options[\"width\"] = 600; #> options[\"height\"] = 500; #> options[\"state\"] = \"\"; #>  #>  #>     var chart = new google.visualization.MotionChart( #>     document.getElementById('MotionChartID382735298db1') #>     ); #>     chart.draw(data,options); #>      #>  #> } #>    #>  #>  #> // jsDisplayChart #> (function() { #> var pkgs = window.__gvisPackages = window.__gvisPackages || []; #> var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; #> var chartid = \"motionchart\"; #>    #> // Manually see if chartid is in pkgs (not all browsers support Array.indexOf) #> var i, newPackage = true; #> for (i = 0; newPackage && i < pkgs.length; i++) { #> if (pkgs[i] === chartid) #> newPackage = false; #> } #> if (newPackage) #>   pkgs.push(chartid); #>    #> // Add the drawChart function to the global list of callbacks #> callbacks.push(drawChartMotionChartID382735298db1); #> })(); #> function displayChartMotionChartID382735298db1() { #>   var pkgs = window.__gvisPackages = window.__gvisPackages || []; #>   var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; #>   window.clearTimeout(window.__gvisLoad); #>   // The timeout is set to 100 because otherwise the container div we are #>   // targeting might not be part of the document yet #>   window.__gvisLoad = setTimeout(function() { #>   var pkgCount = pkgs.length; #>   google.load(\"visualization\", \"1\", { packages:pkgs, callback: function() { #>   if (pkgCount != pkgs.length) { #>   // Race condition where another setTimeout call snuck in after us; if #>   // that call added a package, we must not shift its callback #>   return; #> } #> while (callbacks.length > 0) #> callbacks.shift()(); #> } }); #> }, 100); #> } #>  #>  #> // jsFooter #> <\/script> #>  #>  #> <!-- jsChart -->   #> <script type=\"text/javascript\" src=\"https://www.google.com/jsapi?callback=displayChartMotionChartID382735298db1\"><\/script> #>  #>  #> <!-- divChart --> #>    #> <div id=\"MotionChartID382735298db1\"  #>   style=\"width: 600; height: 500;\"> #> <\/div> #>  #>   ]]>  #>   <\/Content> #> <\/Module>"},{"path":"https://mages.github.io/googleVis/reference/dino.html","id":null,"dir":"Reference","previous_headings":"","what":"Dinosaur data — dino","title":"Dinosaur data — dino","text":"Lenght dinosaurs","code":""},{"path":"https://mages.github.io/googleVis/reference/dino.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dinosaur data — dino","text":"","code":"data(dino)"},{"path":"https://mages.github.io/googleVis/reference/dino.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dinosaur data — dino","text":"data frame 28 observations 2 variables, dinosaur length.","code":""},{"path":"https://mages.github.io/googleVis/reference/dino.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dinosaur data — dino","text":"https://developers.google.com/chart/interactive/docs/gallery/histogram","code":""},{"path":"https://mages.github.io/googleVis/reference/dino.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dinosaur data — dino","text":"","code":"data(dino) str(dino)  #> 'data.frame':\t28 obs. of  2 variables: #>  $ Dinosaur: Factor w/ 28 levels \"'Acrocanthosaurus (top-spined lizard)'\",..: 1 2 3 4 5 6 7 8 9 10 ... #>  $ Length  : num  12.2 9.1 12.2 22.9 0.9 36.6 9.1 30.5 6.1 2.7 ..."},{"path":"https://mages.github.io/googleVis/reference/googleVis-package.html","id":null,"dir":"Reference","previous_headings":"","what":"R Interface to Google Charts — googleVis-package","title":"R Interface to Google Charts — googleVis-package","text":"R interface Google Charts API, allowing users    create interactive charts based data frames. Charts    displayed locally via R HTTP help server. modern    browser Internet connection required    charts Flash. data remains local uploaded    Google. Please visit project web site information:   https://github.com/mages/googleVis. find notes Markus' blog:   https://magesblog.com/tags/googlevis/","code":""},{"path":"https://mages.github.io/googleVis/reference/googleVis-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R Interface to Google Charts — googleVis-package","text":"Markus Gesmann, Diego de Castillo","code":""},{"path":"https://mages.github.io/googleVis/reference/googleVis-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"R Interface to Google Charts — googleVis-package","text":"See vignette(\"googleVis\") introduction   googleVis package.","code":""},{"path":"https://mages.github.io/googleVis/reference/googleVis-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"R Interface to Google Charts — googleVis-package","text":"Google Charts API: https://developers.google.com/chart/ Google Terms Use: https://developers.google.com/terms/ Google Maps API Terms Service: https://cloud.google.com/maps-platform/terms/","code":""},{"path":"https://mages.github.io/googleVis/reference/googleVis-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R Interface to Google Charts — googleVis-package","text":"","code":"if (FALSE) {   demo(googleVis)   ## For other demos see   demo(package='googleVis')     }"},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotatedTimeLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","title":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","text":"gvisAnnotatedTimeLine function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotatedTimeLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","text":"","code":"gvisAnnotatedTimeLine(   data,   datevar = \"\",   numvar = \"\",   idvar = \"\",   titlevar = \"\",   annotationvar = \"\",   date.format = \"%Y/%m/%d\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotatedTimeLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","text":"data data.frame. data least two columns, one date information (datevar) one numerical variable. datevar column name data shows date dimension. information class Date POSIX* time series. numvar column name data shows values displayed datevar. information numeric. idvar column name data identifies different groups data. information class character factor. titlevar column name data shows title annotations. information class character factor.  Missing information can set NA. See section 'Details' details. annotationvar column name data shows annotation text. information class character factor. Missing information can set NA. See section 'Details' details. date.format datevar class Date argument specifies dates reformatted used JavaScript. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/annotatedtimeline#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotatedTimeLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","text":"gvisAnnotatedTimeLine  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotatedTimeLine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","text":"annotated time line interactive time series line chart optional annotations. chart rendered within browser using Flash.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotatedTimeLine.html","id":"warnings","dir":"Reference","previous_headings":"","what":"Warnings","title":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","text":"AnnotatedTimeline (gvisAnnotatedTimeLine) longer supported Google.  annotated timeline now automatically uses Annotation Charts instead. Important: use visualization, must specify height width  container element explicitly page. , example: options=list(width=\"600px\", height=\"350px\") Use codegvisAnnotationChart non-Flash version plot.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotatedTimeLine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/annotatedtimeline","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotatedTimeLine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotatedTimeLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Annotated Time Line with R\nannotatedtimeline\n\ngvisAnnotatedTimeLine — gvisAnnotatedTimeLine","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Flash and Internet ## connection to display the visualisation.   data(Stock) Stock #>          Date  Device  Value          Title                      Annotation #> 1  2008-01-01 Pencils   3000           <NA>                            <NA> #> 2  2008-01-02 Pencils  14045           <NA>                            <NA> #> 3  2008-01-03 Pencils   5502           <NA>                            <NA> #> 4  2008-01-04 Pencils  75284           <NA>                            <NA> #> 5  2008-01-05 Pencils  41476 Bought pencils             Bought 200k pencils #> 6  2008-01-06 Pencils 333222           <NA>                            <NA> #> 7  2008-01-01    Pens  40645           <NA>                            <NA> #> 8  2008-01-02    Pens  20374           <NA>                            <NA> #> 9  2008-01-03    Pens  50766           <NA>                            <NA> #> 10 2008-01-04    Pens  14334   Out of stock Ran out of stock of pens at 4pm #> 11 2008-01-05    Pens  66467           <NA>                            <NA> #> 12 2008-01-06    Pens  39463           <NA>                            <NA> A1 <- gvisAnnotatedTimeLine(Stock, datevar=\"Date\",                            numvar=\"Value\", idvar=\"Device\",                            titlevar=\"Title\", annotationvar=\"Annotation\",                            options=list(displayAnnotations=TRUE,                             legendPosition='newRow',                             width=\"600px\", height=\"350px\")                            ) #> Warning: AnnotatedTimeline (gvisAnnotatedTimeLine) is Flash based, consider using  AnnotationChart (gvisAnnotationChart) instead. plot(A1)  ## Two Y-axis A2 <- gvisAnnotatedTimeLine(Stock, datevar=\"Date\",                            numvar=\"Value\", idvar=\"Device\",                            titlevar=\"Title\", annotationvar=\"Annotation\",                            options=list(displayAnnotations=TRUE,                              width=\"600px\", height=\"350px\", scaleColumns='[0,1]',                             scaleType='allmaximized')                           ) #> Warning: AnnotatedTimeline (gvisAnnotatedTimeLine) is Flash based, consider using  AnnotationChart (gvisAnnotationChart) instead. plot(A2)    ## Colouring the area below the lines to create an area chart A3 <- gvisAnnotatedTimeLine(Stock, datevar=\"Date\",                            numvar=\"Value\", idvar=\"Device\",                            titlevar=\"Title\", annotationvar=\"Annotation\",                            options=list(                              width=\"600px\", height=\"350px\",                              fill=10, displayExactValues=TRUE,                              colors=\"['#0000ff','#00ff00']\")                            ) #> Warning: AnnotatedTimeline (gvisAnnotatedTimeLine) is Flash based, consider using  AnnotationChart (gvisAnnotationChart) instead.                            plot(A3)   ## Data with POSIXct datetime variable A4 <- gvisAnnotatedTimeLine(Andrew, datevar=\"Date/Time UTC\",                             numvar=\"Pressure_mb\",                             options=list(scaleType='maximized',                                          width=\"600px\", height=\"350px\")                             ) #> Warning: AnnotatedTimeline (gvisAnnotatedTimeLine) is Flash based, consider using  AnnotationChart (gvisAnnotationChart) instead.  plot(A4)"},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotationChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Annotation Chart with R\nannotationchart\n\ngvisAnnotationChart — gvisAnnotationChart","title":"Google Annotation Chart with R\nannotationchart\n\ngvisAnnotationChart — gvisAnnotationChart","text":"gvisAnnotationChart charts interactive time series line charts support  annotations. Unlike gvisAnnotatedTimeLine, uses Flash,  annotation charts SVG/VML preferred whenever possible.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotationChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Annotation Chart with R\nannotationchart\n\ngvisAnnotationChart — gvisAnnotationChart","text":"","code":"gvisAnnotationChart(   data,   datevar = \"\",   numvar = \"\",   idvar = \"\",   titlevar = \"\",   annotationvar = \"\",   date.format = \"%Y/%m/%d\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotationChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Annotation Chart with R\nannotationchart\n\ngvisAnnotationChart — gvisAnnotationChart","text":"data data.frame. data least two columns, one date information (datevar) one numerical variable. datevar column name data shows date dimension. information class Date POSIX* time series. numvar column name data shows values displayed datevar. information numeric. idvar column name data identifies different groups data. information class character factor. titlevar column name data shows title annotations. information class character factor.  Missing information can set NA. See section 'Details' details. annotationvar column name data shows annotation text. information class character factor. Missing information can set NA. See section 'Details' details. date.format datevar class Date argument specifies dates reformatted used JavaScript. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/annotationchart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotationChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Annotation Chart with R\nannotationchart\n\ngvisAnnotationChart — gvisAnnotationChart","text":"gvisAnnotationChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotationChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Annotation Chart with R\nannotationchart\n\ngvisAnnotationChart — gvisAnnotationChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/annotationchart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotationChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Annotation Chart with R\nannotationchart\n\ngvisAnnotationChart — gvisAnnotationChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAnnotationChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Annotation Chart with R\nannotationchart\n\ngvisAnnotationChart — gvisAnnotationChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Internet ## connection to display the visualisation.   data(Stock) Stock #>          Date  Device  Value          Title                      Annotation #> 1  2008-01-01 Pencils   3000           <NA>                            <NA> #> 2  2008-01-02 Pencils  14045           <NA>                            <NA> #> 3  2008-01-03 Pencils   5502           <NA>                            <NA> #> 4  2008-01-04 Pencils  75284           <NA>                            <NA> #> 5  2008-01-05 Pencils  41476 Bought pencils             Bought 200k pencils #> 6  2008-01-06 Pencils 333222           <NA>                            <NA> #> 7  2008-01-01    Pens  40645           <NA>                            <NA> #> 8  2008-01-02    Pens  20374           <NA>                            <NA> #> 9  2008-01-03    Pens  50766           <NA>                            <NA> #> 10 2008-01-04    Pens  14334   Out of stock Ran out of stock of pens at 4pm #> 11 2008-01-05    Pens  66467           <NA>                            <NA> #> 12 2008-01-06    Pens  39463           <NA>                            <NA> A1 <- gvisAnnotationChart(Stock, datevar=\"Date\",                            numvar=\"Value\", idvar=\"Device\",                            titlevar=\"Title\", annotationvar=\"Annotation\",                            options=list(displayAnnotations=TRUE,                             legendPosition='newRow',                             width=600, height=350)                            ) plot(A1)  ## Two Y-axis A2 <- gvisAnnotationChart(Stock, datevar=\"Date\",                            numvar=\"Value\", idvar=\"Device\",                            titlevar=\"Title\", annotationvar=\"Annotation\",                            options=list(displayAnnotations=TRUE,                              width=600, height=350, scaleColumns='[0,1]',                             scaleType='allmaximized')                           ) plot(A2)    ## Colouring the area below the lines to create an area chart A3 <- gvisAnnotationChart(Stock, datevar=\"Date\",                            numvar=\"Value\", idvar=\"Device\",                            titlevar=\"Title\", annotationvar=\"Annotation\",                            options=list(                              width=600, height=350,                              fill=10, displayExactValues=TRUE,                              colors=\"['#0000ff','#00ff00']\")                            )                            plot(A3)   ## Data with POSIXct datetime variable A4 <- gvisAnnotationChart(Andrew, datevar=\"Date/Time UTC\",                             numvar=\"Pressure_mb\",                             options=list(scaleType='maximized')                             )  plot(A4)  # Change background to blue A5 <- gvisAnnotationChart(Stock, datevar=\"Date\",               numvar=\"Value\", idvar=\"Device\",               titlevar=\"Title\", annotationvar=\"Annotation\",               options=list(                 displayAnnotations=TRUE,                   chart = \"{chartArea:{backgroundColor:'#003b70'}}\",                             legendPosition='newRow',                             width=600, height=350))                              plot(A5)"},{"path":"https://mages.github.io/googleVis/reference/gvisAreaChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Area Chart with R\nareachart\n\ngvisAreaChart — gvisAreaChart","title":"Google Area Chart with R\nareachart\n\ngvisAreaChart — gvisAreaChart","text":"gvisAreaChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAreaChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Area Chart with R\nareachart\n\ngvisAreaChart — gvisAreaChart","text":"","code":"gvisAreaChart(data, xvar = \"\", yvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisAreaChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Area Chart with R\nareachart\n\ngvisAreaChart — gvisAreaChart","text":"data data.frame displayed area chart xvar name character column contains category labels x-axes. yvar vector column names numerical variables plotted. column displayed separate line. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/areachart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAreaChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Area Chart with R\nareachart\n\ngvisAreaChart — gvisAreaChart","text":"gvisAreaChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAreaChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Area Chart with R\nareachart\n\ngvisAreaChart — gvisAreaChart","text":"area chart rendered within browser using SVG VML displays tips hovering points.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAreaChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Area Chart with R\nareachart\n\ngvisAreaChart — gvisAreaChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/areachart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisAreaChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Area Chart with R\nareachart\n\ngvisAreaChart — gvisAreaChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisAreaChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Area Chart with R\nareachart\n\ngvisAreaChart — gvisAreaChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.  df=data.frame(country=c(\"US\", \"GB\", \"BR\"), val1=c(1,3,4), val2=c(23,12,32))  ## Area chart Area1 <- gvisAreaChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\")) plot(Area1)  ## Stacked chart Area2 <- gvisAreaChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),       options=list(isStacked=TRUE)) plot(Area2)   ## Add a customised title Area3 <- gvisAreaChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),              options=list(title=\"Hello World\",                           titleTextStyle=\"{color:'red',fontName:'Courier',fontSize:16}\")) plot(Area3)  if (FALSE) { ## Change y-axis to percentages Area3 <- gvisAreaChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),                        options=list(vAxis=\"{format:'#,###%'}\")) plot(Area3) }"},{"path":"https://mages.github.io/googleVis/reference/gvisBarChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Bar Chart with R\nbarchart\n\ngvisBarChart — gvisBarChart","title":"Google Bar Chart with R\nbarchart\n\ngvisBarChart — gvisBarChart","text":"gvisBarChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser using SVG VML.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisBarChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Bar Chart with R\nbarchart\n\ngvisBarChart — gvisBarChart","text":"","code":"gvisBarChart(data, xvar = \"\", yvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisBarChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Bar Chart with R\nbarchart\n\ngvisBarChart — gvisBarChart","text":"data data.frame displayed bar chart xvar name character column contains category labels x-axes. yvar vector column names numerical variables plotted.  column displayed separate bar/column. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/barchart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisBarChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Bar Chart with R\nbarchart\n\ngvisBarChart — gvisBarChart","text":"gvisBarChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisBarChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Bar Chart with R\nbarchart\n\ngvisBarChart — gvisBarChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/barchart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisBarChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Bar Chart with R\nbarchart\n\ngvisBarChart — gvisBarChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisBarChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Bar Chart with R\nbarchart\n\ngvisBarChart — gvisBarChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.  df <- data.frame(country=c(\"US\", \"GB\", \"BR\"),                             val1=c(1,3,4),                             val2=c(23,12,32))  ## Bar chart Bar1 <- gvisBarChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\")) plot(Bar1)  ## Stacked bar chart Bar2 <- gvisBarChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),      options=list(isStacked=TRUE)) plot(Bar2)   ## Add a customised title and change width of bars Bar3 <- gvisBarChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),              options=list(title=\"Hello World\",                           titleTextStyle=\"{color:'red',fontName:'Courier',fontSize:16}\",                           bar=\"{groupWidth:'100%'}\")) plot(Bar3)  if (FALSE) { ## Change x-axis to percentages Bar4 <- gvisBarChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),                        options=list(hAxis=\"{format:'#,###%'}\")) plot(Bar4)  ## The following example reads data from a Wikipedia table and displays ## the information in a bar chart. ## We use the readHMLTable function of the XML package to get the data library(XML) ## Get the data of the biggest ISO container companies from Wikipedia ##(table 3): df=readHTMLTable(readLines(\"https://en.wikipedia.org/wiki/Intermodal_freight_transport\"))[[3]][,1:2] ## Rename the second column names(df)[2]=\"TEU capacity\" ## The numbers are displayed with commas to separate thousands, so let's ## get rid of them: df[,2]=as.numeric(gsub(\",\", \"\", as.character(df[,2])))  ## Finally we can create a nice bar chart: Bar5 <- gvisBarChart(df, options=list(                     chartArea=\"{left:250,top:50,width:\\\"50%\\\",height:\\\"75%\\\"}\",                     legend=\"bottom\",                      title=\"Top 20 container shipping companies in order of TEU capacity\"))  plot(Bar5)  }"},{"path":"https://mages.github.io/googleVis/reference/gvisBubbleChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Bubble Chart with R\nbubblechart\n\ngvisBubbleChart — gvisBubbleChart","title":"Google Bubble Chart with R\nbubblechart\n\ngvisBubbleChart — gvisBubbleChart","text":"gvisBubbleChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisBubbleChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Bubble Chart with R\nbubblechart\n\ngvisBubbleChart — gvisBubbleChart","text":"","code":"gvisBubbleChart(   data,   idvar = \"\",   xvar = \"\",   yvar = \"\",   colorvar = \"\",   sizevar = \"\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisBubbleChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Bubble Chart with R\nbubblechart\n\ngvisBubbleChart — gvisBubbleChart","text":"data data.frame displayed bubble chart. data least three columns idvar, xvar, yvar. idvar column name data bubble xvar column name numerical vector data plotted x-axis. yvar column name numerical vector data plotted y-axis. colorvar column name data identifies bubbles series. Use value identify bubbles belong series; bubbles series assigned color. Series can configured using series option. sizevar values column mapped actual pixel values using sizeAxis option. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/bubblechart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisBubbleChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Bubble Chart with R\nbubblechart\n\ngvisBubbleChart — gvisBubbleChart","text":"gvisBubbleChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisBubbleChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Bubble Chart with R\nbubblechart\n\ngvisBubbleChart — gvisBubbleChart","text":"bubble chart used visualize data set 2 4 dimensions. first two dimensions visualized coordinates, 3rd color 4th size. bubble chart rendered within browser using SVG VML displays tips hovering points.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisBubbleChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Bubble Chart with R\nbubblechart\n\ngvisBubbleChart — gvisBubbleChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/bubblechart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisBubbleChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Bubble Chart with R\nbubblechart\n\ngvisBubbleChart — gvisBubbleChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisBubbleChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Bubble Chart with R\nbubblechart\n\ngvisBubbleChart — gvisBubbleChart","text":"","code":"bubble1 <- gvisBubbleChart(Fruits, idvar=\"Fruit\", xvar=\"Sales\", yvar=\"Expenses\") plot(bubble1)  ## Set color and size bubble2 <- gvisBubbleChart(Fruits, idvar=\"Fruit\", xvar=\"Sales\", yvar=\"Expenses\",                           colorvar=\"Location\", sizevar=\"Profit\",                           options=list(hAxis='{minValue:75, maxValue:125}'))  plot(bubble2)  ## Use year to color the bubbles bubble3 <- gvisBubbleChart(Fruits, idvar=\"Fruit\", xvar=\"Sales\", yvar=\"Expenses\",                            colorvar=\"Year\", sizevar=\"Profit\",                            options=list(hAxis='{minValue:75, maxValue:125}')) plot(bubble3)  ## Gradient colour example bubble4 <- gvisBubbleChart(Fruits, idvar=\"Fruit\", xvar=\"Sales\", yvar=\"Expenses\",                           sizevar=\"Profit\",                           options=list(hAxis='{minValue:75,  maxValue:125}',                                    colorAxis=\"{colors: ['lightblue', 'blue']}\")) plot(bubble4)  if (FALSE) { ## Moving bubble chart over time, aka motion chart  M <- gvisMotionChart(Fruits, Fruit, Year) plot(M) }"},{"path":"https://mages.github.io/googleVis/reference/gvisCalendar.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Calendar Chart with R\ncalendar\n\ngvisCalendar — gvisCalendar","title":"Google Calendar Chart with R\ncalendar\n\ngvisCalendar — gvisCalendar","text":"calendar chart visualization used show activity course  long span time, months years. best used  want illustrate quantity varies depending day  week, trends time.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCalendar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Calendar Chart with R\ncalendar\n\ngvisCalendar — gvisCalendar","text":"","code":"gvisCalendar(data, datevar = \"\", numvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisCalendar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Calendar Chart with R\ncalendar\n\ngvisCalendar — gvisCalendar","text":"data data.frame. data least two columns, one date information (datevar) one numerical variable. datevar column name data shows date dimension. information class Date POSIX* time series. numvar column name data shows values displayed datevar. information numeric. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/calendar#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCalendar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Calendar Chart with R\ncalendar\n\ngvisCalendar — gvisCalendar","text":"gvisCalendar  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCalendar.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Google Calendar Chart with R\ncalendar\n\ngvisCalendar — gvisCalendar","text":"calendar chart may undergoing substantial revisions future  Google Charts releases.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCalendar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Calendar Chart with R\ncalendar\n\ngvisCalendar — gvisCalendar","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/calendar","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisCalendar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Calendar Chart with R\ncalendar\n\ngvisCalendar — gvisCalendar","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCalendar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Calendar Chart with R\ncalendar\n\ngvisCalendar — gvisCalendar","text":"","code":"cl1 <- gvisCalendar(Cairo, datevar=\"Date\", numvar=\"Temp\") plot(cl1)  ## Not all months shown?  ## We can change the setting of the width ...  cl2 <- gvisCalendar(Cairo, datevar=\"Date\", numvar=\"Temp\",                     options=list(width=1000)) plot(cl2)  ## ... or the cell size cl3 <- gvisCalendar(Cairo, datevar=\"Date\",                      numvar=\"Temp\",                      options=list(calendar=\"{ cellSize: 10 }\")) plot(cl3)  ## Example with many options set cl4 <- gvisCalendar(Cairo, datevar=\"Date\", numvar=\"Temp\",                     options=list(                     title=\"Daily temperature in Cairo\",                     height=320,                     calendar=\"{yearLabel: { fontName: 'Times-Roman',                                fontSize: 32, color: '#1A8763', bold: true},                                cellSize: 10,                                cellColor: { stroke: 'red', strokeOpacity: 0.2 },                                focusedCellColor: {stroke:'red'}}\")                   ) plot(cl4)"},{"path":"https://mages.github.io/googleVis/reference/gvisCandlestickChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Candlestick chart with R\ncandlestickchart\n\ngvisCandlestickChart — gvisCandlestickChart","title":"Google Candlestick chart with R\ncandlestickchart\n\ngvisCandlestickChart — gvisCandlestickChart","text":"interactive candlestick chart.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCandlestickChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Candlestick chart with R\ncandlestickchart\n\ngvisCandlestickChart — gvisCandlestickChart","text":"","code":"gvisCandlestickChart(   data,   xvar = \"\",   low = \"\",   open = \"\",   close = \"\",   high = \"\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisCandlestickChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Candlestick chart with R\ncandlestickchart\n\ngvisCandlestickChart — gvisCandlestickChart","text":"data data.frame displayed candlestick chart. data least 5 columns. xvar name character column contains category labels x-axes. low name numeric column specifying low/minimum value marker. base candle's center line. open name numeric column specifying opening/initial value marker. one vertical border candle. less close value, candle filled; otherwise hollow. close name numeric column specifying closing/final value marker. second vertical border candle. less open value, candle hollow; otherwise filled. high name numeric column specifying high/maximum value marker. top candle's center line. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/candlestickchart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCandlestickChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Candlestick chart with R\ncandlestickchart\n\ngvisCandlestickChart — gvisCandlestickChart","text":"gvisCandlestickChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCandlestickChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Candlestick chart with R\ncandlestickchart\n\ngvisCandlestickChart — gvisCandlestickChart","text":"gvisCandlestickChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser using SVG VML. candlestick chart used show opening closing value overlaid top total variance. Candlestick charts often used show stock value behavior. chart, items opening value less closing value (gain) drawn filled boxes, items opening value closing value (loss) drawn hollow boxes.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCandlestickChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Candlestick chart with R\ncandlestickchart\n\ngvisCandlestickChart — gvisCandlestickChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/candlestickchart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisCandlestickChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Candlestick chart with R\ncandlestickchart\n\ngvisCandlestickChart — gvisCandlestickChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisCandlestickChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Candlestick chart with R\ncandlestickchart\n\ngvisCandlestickChart — gvisCandlestickChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.  ## Example data set OpenClose #>   Weekday Low Open Close High #> 1     Mon  20   28    38   45 #> 2    Tues  31   38    55   66 #> 3     Wed  50   55    77   80 #> 4   Thurs  50   77    66   77 #> 5     Fri  15   66    22   68  C1 <- gvisCandlestickChart(OpenClose, xvar=\"Weekday\", low=\"Low\",                                       open=\"Open\", close=\"Close\",                                       high=\"High\",                                       options=list(legend='none'))  plot(C1)"},{"path":"https://mages.github.io/googleVis/reference/gvisColumnChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Column Chart with R\ncolumnchart\n\ngvisColumnChart — gvisColumnChart","title":"Google Column Chart with R\ncolumnchart\n\ngvisColumnChart — gvisColumnChart","text":"gvisColumnChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser using SVG VML.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisColumnChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Column Chart with R\ncolumnchart\n\ngvisColumnChart — gvisColumnChart","text":"","code":"gvisColumnChart(data, xvar = \"\", yvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisColumnChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Column Chart with R\ncolumnchart\n\ngvisColumnChart — gvisColumnChart","text":"data data.frame displayed column chart xvar name character column contains category labels x-axes. yvar vector column names numerical variables plotted.  column displayed separate bar/column. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/columnchart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisColumnChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Column Chart with R\ncolumnchart\n\ngvisColumnChart — gvisColumnChart","text":"gvisColumnChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisColumnChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Column Chart with R\ncolumnchart\n\ngvisColumnChart — gvisColumnChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/columnchart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisColumnChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Column Chart with R\ncolumnchart\n\ngvisColumnChart — gvisColumnChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisColumnChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Column Chart with R\ncolumnchart\n\ngvisColumnChart — gvisColumnChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.  df=data.frame(country=c(\"US\", \"GB\", \"BR\"), val1=c(1,3,4), val2=c(23,12,32))  ## Column chart Col1 <- gvisColumnChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\")) plot(Col1)  ## Stacked column chart Col2 <- gvisColumnChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),      options=list(isStacked=TRUE)) plot(Col2)   ## Add a customised title and and change width of columns Col3 <- gvisColumnChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),              options=list(title=\"Hello World\",                           titleTextStyle=\"{color:'red',fontName:'Courier',fontSize:16}\",                           bar=\"{groupWidth:'100%'}\")) plot(Col3)  if (FALSE) { ## Change y-axis to percentages Col4 <- gvisColumnChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),                        options=list(vAxis=\"{format:'#,###%'}\")) plot(Col4) }"},{"path":"https://mages.github.io/googleVis/reference/gvisComboChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Combo Chart with R\ncombochart\n\ngvisComboChart — gvisComboChart","title":"Google Combo Chart with R\ncombochart\n\ngvisComboChart — gvisComboChart","text":"chart lets render series different marker type following list: columns, lines, area lines.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisComboChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Combo Chart with R\ncombochart\n\ngvisComboChart — gvisComboChart","text":"","code":"gvisComboChart(data, xvar = \"\", yvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisComboChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Combo Chart with R\ncombochart\n\ngvisComboChart — gvisComboChart","text":"data data.frame displayed columns, line area chart. xvar name character column contains category labels x-axes. yvar vector column names numerical variables plotted.  column displayed separate column, line area series. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/combochart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisComboChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Combo Chart with R\ncombochart\n\ngvisComboChart — gvisComboChart","text":"gvisComboChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisComboChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Combo Chart with R\ncombochart\n\ngvisComboChart — gvisComboChart","text":"gvisComboChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser using SVG VML.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisComboChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Combo Chart with R\ncombochart\n\ngvisComboChart — gvisComboChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/combochart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisComboChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Combo Chart with R\ncombochart\n\ngvisComboChart — gvisComboChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisComboChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Combo Chart with R\ncombochart\n\ngvisComboChart — gvisComboChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.  CityPopularity #>          City Popularity #> 1    New York        200 #> 2      Boston        300 #> 3       Miami        400 #> 4     Chicago        500 #> 5 Los Angeles        600 #> 6     Houston        700 ## Add the mean CityPopularity$Mean=mean(CityPopularity$Popularity)  C1 <- gvisComboChart(CityPopularity, xvar=\"City\",                                      yvar=c(\"Mean\", \"Popularity\"),                                    options=list(seriesType=\"bars\",                                                 title=\"City Popularity\",                                                 series='{0: {type:\"line\"}}')) plot(C1)  ## Changing the width of columsn C2 <- gvisComboChart(CityPopularity, xvar=\"City\",                                      yvar=c(\"Mean\", \"Popularity\"),                                    options=list(seriesType=\"bars\",                                                 bar=\"{groupWidth:'100%'}\",                                                 title=\"City Popularity\",                                                 series='{0: {type:\"line\"}}')) plot(C2)"},{"path":"https://mages.github.io/googleVis/reference/gvisGantt.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Gantt Chart with R\nganttchart\n\ngvisGantt — gvisGantt","title":"Google Gantt Chart with R\nganttchart\n\ngvisGantt — gvisGantt","text":"Gantt chart type chart illustrates breakdown  project component tasks.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGantt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Gantt Chart with R\nganttchart\n\ngvisGantt — gvisGantt","text":"","code":"gvisGantt(   data,   taskID = \"\",   taskName = \"\",   resource = \"\",   start = \"\",   end = \"\",   duration = \"\",   percentComplete = \"\",   dependencies = \"\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisGantt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Gantt Chart with R\nganttchart\n\ngvisGantt — gvisGantt","text":"data data.frame contains data visualised taskID string refers column name  data task ID used taskName string refers column name  data task name used resource string refers column name  data resource used start string refers date column name  data start dates end string refers date column name  data end dates duration string refers numeric column name  data task duration milliseconds percentComplete string refers numeric column name  data percent complete used dependencies string refers column name  data dependencies used options list configuration options. options documented detail Google online:  https://developers.google.com/chart/interactive/docs/gallery/ganttchart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGantt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Gantt Chart with R\nganttchart\n\ngvisGantt — gvisGantt","text":"gvisGantt  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGantt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Gantt Chart with R\nganttchart\n\ngvisGantt — gvisGantt","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/ganttchart","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGantt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Gantt Chart with R\nganttchart\n\ngvisGantt — gvisGantt","text":"Markus Gesmann markus.gesmann@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGantt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Gantt Chart with R\nganttchart\n\ngvisGantt — gvisGantt","text":"","code":"daysToMilliseconds <- function(days){  days * 24 * 60 * 60 * 1000 }  dat <- data.frame(  taskID = c(\"Research\", \"Write\", \"Cite\", \"Complete\", \"Outline\"),  taskName = c(\"Find sources\", \"Write Paper\",  \"Create bibliography\",                \"Hand in paper\", \"Outline paper\"),  resource = c(NA, \"write\", \"write\", \"complete\", \"write\"),  start = c(as.Date(\"2015-01-01\"), NA, NA, NA, NA),  end = as.Date(c(\"2015-01-05\", \"2015-01-09\", \"2015-01-07\",                   \"2015-01-10\", \"2015-01-06\")),  duration = c(NA, daysToMilliseconds(c(3, 1, 1, 1))),  percentComplete = c(100, 25, 20, 0, 100),  dependencies = c(NA, \"Research, Outline\", \"Research\",                    \"Cite, Write\", \"Research\") )  gntt1 <- gvisGantt(dat, taskID = \"taskID\",                   taskName = \"taskName\",                    resource = \"resource\",                   start = \"start\",                   end = \"end\",                    duration = \"duration\",                   percentComplete = \"percentComplete\",                   dependencies = \"dependencies\") plot(gntt1)  ## gantt chart with options set  gntt2 <- gvisGantt(dat, taskID = \"taskID\",                   taskName = \"taskName\",                    resource = \"resource\",                   start = \"start\",                   end = \"end\",                    duration = \"duration\",                   percentComplete = \"percentComplete\",                   dependencies = \"dependencies\",                   options = list(                        height = 275,                        gantt  = \"{                          criticalPathEnabled: true,                          innerGridHorizLine: {                          stroke: '#ffe0b2',                          strokeWidth: 2                        },                        innerGridTrack: {fill: '#fff3e0'},                        innerGridDarkTrack: {fill: '#ffcc80'},                        labelStyle: {                          fontName: 'Arial',                          fontSize: 14                      }}\"  )) plot(gntt2)"},{"path":"https://mages.github.io/googleVis/reference/gvisGauge.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Gauge with R\ngauge\n\ngvisGauge — gvisGauge","title":"Google Gauge with R\ngauge\n\ngvisGauge — gvisGauge","text":"gvisGauge function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser using SVG VML.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGauge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Gauge with R\ngauge\n\ngvisGauge — gvisGauge","text":"","code":"gvisGauge(data, labelvar = \"\", numvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisGauge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Gauge with R\ngauge\n\ngvisGauge — gvisGauge","text":"data data.frame displayed gauge labelvar name character column contains category labels slice labels. numvar vector column names numerical variables slice values. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/gauge#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGauge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Gauge with R\ngauge\n\ngvisGauge — gvisGauge","text":"gvisGauge  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGauge.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Gauge with R\ngauge\n\ngvisGauge — gvisGauge","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/gauge","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisGauge.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Gauge with R\ngauge\n\ngvisGauge — gvisGauge","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGauge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Gauge with R\ngauge\n\ngvisGauge — gvisGauge","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.  Gauge1 <- gvisGauge(CityPopularity, options=list(min=0, max=800, greenFrom=500,                     greenTo=800, yellowFrom=300, yellowTo=500,                     redFrom=0, redTo=300))  plot(Gauge1)"},{"path":"https://mages.github.io/googleVis/reference/gvisGeoChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Geo Chart with R\ngeochart\n\ngvisGeoChart — gvisGeoChart","title":"Google Geo Chart with R\ngeochart\n\ngvisGeoChart — gvisGeoChart","text":"gvisGeoChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Geo Chart with R\ngeochart\n\ngvisGeoChart — gvisGeoChart","text":"","code":"gvisGeoChart(   data,   locationvar = \"\",   colorvar = \"\",   sizevar = \"\",   hovervar = \"\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisGeoChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Geo Chart with R\ngeochart\n\ngvisGeoChart — gvisGeoChart","text":"data data.frame. data least one column location name (locationvar), value mapped location. format data varies depending display mode use: Regions Markers. locationvar column name data geo locations analysed. locations can provide two formats: Format 1 'latitude:longitude'. See example . Format 2 Address, country name, region name locations, US metropolitan area codes, see https://developers.google.com/adwords/api/docs/appendix/geotargeting?csw=1l. format works dataMode option set either 'markers' 'regions'. following formats accepted: specific address (example, \"1600 Pennsylvania Ave\"). country name string (example, \"England\"), uppercase ISO-3166 code English text equivalent (example, \"GB\" \"United Kingdom\").  uppercase ISO-3166-2 region code name English text equivalent (example, \"US-NJ\" \"New Jersey\"). colorvar column name data optional numeric column used assign color marker, based scale specified colorAxis.colors property. column present, markers color. column present, null values allowed. Values scaled relative , absolutely values specified colorAxis.values property. sizevar used displayMode='markers'. Column name data optional numeric column used assign marker size, relative marker sizes. column present, value previous column used (default `size, color column provided well). column present, null valuesare allowed. hovervar column name data additional string text displayed user hovers region. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/geochart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Geo Chart with R\ngeochart\n\ngvisGeoChart — gvisGeoChart","text":"gvisGeoChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Geo Chart with R\ngeochart\n\ngvisGeoChart — gvisGeoChart","text":"geo chart map country, continent, region two modes: region mode colorizes whole regions, countries, provinces, states. marker mode marks designated regions using bubbles scaled according value specify. geo chart rendered within browser using SVG VML. Note map scrollable draggable.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Geo Chart with R\ngeochart\n\ngvisGeoChart — gvisGeoChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/geochart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisGeoChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Geo Chart with R\ngeochart\n\ngvisGeoChart — gvisGeoChart","text":"Markus Gesmann markus.gesmann@gmail.com,  Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Geo Chart with R\ngeochart\n\ngvisGeoChart — gvisGeoChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Internet ## connection to display the visualisation.  ## Regions examples ## The regions style fills entire regions (typically countries) with ## colors corresponding to the values that you assign  G1a <- gvisGeoChart(Exports, locationvar='Country', colorvar='Profit')   plot(G1a)  ## Change projection G1b <- gvisGeoChart(Exports, locationvar='Country', colorvar='Profit',                    options=list(projection=\"kavrayskiy-vii\"))   plot(G1b)  ## Plot only Europe G2 <- gvisGeoChart(Exports, \"Country\", \"Profit\",                    options=list(region=\"150\"))  plot(G2)   ## Example showing US data by state  require(datasets)  states <- data.frame(state.name, state.x77) G3 <- gvisGeoChart(states, \"state.name\", \"Illiteracy\",                  options=list(region=\"US\", displayMode=\"regions\",                                resolution=\"provinces\",       width=600, height=400)) plot(G3)   G4 <- gvisGeoChart(Andrew, \"LatLong\", colorvar='Speed_kt',                    options=list(region=\"US\")) plot(G4)   G5 <- gvisGeoChart(Andrew, \"LatLong\", sizevar='Speed_kt',                    colorvar=\"Pressure_mb\", options=list(region=\"US\")) plot(G5)  ## Create lat:long values and plot a map of Oceania ## Set background colour to light-blue  require(stats) data(quakes) head(quakes) #>      lat   long depth mag stations #> 1 -20.42 181.62   562 4.8       41 #> 2 -20.62 181.03   650 4.2       15 #> 3 -26.00 184.10    42 5.4       43 #> 4 -17.97 181.66   626 4.1       19 #> 5 -20.42 181.96   649 4.0       11 #> 6 -19.68 184.31   195 4.0       12 quakes$latlong<-paste(quakes$lat, quakes$long, sep=\":\")  G6 <- gvisGeoChart(quakes, \"latlong\", \"depth\", \"mag\",                    options=list(displayMode=\"Markers\", region=\"009\",                    colorAxis=\"{colors:['red', 'grey']}\",                    backgroundColor=\"lightblue\"))  plot(G6)"},{"path":"https://mages.github.io/googleVis/reference/gvisGeoMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Geo Map with R \ngeomap\n\ngvisGeoMap — gvisGeoMap","title":"Google Geo Map with R \ngeomap\n\ngvisGeoMap — gvisGeoMap","text":"gvisGeoMap function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. geo map map country, continent, region map, colours values assigned specific regions. Values displayed colour scale, can specify optional hover-text regions. map rendered browser. Note map scroll-able drag-gable, can configured allow zooming.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Geo Map with R \ngeomap\n\ngvisGeoMap — gvisGeoMap","text":"","code":"gvisGeoMap(   data,   locationvar = \"\",   numvar = \"\",   hovervar = \"\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisGeoMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Geo Map with R \ngeomap\n\ngvisGeoMap — gvisGeoMap","text":"data data.frame. data least two columns location name (locationvar), value mapped location (numvar) optional variable display text mouse hovers location (hovervar). locationvar column name data geo locations analysed. locations can provide two formats: Format 1 'latitude:longitude'. See example . Format 2 Address, country name, region name locations, US metropolitan area codes, see https://developers.google.com/adwords/api/docs/appendix/geotargeting?csw=1.  format works dataMode option set either 'markers' 'regions'. following formats accepted:  specific address (example, \"1600 Pennsylvania Ave\").  country name string (example, \"England\"), uppercase ISO-3166 code  English text equivalent (example, \"GB\" \"United Kingdom\").   uppercase ISO-3166-2 region code name English text    equivalent (example, \"US-NJ\" \"New Jersey\"). numvar column name data numeric value displayed user hovers region. hovervar column name data additional string text displayed user hovers region. options list configuration options. options documented detail Google online:  https://developers.google.com/chart/interactive/docs/gallery/geomap#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Geo Map with R \ngeomap\n\ngvisGeoMap — gvisGeoMap","text":"gvisGeoMap  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoMap.html","id":"warnings","dir":"Reference","previous_headings":"","what":"Warnings","title":"Google Geo Map with R \ngeomap\n\ngvisGeoMap — gvisGeoMap","text":"GeoMap (gvisGeoMap) Flash based, conisder using GeoChart (gvisGeoChart) instead. details visit: goo.gl/tkiEV8 Flash security settings chart  might work correctly accessed file location  browser (e.g., file:///c:/webhost/myhost/myviz.html) rather  web server URL (e.g. https://www.myhost.com/myviz.html).  See googleVis package vignette Macromedia web  site (https://www.macromedia.com/support/documentation/en/flashplayer/help/)  details.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoMap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Geo Map with R \ngeomap\n\ngvisGeoMap — gvisGeoMap","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/geomap","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Geo Map with R \ngeomap\n\ngvisGeoMap — gvisGeoMap","text":"Markus Gesmann markus.gesmann@gmail.com,  Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisGeoMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Geo Map with R \ngeomap\n\ngvisGeoMap — gvisGeoMap","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Internet ## connection to display the visualisation.  ## Regions Example ## The regions style fills entire regions (typically countries) with colors ## corresponding to the values that you assign. Specify the regions style ## by assigning options['dataMode'] = 'regions' in your code.  G1 <- gvisGeoMap(Exports, locationvar='Country', numvar='Profit',                  options=list(dataMode=\"regions\"))  #> Warning: GeoMap (gvisGeoMap) is Flash based, conisder using GeoChart (gvisGeoChart) instead. #> For more details visit: goo.gl/tkiEV8  plot(G1)  ## Markers Example ## The \"markers\" style displays a circle, sized and colored to indicate ## a value, over the regions that you specify.  G2 <- gvisGeoMap(CityPopularity, locationvar='City', numvar='Popularity',                  options=list(region='US', height=350,                                dataMode='markers',                               colors='[0xFF8747, 0xFFB581, 0xc06000]'))   #> Warning: GeoMap (gvisGeoMap) is Flash based, conisder using GeoChart (gvisGeoChart) instead. #> For more details visit: goo.gl/tkiEV8  plot(G2)   ## Example showing US data by state   require(datasets) states <- data.frame(state.name, state.x77)  G3 <- gvisGeoMap(states, \"state.name\", \"Illiteracy\",                  options=list(region=\"US\", dataMode=\"regions\",                               width=600, height=400)) #> Warning: GeoMap (gvisGeoMap) is Flash based, conisder using GeoChart (gvisGeoChart) instead. #> For more details visit: goo.gl/tkiEV8 plot(G3)   ## Example with latitude and longitude information ## Show Hurricane Andrew (1992) storm track G4 <- gvisGeoMap(Andrew, locationvar=\"LatLong\", numvar=\"Speed_kt\",                   hovervar=\"Category\",                   options=list(height=350, region=\"US\", dataMode=\"markers\")) #> Warning: GeoMap (gvisGeoMap) is Flash based, conisder using GeoChart (gvisGeoChart) instead. #> For more details visit: goo.gl/tkiEV8  plot(G4)   ## World population WorldPopulation=data.frame(Country=Population$Country,                             Population.in.millions=round(Population$Population/1e6,0),                            Rank=paste(Population$Country, \"Rank:\", Population$Rank))  G5 <- gvisGeoMap(WorldPopulation, \"Country\", \"Population.in.millions\", \"Rank\",                   options=list(dataMode=\"regions\", width=600, height=300)) #> Warning: GeoMap (gvisGeoMap) is Flash based, conisder using GeoChart (gvisGeoChart) instead. #> For more details visit: goo.gl/tkiEV8 plot(G5)"},{"path":"https://mages.github.io/googleVis/reference/gvisHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Histogram Chart with R\nhistogram\n\ngvisHistogram — gvisHistogram","title":"Google Histogram Chart with R\nhistogram\n\ngvisHistogram — gvisHistogram","text":"gvisHistogram function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser using SVG VML.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Histogram Chart with R\nhistogram\n\ngvisHistogram — gvisHistogram","text":"","code":"gvisHistogram(data, options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Histogram Chart with R\nhistogram\n\ngvisHistogram — gvisHistogram","text":"data data.frame displayed histogram.  column displayed histogram. options list configuration options, see  https://developers.google.com/chart/interactive/docs/gallery/histogram#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Histogram Chart with R\nhistogram\n\ngvisHistogram — gvisHistogram","text":"gvisHistogram  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisHistogram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Histogram Chart with R\nhistogram\n\ngvisHistogram — gvisHistogram","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/histogram","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisHistogram.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Histogram Chart with R\nhistogram\n\ngvisHistogram — gvisHistogram","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisHistogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Histogram Chart with R\nhistogram\n\ngvisHistogram — gvisHistogram","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.   hist1 <- gvisHistogram(dino) plot(hist1)  ## Histogram of the top 20 countries pop <- Population[1:20,c(\"Country\", \"Population\")] pop=transform(pop, Population=round(Population/1e6))  hist2 <- gvisHistogram(pop, option=list(title=\"Country Populations\",                                     legend=\"{ position: 'none' }\",                                     colors=\"['green']\")) plot(hist2)                                      set.seed(123) dat=data.frame(A=rpois(100, 20),                 B=rpois(100, 5),                 C=rpois(100, 50)) hist3 <- gvisHistogram(dat, options=list(                        legend=\"{ position: 'top', maxLines: 2 }\",                        colors=\"['#5C3292', '#1A8763', '#871B47']\"))  plot(hist3)"},{"path":"https://mages.github.io/googleVis/reference/gvisLineChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Line Chart with R\nlinechart\n\ngvisLineChart — gvisLineChart","title":"Google Line Chart with R\nlinechart\n\ngvisLineChart — gvisLineChart","text":"gvisLineChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser using SVG VML.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisLineChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Line Chart with R\nlinechart\n\ngvisLineChart — gvisLineChart","text":"","code":"gvisLineChart(data, xvar = \"\", yvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisLineChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Line Chart with R\nlinechart\n\ngvisLineChart — gvisLineChart","text":"data data.frame displayed line chart xvar name character column contains category labels x-axes. yvar vector column names numerical variables plotted. column displayed separate line. options list configuration options, see  https://developers.google.com/chart/interactive/docs/gallery/linechart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisLineChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Line Chart with R\nlinechart\n\ngvisLineChart — gvisLineChart","text":"gvisLineChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisLineChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Line Chart with R\nlinechart\n\ngvisLineChart — gvisLineChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/linechart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisLineChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Line Chart with R\nlinechart\n\ngvisLineChart — gvisLineChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisLineChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Line Chart with R\nlinechart\n\ngvisLineChart — gvisLineChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.  df <- data.frame(country=c(\"US\", \"GB\", \"BR\"), val1=c(1,3,4), val2=c(23,12,32))  ## Line chart Line1 <- gvisLineChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\")) plot(Line1)   ## Add a customised title and smoothed curve Line2 <- gvisLineChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),              options=list(title=\"Hello World\",                           titleTextStyle=\"{color:'red',fontName:'Courier',fontSize:16}\",                           curveType='function')) plot(Line2)  if (FALSE) { ## Change y-axis to percentages Line3 <- gvisLineChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),                        options=list(vAxis=\"{format:'#,###%'}\")) plot(Line3)  }  ## Create a chart with two y-axis: Line4 <-  gvisLineChart(df, \"country\", c(\"val1\",\"val2\"),                         options=list(series=\"[{targetAxisIndex: 0},                                               {targetAxisIndex:1}]\",                           vAxes=\"[{title:'val1'}, {title:'val2'}]\"                           )) plot(Line4)  ## Line chart with edit button Line5 <- gvisLineChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),                        options=list(gvis.editor=\"Edit me!\")) plot(Line5)  ## Customizing lines  Dashed <-  gvisLineChart(df, xvar=\"country\", yvar=c(\"val1\",\"val2\"),              options=list(              series=\"[{color:'green', targetAxisIndex: 0,                         lineWidth: 1, lineDashStyle: [2, 2, 20, 2, 20, 2]},                        {color: 'blue',targetAxisIndex: 1,                         lineWidth: 2, lineDashStyle: [4, 1]}]\",                        vAxes=\"[{title:'val1'}, {title:'val2'}]\"                        )) plot(Dashed)"},{"path":"https://mages.github.io/googleVis/reference/gvisMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Maps with R\nmap\n\ngvisMap — gvisMap","title":"Google Maps with R\nmap\n\ngvisMap — gvisMap","text":"gvisMap function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Maps with R\nmap\n\ngvisMap — gvisMap","text":"","code":"gvisMap(data, locationvar = \"\", tipvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Maps with R\nmap\n\ngvisMap — gvisMap","text":"data data.frame. data least two columns location name (locationvar) variable display text tip icon (tipvar). locationvar column name data geo locations analysed. locations can provide two formats: Format 1 'latitude:longitude'. See example . Format 2 first column string contains address. address complete can make . tipvar column name data string text displayed tip icon. options list configuration options Google Map.  https://developers.google.com/chart/interactive/docs/gallery/map#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Maps with R\nmap\n\ngvisMap — gvisMap","text":"gvisMap  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Maps with R\nmap\n\ngvisMap — gvisMap","text":"maps well known Google Maps.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Maps with R\nmap\n\ngvisMap — gvisMap","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/map","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Maps with R\nmap\n\ngvisMap — gvisMap","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Maps with R\nmap\n\ngvisMap — gvisMap","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Internet ## connection to display the visualisation.    ## Example with latitude and longitude information ## Plot Hurricane Andrew (1992) storm path:  data(Andrew)  M1 <- gvisMap(Andrew, \"LatLong\" , \"Tip\",               options=list(showTip=TRUE, showLine=TRUE, enableScrollWheel=TRUE,                            mapType='hybrid', useMapTypeControl=TRUE,                            width=800,height=400))  plot(M1)    ## Example with address, here UK post-code and some html code in tooltip  df <- data.frame(Postcode=c(\"EC3M 7HA\", \"EC2P 2EJ\"),                  Tip=c(\"<a href='https://www.lloyds.com'>Lloyd's<\/a>\",                   \"<a href='https://www.guildhall.cityoflondon.gov.uk/'>Guildhall<\/a>\"))   M2 <- gvisMap(df, \"Postcode\", \"Tip\",               options=list(showTip=TRUE, mapType='normal',               enableScrollWheel=TRUE))   plot(M2)  ## Change mapping icons M3 <- gvisMap(df, \"Postcode\", \"Tip\",               options=list(showTip=TRUE, mapType='normal',               enableScrollWheel=TRUE,               icons=paste0(\"{\",               \"'default': {'normal': 'https://icons.iconarchive.com/\",               \"icons/icons-land/vista-map-markers/48/\",               \"Map-Marker-Ball-Azure-icon.png',\\n\",               \"'selected': 'https://icons.iconarchive.com/\",               \"icons/icons-land/vista-map-markers/48/\",               \"Map-Marker-Ball-Right-Azure-icon.png'\",               \"}}\")))                          plot(M3)"},{"path":"https://mages.github.io/googleVis/reference/gvisMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge two googleVis charts into one gvis-object — gvisMerge","title":"Merge two googleVis charts into one gvis-object — gvisMerge","text":"gvisMerge merges two gvis-objects, either next   one gvis-object. objects arranged HTML table.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge two googleVis charts into one gvis-object — gvisMerge","text":"","code":"gvisMerge(x, y, horizontal = FALSE,                 tableOptions = \"border=\\\"0\\\"\", chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge two googleVis charts into one gvis-object — gvisMerge","text":"x gvis-object. y gvis-object. horizontal boolean. Default FALSE. FALSE     two gvis-objects arranged , otherwise     next . tableOptions valid HTML table option string. Default \"border=\\\"0\\\"\". chartid character. missing (default) random chart id generated based     chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge two googleVis charts into one gvis-object — gvisMerge","text":"gvisMerge returns list class \"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type, 'gvisMerge' chartid character id chart object. Unique chart     ids required place several charts page. html list building blocks page header character string html page header: \t<html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag \t    reference Google's JavaScript library. jsData JavaScript function defining input \t    data JSON object. jsDrawChart JavaScript function \t    combing data visualisation API user \t    options. jsDisplayChart JavaScript function calling \t    handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart  \t    function. divChart <div> container embed chart \t    page.  caption character string standard caption, \tincluding data name chart id. footer character string html page footer: \t<\/body>...<\/html>, including used R googleVis version \tlink Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMerge.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Merge two googleVis charts into one gvis-object — gvisMerge","text":"Google Chart Tools API: https://developers.google.com/chart/ Follow link Google's data policy.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMerge.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge two googleVis charts into one gvis-object — gvisMerge","text":"Markus Gesmann markus.gesmann@gmail.com,","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisMerge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge two googleVis charts into one gvis-object — gvisMerge","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Internet ## connection to display the visualisation.  Pie1 <- gvisPieChart(CityPopularity)  ## Doughnut chart - a pie with a hole Pie2 <- gvisPieChart(CityPopularity, options=list(   slices=\"{4: {offset: 0.2}, 0: {offset: 0.3}}\",   title='City popularity',   legend='none',   pieSliceText='label',   pieHole=0.5))  plot(gvisMerge(Pie2, Pie1,          tableOptions = \"cellspacing=\\\"20\\\" bgcolor=\\\"#AABBCC\\\"\",         horizontal=TRUE))                 ## Nested charts                                G <- gvisGeoChart(Exports, \"Country\", \"Profit\",                    options=list(width=250, height=100)) T <- gvisTable(Exports,                    options=list(width=250, height=300))  GT <- gvisMerge(G,T, horizontal=FALSE)  plot(GT)  M <- gvisMotionChart(Fruits, \"Fruit\", \"Year\",                      options=list(width=400, height=410)) #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations  GTM <- gvisMerge(GT, M, horizontal=TRUE,                      tableOptions=\"cellspacing=10\") plot(GTM)   line <- gvisLineChart(OpenClose, \"Weekday\", c(\"Open\", \"Close\"),          options=list(legend='none', width=300, height=150)) column <- gvisColumnChart(OpenClose, \"Weekday\", c(\"Open\", \"Close\"),               options=list(legend='none', width=300, height=150)) area <- gvisAreaChart(OpenClose, \"Weekday\", c(\"Open\", \"Close\"),               options=list(legend='none', width=300, height=150)) bar <- gvisBarChart(OpenClose, \"Weekday\", c(\"Open\", \"Close\"),               options=list(legend='none', width=300, height=150)) LBCA <- gvisMerge(gvisMerge(line, bar), gvisMerge(column, area),                   horizontal=TRUE, tableOptions=\"bgcolor=\\\"#AABBCC\\\"\")   plot(LBCA)  ## Applying gvisMerge successively  p <- Reduce(gvisMerge, list(line, column, area, bar)) plot(p)"},{"path":"https://mages.github.io/googleVis/reference/gvisMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Print and plot gvis objects — gvis Methods","title":"Print and plot gvis objects — gvis Methods","text":"Methods print plot gvis objects","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print and plot gvis objects — gvis Methods","text":"","code":"# S3 method for gvis print(x, tag=NULL, file = \"\", ...)      # S3 method for gvis plot(x, tag=NULL,...)"},{"path":"https://mages.github.io/googleVis/reference/gvisMethods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print and plot gvis objects — gvis Methods","text":"x object class gvis, HTML file case     plot.gvis. tag Default NULL. Name tag objects     extracted gvis object. tag missing      values getOption(\"gvis.print.tag\"),     getOption(\"gvis.plot.tag\") used print.gvis     plot.gvis respectively. complete list available tags given command     getOption(\"gvis.tags\"). default value gvis.print.tag \"html\",     means print.gvis show complete web page     visualisation, tag \"chart\" present code     visualisation chart . information see     details section. default tag plot.gvis.tag NULL,     result R opening browser window, tag     NULL give behaviour print.gvis,     e.g. tag='chart' setting options(gvis.plot.tag='chart')     produce output print(x, tag='chart').     behaviour particular helpful googleVis used     scripts, like knitr R.rsp. plot commands can     used initially interactive mode one change     options() produce HTML output required programmatic     run script. See example section     knitr case study. plot.gvis ignores argument tag x     HTML file name. file file name. \"\" (    default), output printed standard output connection,     console unless redirected sink. ... arguments passed cat       (print.gvis) browseURL (plot.gvis).","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMethods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print and plot gvis objects — gvis Methods","text":"object class \"gvis\" list containing least   following components (tags): type Google visualisation type, e.g. 'MotionChart' chartid character id chart object. Unique chart       ids required place several charts page. html list building blocks page header character string html page header: \t<html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag \t    reference Google's JavaScript library. jsData JavaScript function defining input \t    data JSON object. jsDrawChart JavaScript function \t    combing data visualisation API user \t    options. jsDisplayChart JavaScript function calling \t    handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart  \t    function. divChart <div> container embed chart \t    page.  caption character string standard caption, \tincluding data name chart id. footer character string html page footer: \t<\/body>...<\/html>, including used R googleVis version \tlink Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print and plot gvis objects — gvis Methods","text":"print.gvis None (invisible NULL). plot.gvis Returns file name invisibly.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMethods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Print and plot gvis objects — gvis Methods","text":"Please see also package vignette usage googleVis   package RApache, brew, knitr R.rsp.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMethods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print and plot gvis objects — gvis Methods","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMethods.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Print and plot gvis objects — gvis Methods","text":"plot command open graphics device   traditional way. Instead creates HTML files temporary   directory uses R HTTP server display output     googleVis function locally.    browser Flash Internet connection required.   displayed page includes link (click chart id)   page, shows code chart user copy   paste page.","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisMethods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print and plot gvis objects — gvis Methods","text":"","code":"## Show gvis options sapply(c(\"gvis.print.tag\", \"gvis.plot.tag\", \"gvis.tags\"), getOption) #> $gvis.print.tag #> [1] \"html\" #>  #> $gvis.plot.tag #> NULL #>  #> $gvis.tags #>  [1] \"type\"           \"chartid\"        \"html\"           \"header\"         #>  [5] \"chart\"          \"jsHeader\"       \"jsData\"         \"jsDrawChart\"    #>  [9] \"jsDisplayChart\" \"jsFooter\"       \"jsChart\"        \"divChart\"       #> [13] \"caption\"        \"footer\"         #>   M <- gvisMotionChart(Fruits, \"Fruit\", \"Year\") #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations str(M) #> List of 3 #>  $ type   : chr \"MotionChart\" #>  $ chartid: chr \"MotionChartID382732a7b271\" #>  $ html   :List of 4 #>   ..$ header : chr \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\"\\n  \\\"https://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.\"| __truncated__ #>   ..$ chart  : Named chr [1:7] \"<!-- MotionChart generated in R 4.2.0 by googleVis 0.6.13 package -->\\n<!-- Fri Apr 22 21:17:52 2022 -->\\n\\n\\n<\"| __truncated__ \"\\n// jsData \\nfunction gvisDataMotionChartID382732a7b271 () {\\nvar data = new google.visualization.DataTable();\"| __truncated__ \"\\n// jsDrawChart\\nfunction drawChartMotionChartID382732a7b271() {\\nvar data = gvisDataMotionChartID382732a7b271\"| __truncated__ \"\\n// jsDisplayChart\\n(function() {\\nvar pkgs = window.__gvisPackages = window.__gvisPackages || [];\\nvar callba\"| __truncated__ ... #>   .. ..- attr(*, \"names\")= chr [1:7] \"jsHeader\" \"jsData\" \"jsDrawChart\" \"jsDisplayChart\" ... #>   ..$ caption: chr \"<div><span>Data: Fruits &#8226; Chart ID: <a href=\\\"Chart_MotionChartID382732a7b271.html\\\">MotionChartID382732a\"| __truncated__ #>   ..$ footer : chr \"\\n<!-- htmlFooter -->\\n<span> \\n  R version 4.2.0 (2022-04-22) \\n  &#8226; <a href=\\\"https://developers.google.\"| __truncated__ #>  - attr(*, \"class\")= chr [1:2] \"gvis\" \"list\" ## The output for a complete web page M #> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" #>   \"https://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"> #> <html xmlns=\"https://www.w3.org/1999/xhtml\"> #> <head> #> <title>MotionChartID382732a7b271<\/title> #> <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" /> #> <style type=\"text/css\"> #> body { #>   color: #444444; #>   font-family: Arial,Helvetica,sans-serif; #>   font-size: 75%; #>   } #>   a { #>   color: #4D87C7; #>   text-decoration: none; #> } #> <\/style> #> <\/head> #> <body> #>  <!-- MotionChart generated in R 4.2.0 by googleVis 0.6.13 package --> #> <!-- Fri Apr 22 21:17:52 2022 --> #>  #>  #> <!-- jsHeader --> #> <script type=\"text/javascript\"> #>   #> // jsData  #> function gvisDataMotionChartID382732a7b271 () { #> var data = new google.visualization.DataTable(); #> var datajson = #> [ #>  [ #> \"Apples\", #> 2008, #> \"West\", #> 98, #> 78, #> 20, #> \"2008-12-31\" #> ], #> [ #> \"Apples\", #> 2009, #> \"West\", #> 111, #> 79, #> 32, #> \"2009-12-31\" #> ], #> [ #> \"Apples\", #> 2010, #> \"West\", #> 89, #> 76, #> 13, #> \"2010-12-31\" #> ], #> [ #> \"Oranges\", #> 2008, #> \"East\", #> 96, #> 81, #> 15, #> \"2008-12-31\" #> ], #> [ #> \"Bananas\", #> 2008, #> \"East\", #> 85, #> 76, #> 9, #> \"2008-12-31\" #> ], #> [ #> \"Oranges\", #> 2009, #> \"East\", #> 93, #> 80, #> 13, #> \"2009-12-31\" #> ], #> [ #> \"Bananas\", #> 2009, #> \"East\", #> 94, #> 78, #> 16, #> \"2009-12-31\" #> ], #> [ #> \"Oranges\", #> 2010, #> \"East\", #> 98, #> 91, #> 7, #> \"2010-12-31\" #> ], #> [ #> \"Bananas\", #> 2010, #> \"East\", #> 81, #> 71, #> 10, #> \"2010-12-31\" #> ]  #> ]; #> data.addColumn('string','Fruit'); #> data.addColumn('number','Year'); #> data.addColumn('string','Location'); #> data.addColumn('number','Sales'); #> data.addColumn('number','Expenses'); #> data.addColumn('number','Profit'); #> data.addColumn('string','Date'); #> data.addRows(datajson); #> return(data); #> } #>   #> // jsDrawChart #> function drawChartMotionChartID382732a7b271() { #> var data = gvisDataMotionChartID382732a7b271(); #> var options = {}; #> options[\"width\"] = 600; #> options[\"height\"] = 500; #> options[\"state\"] = \"\"; #>  #>  #>     var chart = new google.visualization.MotionChart( #>     document.getElementById('MotionChartID382732a7b271') #>     ); #>     chart.draw(data,options); #>      #>  #> } #>    #>   #> // jsDisplayChart #> (function() { #> var pkgs = window.__gvisPackages = window.__gvisPackages || []; #> var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; #> var chartid = \"motionchart\"; #>    #> // Manually see if chartid is in pkgs (not all browsers support Array.indexOf) #> var i, newPackage = true; #> for (i = 0; newPackage && i < pkgs.length; i++) { #> if (pkgs[i] === chartid) #> newPackage = false; #> } #> if (newPackage) #>   pkgs.push(chartid); #>    #> // Add the drawChart function to the global list of callbacks #> callbacks.push(drawChartMotionChartID382732a7b271); #> })(); #> function displayChartMotionChartID382732a7b271() { #>   var pkgs = window.__gvisPackages = window.__gvisPackages || []; #>   var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; #>   window.clearTimeout(window.__gvisLoad); #>   // The timeout is set to 100 because otherwise the container div we are #>   // targeting might not be part of the document yet #>   window.__gvisLoad = setTimeout(function() { #>   var pkgCount = pkgs.length; #>   google.load(\"visualization\", \"1\", { packages:pkgs, callback: function() { #>   if (pkgCount != pkgs.length) { #>   // Race condition where another setTimeout call snuck in after us; if #>   // that call added a package, we must not shift its callback #>   return; #> } #> while (callbacks.length > 0) #> callbacks.shift()(); #> } }); #> }, 100); #> } #>   #> // jsFooter #> <\/script> #>   #> <!-- jsChart -->   #> <script type=\"text/javascript\" src=\"https://www.google.com/jsapi?callback=displayChartMotionChartID382732a7b271\"><\/script> #>   #> <!-- divChart --> #>    #> <div id=\"MotionChartID382732a7b271\"  #>   style=\"width: 600; height: 500;\"> #> <\/div> #>  <div><span>Data: Fruits &#8226; Chart ID: <a href=\"Chart_MotionChartID382732a7b271.html\">MotionChartID382732a7b271<\/a> &#8226; <a href=\"https://mages.github.io/googleVis/\">googleVis-0.6.13<\/a><\/span><br />  #> <!-- htmlFooter --> #> <span>  #>   R version 4.2.0 (2022-04-22)  #>   &#8226; <a href=\"https://developers.google.com/terms/\">Google Terms of Use<\/a> &#8226; <a href=\"https://developers.google.com/chart/interactive/docs/gallery/motionchart\">Documentation and Data Policy<\/a> #> <\/span><\/div> #> <\/body> #> <\/html>  ## Access only the plot, M$html$chartjsHeaderotionChart generated in R 4.2.0 by googleVis 0.6.13 package -->\\n<!-- Fri Apr 22 21:17:52 2022 -->\\n\\n\\n<!-- jsHeader -->\\n<script type=\\\"text/javascript\\\">\\njsData  #>                                                                                                                                                                                                                                                                                                                      \"\\n// jsData \\nfunction gvisDataMotionChartID382732a7b271 () {\\nvar data = new google.visualization.DataTable();\\nvar datajson =\\n[\\n [\\n\\\"Apples\\\",\\n2008,\\n\\\"West\\\",\\n98,\\n78,\\n20,\\n\\\"2008-12-31\\\"\\n],\\n[\\n\\\"Apples\\\",\\n2009,\\n\\\"West\\\",\\n111,\\n79,\\n32,\\n\\\"2009-12-31\\\"\\n],\\n[\\n\\\"Apples\\\",\\n2010,\\n\\\"West\\\",\\n89,\\n76,\\n13,\\n\\\"2010-12-31\\\"\\n],\\n[\\n\\\"Oranges\\\",\\n2008,\\n\\\"East\\\",\\n96,\\n81,\\n15,\\n\\\"2008-12-31\\\"\\n],\\n[\\n\\\"Bananas\\\",\\n2008,\\n\\\"East\\\",\\n85,\\n76,\\n9,\\n\\\"2008-12-31\\\"\\n],\\n[\\n\\\"Oranges\\\",\\n2009,\\n\\\"East\\\",\\n93,\\n80,\\n13,\\n\\\"2009-12-31\\\"\\n],\\n[\\n\\\"Bananas\\\",\\n2009,\\n\\\"East\\\",\\n94,\\n78,\\n16,\\n\\\"2009-12-31\\\"\\n],\\n[\\n\\\"Oranges\\\",\\n2010,\\n\\\"East\\\",\\n98,\\n91,\\n7,\\n\\\"2010-12-31\\\"\\n],\\n[\\n\\\"Bananas\\\",\\n2010,\\n\\\"East\\\",\\n81,\\n71,\\n10,\\n\\\"2010-12-31\\\"\\n] \\n];\\ndata.addColumn('string','Fruit');\\ndata.addColumn('number','Year');\\ndata.addColumn('string','Location');\\ndata.addColumn('number','Sales');\\ndata.addColumn('number','Expenses');\\ndata.addColumn('number','Profit');\\ndata.addColumn('string','Date');\\ndata.addRows(datajson);\\nreturn(data);\\n}\\njsDrawChartn// jsDrawChart\\nfunction drawChartMotionChartID382732a7b271() {\\nvar data = gvisDataMotionChartID382732a7b271();\\nvar options = {};\\noptions[\\\"width\\\"] = 600;\\noptions[\\\"height\\\"] = 500;\\noptions[\\\"state\\\"] = \\\"\\\";\\n\\n\\n    var chart = new google.visualization.MotionChart(\\n    document.getElementById('MotionChartID382732a7b271')\\n    );\\n    chart.draw(data,options);\\n    \\n\\n}\\n  \\njsDisplayChart  #> \"\\n// jsDisplayChart\\n(function() {\\nvar pkgs = window.__gvisPackages = window.__gvisPackages || [];\\nvar callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];\\nvar chartid = \\\"motionchart\\\";\\n  \\n// Manually see if chartid is in pkgs (not all browsers support Array.indexOf)\\nvar i, newPackage = true;\\nfor (i = 0; newPackage && i < pkgs.length; i++) {\\nif (pkgs[i] === chartid)\\nnewPackage = false;\\n}\\nif (newPackage)\\n  pkgs.push(chartid);\\n  \\n// Add the drawChart function to the global list of callbacks\\ncallbacks.push(drawChartMotionChartID382732a7b271);\\n})();\\nfunction displayChartMotionChartID382732a7b271() {\\n  var pkgs = window.__gvisPackages = window.__gvisPackages || [];\\n  var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || [];\\n  window.clearTimeout(window.__gvisLoad);\\n  // The timeout is set to 100 because otherwise the container div we are\\n  // targeting might not be part of the document yet\\n  window.__gvisLoad = setTimeout(function() {\\n  var pkgCount = pkgs.length;\\n  google.load(\\\"visualization\\\", \\\"1\\\", { packages:pkgs, callback: function() {\\n  if (pkgCount != pkgs.length) {\\n  // Race condition where another setTimeout call snuck in after us; if\\n  // that call added a package, we must not shift its callback\\n  return;\\n}\\nwhile (callbacks.length > 0)\\ncallbacks.shift()();\\n} });\\n}, 100);\\n}\\njsFootern// jsFooter\\n<\/script>\\njsChartn<!-- jsChart -->  \\n<script type=\\\"text/javascript\\\" src=\\\"https://www.google.com/jsapi?callback=displayChartMotionChartID382732a7b271\\\"><\/script>\\ndivChartn<!-- divChart -->\\n  \\n<div id=\\\"MotionChartID382732a7b271\\\" \\n  style=\\\"width: 600; height: 500;\\\">\\n<\/div>\\n\"   ## wrap it in cat and it becomes more readable, cat(unlist(M$html$chart)) #> <!-- MotionChart generated in R 4.2.0 by googleVis 0.6.13 package --> #> <!-- Fri Apr 22 21:17:52 2022 --> #>  #>  #> <!-- jsHeader --> #> <script type=\"text/javascript\"> #>   #> // jsData  #> function gvisDataMotionChartID382732a7b271 () { #> var data = new google.visualization.DataTable(); #> var datajson = #> [ #>  [ #> \"Apples\", #> 2008, #> \"West\", #> 98, #> 78, #> 20, #> \"2008-12-31\" #> ], #> [ #> \"Apples\", #> 2009, #> \"West\", #> 111, #> 79, #> 32, #> \"2009-12-31\" #> ], #> [ #> \"Apples\", #> 2010, #> \"West\", #> 89, #> 76, #> 13, #> \"2010-12-31\" #> ], #> [ #> \"Oranges\", #> 2008, #> \"East\", #> 96, #> 81, #> 15, #> \"2008-12-31\" #> ], #> [ #> \"Bananas\", #> 2008, #> \"East\", #> 85, #> 76, #> 9, #> \"2008-12-31\" #> ], #> [ #> \"Oranges\", #> 2009, #> \"East\", #> 93, #> 80, #> 13, #> \"2009-12-31\" #> ], #> [ #> \"Bananas\", #> 2009, #> \"East\", #> 94, #> 78, #> 16, #> \"2009-12-31\" #> ], #> [ #> \"Oranges\", #> 2010, #> \"East\", #> 98, #> 91, #> 7, #> \"2010-12-31\" #> ], #> [ #> \"Bananas\", #> 2010, #> \"East\", #> 81, #> 71, #> 10, #> \"2010-12-31\" #> ]  #> ]; #> data.addColumn('string','Fruit'); #> data.addColumn('number','Year'); #> data.addColumn('string','Location'); #> data.addColumn('number','Sales'); #> data.addColumn('number','Expenses'); #> data.addColumn('number','Profit'); #> data.addColumn('string','Date'); #> data.addRows(datajson); #> return(data); #> } #>   #> // jsDrawChart #> function drawChartMotionChartID382732a7b271() { #> var data = gvisDataMotionChartID382732a7b271(); #> var options = {}; #> options[\"width\"] = 600; #> options[\"height\"] = 500; #> options[\"state\"] = \"\"; #>  #>  #>     var chart = new google.visualization.MotionChart( #>     document.getElementById('MotionChartID382732a7b271') #>     ); #>     chart.draw(data,options); #>      #>  #> } #>    #>   #> // jsDisplayChart #> (function() { #> var pkgs = window.__gvisPackages = window.__gvisPackages || []; #> var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; #> var chartid = \"motionchart\"; #>    #> // Manually see if chartid is in pkgs (not all browsers support Array.indexOf) #> var i, newPackage = true; #> for (i = 0; newPackage && i < pkgs.length; i++) { #> if (pkgs[i] === chartid) #> newPackage = false; #> } #> if (newPackage) #>   pkgs.push(chartid); #>    #> // Add the drawChart function to the global list of callbacks #> callbacks.push(drawChartMotionChartID382732a7b271); #> })(); #> function displayChartMotionChartID382732a7b271() { #>   var pkgs = window.__gvisPackages = window.__gvisPackages || []; #>   var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; #>   window.clearTimeout(window.__gvisLoad); #>   // The timeout is set to 100 because otherwise the container div we are #>   // targeting might not be part of the document yet #>   window.__gvisLoad = setTimeout(function() { #>   var pkgCount = pkgs.length; #>   google.load(\"visualization\", \"1\", { packages:pkgs, callback: function() { #>   if (pkgCount != pkgs.length) { #>   // Race condition where another setTimeout call snuck in after us; if #>   // that call added a package, we must not shift its callback #>   return; #> } #> while (callbacks.length > 0) #> callbacks.shift()(); #> } }); #> }, 100); #> } #>   #> // jsFooter #> <\/script> #>   #> <!-- jsChart -->   #> <script type=\"text/javascript\" src=\"https://www.google.com/jsapi?callback=displayChartMotionChartID382732a7b271\"><\/script> #>   #> <!-- divChart --> #>    #> <div id=\"MotionChartID382732a7b271\"  #>   style=\"width: 600; height: 500;\"> #> <\/div>  ## or use the print function. print(M, tag=\"chart\") #> <!-- MotionChart generated in R 4.2.0 by googleVis 0.6.13 package --> #> <!-- Fri Apr 22 21:17:52 2022 --> #>  #>  #> <!-- jsHeader --> #> <script type=\"text/javascript\"> #>   #> // jsData  #> function gvisDataMotionChartID382732a7b271 () { #> var data = new google.visualization.DataTable(); #> var datajson = #> [ #>  [ #> \"Apples\", #> 2008, #> \"West\", #> 98, #> 78, #> 20, #> \"2008-12-31\" #> ], #> [ #> \"Apples\", #> 2009, #> \"West\", #> 111, #> 79, #> 32, #> \"2009-12-31\" #> ], #> [ #> \"Apples\", #> 2010, #> \"West\", #> 89, #> 76, #> 13, #> \"2010-12-31\" #> ], #> [ #> \"Oranges\", #> 2008, #> \"East\", #> 96, #> 81, #> 15, #> \"2008-12-31\" #> ], #> [ #> \"Bananas\", #> 2008, #> \"East\", #> 85, #> 76, #> 9, #> \"2008-12-31\" #> ], #> [ #> \"Oranges\", #> 2009, #> \"East\", #> 93, #> 80, #> 13, #> \"2009-12-31\" #> ], #> [ #> \"Bananas\", #> 2009, #> \"East\", #> 94, #> 78, #> 16, #> \"2009-12-31\" #> ], #> [ #> \"Oranges\", #> 2010, #> \"East\", #> 98, #> 91, #> 7, #> \"2010-12-31\" #> ], #> [ #> \"Bananas\", #> 2010, #> \"East\", #> 81, #> 71, #> 10, #> \"2010-12-31\" #> ]  #> ]; #> data.addColumn('string','Fruit'); #> data.addColumn('number','Year'); #> data.addColumn('string','Location'); #> data.addColumn('number','Sales'); #> data.addColumn('number','Expenses'); #> data.addColumn('number','Profit'); #> data.addColumn('string','Date'); #> data.addRows(datajson); #> return(data); #> } #>   #> // jsDrawChart #> function drawChartMotionChartID382732a7b271() { #> var data = gvisDataMotionChartID382732a7b271(); #> var options = {}; #> options[\"width\"] = 600; #> options[\"height\"] = 500; #> options[\"state\"] = \"\"; #>  #>  #>     var chart = new google.visualization.MotionChart( #>     document.getElementById('MotionChartID382732a7b271') #>     ); #>     chart.draw(data,options); #>      #>  #> } #>    #>   #> // jsDisplayChart #> (function() { #> var pkgs = window.__gvisPackages = window.__gvisPackages || []; #> var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; #> var chartid = \"motionchart\"; #>    #> // Manually see if chartid is in pkgs (not all browsers support Array.indexOf) #> var i, newPackage = true; #> for (i = 0; newPackage && i < pkgs.length; i++) { #> if (pkgs[i] === chartid) #> newPackage = false; #> } #> if (newPackage) #>   pkgs.push(chartid); #>    #> // Add the drawChart function to the global list of callbacks #> callbacks.push(drawChartMotionChartID382732a7b271); #> })(); #> function displayChartMotionChartID382732a7b271() { #>   var pkgs = window.__gvisPackages = window.__gvisPackages || []; #>   var callbacks = window.__gvisCallbacks = window.__gvisCallbacks || []; #>   window.clearTimeout(window.__gvisLoad); #>   // The timeout is set to 100 because otherwise the container div we are #>   // targeting might not be part of the document yet #>   window.__gvisLoad = setTimeout(function() { #>   var pkgCount = pkgs.length; #>   google.load(\"visualization\", \"1\", { packages:pkgs, callback: function() { #>   if (pkgCount != pkgs.length) { #>   // Race condition where another setTimeout call snuck in after us; if #>   // that call added a package, we must not shift its callback #>   return; #> } #> while (callbacks.length > 0) #> callbacks.shift()(); #> } }); #> }, 100); #> } #>   #> // jsFooter #> <\/script> #>   #> <!-- jsChart -->   #> <script type=\"text/javascript\" src=\"https://www.google.com/jsapi?callback=displayChartMotionChartID382732a7b271\"><\/script> #>   #> <!-- divChart --> #>    #> <div id=\"MotionChartID382732a7b271\"  #>   style=\"width: 600; height: 500;\"> #> <\/div>  ## Extract the data as a JavaScript function. print(M, tag=\"jsData\") #>  #> // jsData  #> function gvisDataMotionChartID382732a7b271 () { #> var data = new google.visualization.DataTable(); #> var datajson = #> [ #>  [ #> \"Apples\", #> 2008, #> \"West\", #> 98, #> 78, #> 20, #> \"2008-12-31\" #> ], #> [ #> \"Apples\", #> 2009, #> \"West\", #> 111, #> 79, #> 32, #> \"2009-12-31\" #> ], #> [ #> \"Apples\", #> 2010, #> \"West\", #> 89, #> 76, #> 13, #> \"2010-12-31\" #> ], #> [ #> \"Oranges\", #> 2008, #> \"East\", #> 96, #> 81, #> 15, #> \"2008-12-31\" #> ], #> [ #> \"Bananas\", #> 2008, #> \"East\", #> 85, #> 76, #> 9, #> \"2008-12-31\" #> ], #> [ #> \"Oranges\", #> 2009, #> \"East\", #> 93, #> 80, #> 13, #> \"2009-12-31\" #> ], #> [ #> \"Bananas\", #> 2009, #> \"East\", #> 94, #> 78, #> 16, #> \"2009-12-31\" #> ], #> [ #> \"Oranges\", #> 2010, #> \"East\", #> 98, #> 91, #> 7, #> \"2010-12-31\" #> ], #> [ #> \"Bananas\", #> 2010, #> \"East\", #> 81, #> 71, #> 10, #> \"2010-12-31\" #> ]  #> ]; #> data.addColumn('string','Fruit'); #> data.addColumn('number','Year'); #> data.addColumn('string','Location'); #> data.addColumn('number','Sales'); #> data.addColumn('number','Expenses'); #> data.addColumn('number','Profit'); #> data.addColumn('string','Date'); #> data.addRows(datajson); #> return(data); #> }  ## Display the visualisation. ## A web browser with Internet connection and Flash is required. plot(M)  ## Combine with another chart, e.g. table #tbl <- gvisTable(Fruits, options=list(height=220)) #Mtbl <- gvisMerge(M, tbl) #plot(Mtbl)   ## Example of using googleVis with knitr and markdown  if (FALSE) { ## Simple knitr/markdown file with googleVis knitrRmd <-[1872 chars quoted with '\"']  ## Write the content of knitrRmd into a Rmd-file, knit it and convert it ## into a html output. Finally show the file with the R-help http ## server, this will ensure that also the motion chart is visible.  library(knitr) library(markdown)  wd <- getwd() setwd(tempdir()) fn=tempfile() fn.Rmd <- paste(fn, \".Rmd\", sep=\"\") fn.md <- paste(fn, \".md\", sep=\"\") fn.html <- paste(fn, \"-out.html\", sep=\"\")  ## Write R Markdown into a file cat(knitrRmd, file=fn.Rmd) render_markdown() knit(fn.Rmd, fn.md) knit2html(fn.md)  ## Open output in browser ## Use plot.gvis which will use the R-help http server ## The URL will start with http://127.0.0.1... ## The HTML file will be copied into a temporary directory plot.gvis(fn.html) ## Compare to browseURL, its URL will start with file://... the motion ## chart is unlikely to be displayed because of Flash security ## settings. See the googleVis vignette for more details.  browseURL(fn.html) setwd(wd) }  if (FALSE) { ## Updating the data of an existing googleVis web page  ## Suppose you have an existing web page in which you embedded a ## motion chart with the id \"mtnc\". ## Now you have a new set of data, but you would like to avoid ## touching the html file again. ## The idea is to write the data and JavaScript functions into separate ## files and to refer to these in the html page.  ## In this example we call the chart id \"mtnc\" ## To display the example we use the R HTTP server again, and ## write the files into a temp directory  myChartID <- \"mtnc\" ## baseURL should reflect your web address, e.g. http://myHomePage.com baseURL <- sprintf(\"http://127.0.0.1:%s/custom/googleVis\", tools:::httpdPort) wwwdir <- tempdir() ## the www repository on your computer     ## Create a motion chart M=gvisMotionChart(Fruits, \"Fruit\", \"Year\", chartid=myChartID)  ## Here is our plot again plot(M)  ## Write the data and functions into separate files: cat(M$html$chart['jsData'], file=file.path(wwwdir, \"gvisData.js\")) cat(M$html$chart[c('jsDrawChart', 'jsDisplayChart', 'jsChart')],            file=file.path(wwwdir, \"gvisFunctions.js\"))     ## Create a html page with reference to the above ## JavaScript files    html <- sprintf(' <html>   <head>   <script type=\"text/javascript\" src=\"https://www.google.com/jsapi\">   <\/script>   <script type=\"text/javascript\" src=\"%s/gvisFunctions.js\"><\/script>   <script type=\"text/javascript\" src=\"%s/gvisData.js\"><\/script>   <script type=\"text/javascript\">   displayChart%s()   <\/script>   <\/head>   <body>   <div id=\"%s\" style=\"width: 600px; height: 500px;\"><\/div>   <\/body>   <\/html>   ', baseURL, baseURL, myChartID, myChartID)    ## Write html scaffold into a file cat(html, file=file.path(wwwdir, paste(\"Chart\", myChartID, \".html\", sep=\"\")))  ## Display the result via URL <- paste(baseURL,\"/Chart\", myChartID, \".html\", sep=\"\") browseURL(URL)  ## Update the data, say the data should have shown North and South ## instead of East and West as a location   FruitsUpdate <- Fruits levels(FruitsUpdate$Location)=c(\"North\", \"South\")  Mupdate=gvisMotionChart(FruitsUpdate, \"Fruit\", \"Year\", chartid=myChartID)  ## Only update the file gvisData.js: cat(Mupdate$html$chart['jsData'], file=file.path(wwwdir, \"gvisData.js\"))  ## Redisplay the chart with the updated data browseURL(URL)  }"},{"path":"https://mages.github.io/googleVis/reference/gvisMotionChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","title":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","text":"gvisMotionChart function reads data.frame creates text output referring Google Visualisation API,  can included web page, stand-alone page.  actual chart rendered web browser Flash. motion chart dynamic chart explore several indicators  time.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMotionChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","text":"","code":"gvisMotionChart(   data,   idvar = \"id\",   timevar = \"time\",   xvar = \"\",   yvar = \"\",   colorvar = \"\",   sizevar = \"\",   date.format = \"%Y/%m/%d\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisMotionChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","text":"data data.frame. data least four columns subject name (idvar), time (timevar) two columns numeric values. columns, numeric character/factor optional. combination idvar timevar describe unique row. column names idvar timevar specified. columns, specified arguments (xvar, yvar, colorvar, sizevar), assumed order  arguments. idvar column name data subject  analysed. timevar column name data shows time  dimension. information either numeric, class  Date character follows pattern   'YYYYWww' (e.g. '2010W04' weekly data) 'YYYYQq'  (e.g. '2010Q1' quarterly data). xvar column name numerical vector data  plotted x-axis. yvar column name numerical vector data  plotted y-axis. colorvar column name data identifies bubbles  series. Use value identify bubbles belong  series; bubbles series assigned  color. Series can configured using series option. sizevar values column mapped actual pixel  values using sizeAxis option. date.format timevar class Date  argument specifies dates reformatted  used JavaScript. options list configuration options Google Motion Chart. options documented detail Google online:  https://developers.google.com/chart/interactive/docs/gallery/motionchart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMotionChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","text":"gvisMotionChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMotionChart.html","id":"warnings","dir":"Reference","previous_headings":"","what":"Warnings","title":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","text":"Flash security settings chart  might work correctly accessed file location  browser (e.g., file:///c:/webhost/myhost/myviz.html) rather  web server URL (e.g. https://www.myhost.com/myviz.html).  See googleVis package vignette Macromedia web  site (https://www.macromedia.com/support/documentation/en/flashplayer/help/)  details.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMotionChart.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","text":"Please note timevar values less 100  shown years 19xx.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMotionChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/motionchart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisMotionChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","text":"Markus Gesmann markus.gesmann@gmail.com,  Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisMotionChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Motion Chart with R\nmotionchart\n\ngvisMotionChart — gvisMotionChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Flash and Internet ## connection to display the visualisation. M1 <- gvisMotionChart(Fruits, idvar=\"Fruit\", timevar=\"Year\") #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations plot(M1)  if (FALSE) { ## Usage of date variable M2 <- gvisMotionChart(Fruits, idvar=\"Fruit\", timevar=\"Date\",                       date.format = \"\\\\%Y\\\\%m\\\\%d\")                        plot(M2)                        ## Display weekly data: M3 <- gvisMotionChart(Fruits, \"Fruit\", \"Date\", date.format=\"\\\\%YW\\\\%W\") plot(M3)  } ## Options: no side panel on the right M4 <- gvisMotionChart(Fruits,\"Fruit\", \"Year\",                       options=list(showSidePanel=FALSE)) #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations plot(M4)  ## Options: trails un-ticked M5 <- gvisMotionChart(Fruits, \"Fruit\", \"Year\",                       options=list(state='{\"showTrails\":false};')) #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations                        plot(M5)  ## You can change some of displaying settings via the browser, ## e.g. the level of opacity of non-selected items, or the chart type. ## The state string from the 'Advanced' tab can be used to set those ## settings via R. Just copy and past the string from the browser into ## the argument state of the options list. ## Here is an example of a motion chart, with an initial line chart ## displayed. Ensure that you have a newline at the start and end of ## your settings string.  myStateSettings <-' {\"xZoomedDataMin\":1199145600000,\"colorOption\":\"2\", \"duration\":{\"timeUnit\":\"Y\",\"multiplier\":1},\"yLambda\":1, \"yAxisOption\":\"4\",\"sizeOption\":\"_UNISIZE\", \"iconKeySettings\":[],\"xLambda\":1,\"nonSelectedAlpha\":0, \"xZoomedDataMax\":1262304000000,\"iconType\":\"LINE\", \"dimensions\":{\"iconDimensions\":[\"dim0\"]}, \"showTrails\":false,\"uniColorForNonSelected\":false, \"xAxisOption\":\"_TIME\",\"orderedByX\":false,\"playDuration\":15000, \"xZoomedIn\":false,\"time\":\"2010\",\"yZoomedDataMin\":0, \"yZoomedIn\":false,\"orderedByY\":false,\"yZoomedDataMax\":100} ' M6a <- gvisMotionChart(Fruits, \"Fruit\", \"Year\",                         options=list(state=myStateSettings)) #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations plot(M6a)  ## Newline set explicitly myStateSettings <-'\\n{\"iconType\":\"LINE\"}\\n' M6b <- gvisMotionChart(Fruits, \"Fruit\", \"Year\",                         options=list(state=myStateSettings)) #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations plot(M6b)   ## Define which columns are used for the initial setup of the various ## dimensions M7 <- gvisMotionChart(Fruits, idvar=\"Fruit\", timevar=\"Year\",                       xvar=\"Profit\", yvar=\"Expenses\",                       colorvar=\"Location\", sizevar=\"Sales\") #> Warning: Flash charts are no longer supported by most browsers. #> An alternative is plotly::ggplotly. #> For more see https://plotly.com/r/animations/#mulitple-trace-animations plot(M7) ## For more information see: ## https://developers.google.com/chart/interactive/docs/gallery/motionchart  ## See also the demo(WorldBank). It demonstrates how you can access ## country level data from the World Bank to create Gapminder-like ## plots."},{"path":"https://mages.github.io/googleVis/reference/gvisOrgChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Org Chart with R\norgchart\n\ngvisOrgChart — gvisOrgChart","title":"Google Org Chart with R\norgchart\n\ngvisOrgChart — gvisOrgChart","text":"organizational chart supports selection.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisOrgChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Org Chart with R\norgchart\n\ngvisOrgChart — gvisOrgChart","text":"","code":"gvisOrgChart(   data,   idvar = \"\",   parentvar = \"\",   tipvar = \"\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisOrgChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Org Chart with R\norgchart\n\ngvisOrgChart — gvisOrgChart","text":"data data.frame. data least three columns. row data table describes one node (rectangle graph). node (except root node) one parent nodes. node sized colored according values relative nodes currently shown. idvar column name data describing ID node. unique among nodes, can include characters, including spaces. shown node. can specify formatted value show chart instead, unformatted value still used ID. parentvar column name data match entries idvar. root node, leave NA. one root allowed. tipvar column name data tip variable. Tool-tip text show, user hovers node. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/orgchart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisOrgChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Org Chart with R\norgchart\n\ngvisOrgChart — gvisOrgChart","text":"gvisOrgChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisOrgChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Org Chart with R\norgchart\n\ngvisOrgChart — gvisOrgChart","text":"gvisOrgChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisOrgChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Org Chart with R\norgchart\n\ngvisOrgChart — gvisOrgChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/orgchart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisOrgChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Org Chart with R\norgchart\n\ngvisOrgChart — gvisOrgChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisOrgChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Org Chart with R\norgchart\n\ngvisOrgChart — gvisOrgChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Internet ## connection to display the visualisation.  Regions #>     Region  Parent Val Fac #> 1   Global    <NA>  10   2 #> 2  America  Global   2   4 #> 3   Europe  Global  99  11 #> 4     Asia  Global  10   8 #> 5   France  Europe  71   2 #> 6   Sweden  Europe  89   3 #> 7  Germany  Europe  58  10 #> 8   Mexico America   2   9 #> 9      USA America  38  11 #> 10   China    Asia   5   1 #> 11   Japan    Asia  48  11 Org1 <- gvisOrgChart(Regions, idvar = \"Region\", parentvar = \"Parent\",                   tipvar=\"Val\") plot(Org1)  ## Set a few options Org2 <- gvisOrgChart(Regions, idvar = \"Region\", parentvar = \"Parent\",                   tipvar=\"Val\",                options=list(width=600, height=400,                                  size='large', allowCollapse=TRUE)) plot(Org2)"},{"path":"https://mages.github.io/googleVis/reference/gvisPieChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Pie Chart with R\npiechart\n\ngvisPieChart — gvisPieChart","title":"Google Pie Chart with R\npiechart\n\ngvisPieChart — gvisPieChart","text":"gvisPieChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser using SVG VML.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisPieChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Pie Chart with R\npiechart\n\ngvisPieChart — gvisPieChart","text":"","code":"gvisPieChart(data, labelvar = \"\", numvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisPieChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Pie Chart with R\npiechart\n\ngvisPieChart — gvisPieChart","text":"data data.frame displayed pie chart labelvar Name character column contains category labels slice labels. numvar vector column names numerical variables slice values. options list configuration options Google Pie Charts, see:  https://developers.google.com/chart/interactive/docs/gallery/piechart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisPieChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Pie Chart with R\npiechart\n\ngvisPieChart — gvisPieChart","text":"gvisPieChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisPieChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Pie Chart with R\npiechart\n\ngvisPieChart — gvisPieChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/piechart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisPieChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Pie Chart with R\npiechart\n\ngvisPieChart — gvisPieChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisPieChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Pie Chart with R\npiechart\n\ngvisPieChart — gvisPieChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.  Pie1 <- gvisPieChart(CityPopularity) plot(Pie1)  ## Doughnut chart - a pie with a hole Pie2 <- gvisPieChart(CityPopularity, options=list(                     slices=\"{4: {offset: 0.2}, 0: {offset: 0.3}}\",                     title='City popularity',                     legend='none',                     pieSliceText='label',                     pieHole=0.5)) plot(Pie2)"},{"path":"https://mages.github.io/googleVis/reference/gvisSankey.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Sankey Chart with R\nsankey\n\ngvisSankey — gvisSankey","title":"Google Sankey Chart with R\nsankey\n\ngvisSankey — gvisSankey","text":"sankey diagram visualization used depict flow one set  values another. things connected called nodes  connections called links. named Captain Sankey, created  diagram steam engine efficiency used arrows widths  proportional heat loss.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSankey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Sankey Chart with R\nsankey\n\ngvisSankey — gvisSankey","text":"","code":"gvisSankey(data, from = \"\", to = \"\", weight = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisSankey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Sankey Chart with R\nsankey\n\ngvisSankey — gvisSankey","text":"data data.frame contains data visualised string refers column name  data source nodes used string refers column name  data destination nodes used weight name column numerical weight connections options list configuration options. options documented detail Google online:  https://developers.google.com/chart/interactive/docs/gallery/sankey#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSankey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Sankey Chart with R\nsankey\n\ngvisSankey — gvisSankey","text":"gvisSankey  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSankey.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Google Sankey Chart with R\nsankey\n\ngvisSankey — gvisSankey","text":"sankey chart may undergoing substantial revisions  future Google Charts releases.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSankey.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Sankey Chart with R\nsankey\n\ngvisSankey — gvisSankey","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/sankey","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSankey.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Sankey Chart with R\nsankey\n\ngvisSankey — gvisSankey","text":"Markus Gesmann markus.gesmann@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSankey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Sankey Chart with R\nsankey\n\ngvisSankey — gvisSankey","text":"","code":"dat <- data.frame(From=c(rep(\"A\",3), rep(\"B\", 3)),                    To=c(rep(c(\"X\", \"Y\", \"Z\"),2)),                    Weight=c(5,7,6,2,9,4))  sk1 <- gvisSankey(dat, from=\"From\", to=\"To\", weight=\"Weight\") plot(sk1)  sk2 <- gvisSankey(dat, from=\"From\", to=\"To\", weight=\"Weight\",                 options=list(sankey=\"{link: {color: { fill: '#d799ae' } },                                      node: { color: { fill: '#a61d4c' },                                      label: { color: '#871b47' } }}\")) plot(sk2)"},{"path":"https://mages.github.io/googleVis/reference/gvisScatterChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Scatter Chart with R\nscatterchart\n\ngvisScatterChart — gvisScatterChart","title":"Google Scatter Chart with R\nscatterchart\n\ngvisScatterChart — gvisScatterChart","text":"gvisScatterChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser using SVG VML.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisScatterChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Scatter Chart with R\nscatterchart\n\ngvisScatterChart — gvisScatterChart","text":"","code":"gvisScatterChart(data, options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisScatterChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Scatter Chart with R\nscatterchart\n\ngvisScatterChart — gvisScatterChart","text":"data data.frame displayed scatter chart. Two columns required, must numeric. values first column used X-axis. values following columns used Y-axis. column displayed separate color. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/scatterchart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisScatterChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Scatter Chart with R\nscatterchart\n\ngvisScatterChart — gvisScatterChart","text":"gvisScatterChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisScatterChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Scatter Chart with R\nscatterchart\n\ngvisScatterChart — gvisScatterChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/scatterchart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisScatterChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Scatter Chart with R\nscatterchart\n\ngvisScatterChart — gvisScatterChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisScatterChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Scatter Chart with R\nscatterchart\n\ngvisScatterChart — gvisScatterChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.   ## Scatter chart Scatter1 <- gvisScatterChart(women) plot(Scatter1)  ## Using optional arguments Scatter2 <- gvisScatterChart(women, options=list(legend=\"none\",                  lineWidth=2, pointSize=2,                  title=\"Women\", vAxis=\"{title:'weight (lbs)'}\",                  crosshair=\"{ trigger: 'both' }\",                   hAxis=\"{title:'height (in)'}\", width=500, height=400))                   plot(Scatter2)   df=data.frame(x=sin(1:100/3),                Circle=cos(1:100/3),           Ellipse=cos(1:100/3)*0.5)  ## Plot several variables as smooth curves Scatter3 <- gvisScatterChart(df,            options=list(curveType='function',               pointSize=0,               lineWidth=2)) plot(Scatter3)  ## Two series in the same plot with different ## x-values df <- data.frame(x=c(2,2,1,3,4),                  y1=c(0,3,NA,NA,NA),                  y2=c(NA,NA,0,3,2)) Scatter4 <- gvisScatterChart(df,                              options=list(lineWidth=2,                                           pointSize=2)) plot(Scatter4)  ## Customize points M <- matrix(nrow=6,ncol=6) M[col(M)==row(M)] <- 1:6 dat <- data.frame(X=1:6, M) SC <- gvisScatterChart(dat,                          options=list(                         title=\"Customizing points\",                         legend=\"right\",                         pointSize=30,                         series=\"{                              0: { pointShape: 'circle' },                              1: { pointShape: 'triangle' },                              2: { pointShape: 'square' },                              3: { pointShape: 'diamond' },                              4: { pointShape: 'star' },                              5: { pointShape: 'polygon' }                              }\")) plot(SC)"},{"path":"https://mages.github.io/googleVis/reference/gvisSteppedAreaChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Stepped Area Chart with R\nsteppedarechart\n\ngvisSteppedAreChart — gvisSteppedAreaChart","title":"Google Stepped Area Chart with R\nsteppedarechart\n\ngvisSteppedAreChart — gvisSteppedAreaChart","text":"gvisSteppedAreaChart function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSteppedAreaChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Stepped Area Chart with R\nsteppedarechart\n\ngvisSteppedAreChart — gvisSteppedAreaChart","text":"","code":"gvisSteppedAreaChart(data, xvar = \"\", yvar = \"\", options = list(), chartid)"},{"path":"https://mages.github.io/googleVis/reference/gvisSteppedAreaChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Stepped Area Chart with R\nsteppedarechart\n\ngvisSteppedAreChart — gvisSteppedAreaChart","text":"data data.frame displayed stepped area chart. xvar name character column contains category labels x-axes. yvar vector column names numerical variables plotted.  column displayed separate line. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/steppedarechart#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSteppedAreaChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Stepped Area Chart with R\nsteppedarechart\n\ngvisSteppedAreChart — gvisSteppedAreaChart","text":"gvisSteppedAreChart  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSteppedAreaChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Stepped Area Chart with R\nsteppedarechart\n\ngvisSteppedAreChart — gvisSteppedAreaChart","text":"stepped area chart rendered within browser using SVG VML displays tips hovering points.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSteppedAreaChart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Stepped Area Chart with R\nsteppedarechart\n\ngvisSteppedAreChart — gvisSteppedAreaChart","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/steppedarechart","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisSteppedAreaChart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Stepped Area Chart with R\nsteppedarechart\n\ngvisSteppedAreChart — gvisSteppedAreaChart","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisSteppedAreaChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Stepped Area Chart with R\nsteppedarechart\n\ngvisSteppedAreChart — gvisSteppedAreaChart","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires an internet ## connection to display the visualisation.  df=data.frame(country=c(\"US\", \"GB\", \"BR\"), val1=c(1,3,4), val2=c(23,12,32))  ## Stepped Area chart SteppedArea1 <- gvisSteppedAreaChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\")) plot(SteppedArea1)  ## Stacked chart SteppedArea2 <- gvisSteppedAreaChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),       options=list(isStacked=TRUE)) plot(SteppedArea2)   ## Add a customised title SteppedArea3 <- gvisSteppedAreaChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),              options=list(title=\"Hello World\",                           titleTextStyle=\"{color:'red',fontName:'Courier',fontSize:16}\")) plot(SteppedArea3)  if (FALSE) { ## Change y-axis to percentages SteppedArea3 <- gvisSteppedAreaChart(df, xvar=\"country\", yvar=c(\"val1\", \"val2\"),                        options=list(vAxis=\"{format:'#,###%'}\")) plot(SteppedArea3) }"},{"path":"https://mages.github.io/googleVis/reference/gvisTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Table Chart with R\ntable\n\ngvisTable — gvisTable","title":"Google Table Chart with R\ntable\n\ngvisTable — gvisTable","text":"gvisTable function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Table Chart with R\ntable\n\ngvisTable — gvisTable","text":"","code":"gvisTable(data, options = list(), chartid, formats = NULL)"},{"path":"https://mages.github.io/googleVis/reference/gvisTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Table Chart with R\ntable\n\ngvisTable — gvisTable","text":"data data.frame displayed table options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/table#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile formats named list. NULL (default) specific format  used. named list needs contain column names data  specified format. format string subset ICU pattern set.  instance, pattern:'#,###%' result output values \"1,000%\",  \"750%\", \"50%\" values 10, 7.5, 0.5.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Table Chart with R\ntable\n\ngvisTable — gvisTable","text":"gvisTable  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Table Chart with R\ntable\n\ngvisTable — gvisTable","text":"table can sorted paged. Table cells can formatted using format strings, directly inserting HTML cell values. Numeric values right-aligned; boolean values displayed check marks. Users can select single rows either keyboard mouse. Users can sort rows clicking column headers. header row remains fixed user scrolls. table fires number events corresponding user interaction.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Table Chart with R\ntable\n\ngvisTable — gvisTable","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/table","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisTable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Table Chart with R\ntable\n\ngvisTable — gvisTable","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Table Chart with R\ntable\n\ngvisTable — gvisTable","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Flash and Internet ## connection to display the visualisation.  ## Table with links to wikipedia (flags)  tbl1 <- gvisTable(Population) plot(tbl1)  ## Table with enabled paging tbl2 <- gvisTable(Population, options=list(page='enable',                                             height='automatic',                                            width='automatic'))  plot(tbl2)  ## Table with formating options tbl3 <- gvisTable(Population, formats=list(Population=\"#,###\"))  Population[['% of World Population']] <- Population[['% of World Population']]/100  tbl4 <- gvisTable(Population, formats=list(Population=\"#,###\",                                             '% of World Population'='#.#%')) plot(tbl4)"},{"path":"https://mages.github.io/googleVis/reference/gvisTimeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Timeline Chart with R\ntimeline\n\ngvisTimeline — gvisTimeline","title":"Google Timeline Chart with R\ntimeline\n\ngvisTimeline — gvisTimeline","text":"timeline chart depicts set resources used  time. One popular type timeline Gantt chart.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTimeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Timeline Chart with R\ntimeline\n\ngvisTimeline — gvisTimeline","text":"","code":"gvisTimeline(   data,   rowlabel = \"\",   barlabel = \"\",   start = \"\",   end = \"\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisTimeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Timeline Chart with R\ntimeline\n\ngvisTimeline — gvisTimeline","text":"data data.frame contains data visualised rowlabel string refers column name  data row labels used barlabel string refers column name  data bar labels used start number, date datetime start dates end number, date datetime end dates options list configuration options. options documented detail Google online:  https://developers.google.com/chart/interactive/docs/gallery/timeline#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTimeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Timeline Chart with R\ntimeline\n\ngvisTimeline — gvisTimeline","text":"gvisTimeline  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTimeline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Timeline Chart with R\ntimeline\n\ngvisTimeline — gvisTimeline","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/timeline","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTimeline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Timeline Chart with R\ntimeline\n\ngvisTimeline — gvisTimeline","text":"Markus Gesmann markus.gesmann@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTimeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Timeline Chart with R\ntimeline\n\ngvisTimeline — gvisTimeline","text":"","code":"dat <- data.frame(Term=c(\"1\",\"2\",\"3\"),                   President=c(\"Whasington\", \"Adams\", \"Jefferson\"),                   start=as.Date(x=c(\"1789-03-29\", \"1797-02-03\", \"1801-02-03\")),                   end=as.Date(x=c(\"1797-02-03\", \"1801-02-03\", \"1809-02-03\")))  tl <- gvisTimeline(data=dat[,-1], rowlabel=\"President\",                     start=\"start\", end=\"end\") plot(tl)  tl <- gvisTimeline(data=dat, barlabel=\"President\",                     start=\"start\", end=\"end\") plot(tl)  tl <- gvisTimeline(data=dat, rowlabel=\"President\",                     start=\"start\", end=\"end\",                    options=list(timeline=\"{showRowLabels:false}\")) plot(tl)  dat <- data.frame(Position=c(rep(\"President\", 3), rep(\"Vice\", 3)),                   Name=c(\"Washington\", \"Adams\", \"Jefferson\",                          \"Adams\", \"Jefferson\", \"Burr\"),                   start=as.Date(x=rep(c(\"1789-03-29\", \"1797-02-03\", \"1801-02-03\"),2)),                   end=as.Date(x=rep(c(\"1797-02-03\", \"1801-02-03\", \"1809-02-03\"),2)))  tl <- gvisTimeline(data=dat, rowlabel=\"Name\",barlabel=\"Position\",                     start=\"start\", end=\"end\",                    options=list(timeline=\"{showRowLabels:true}\")) plot(tl)  tl <- gvisTimeline(data=dat, rowlabel=\"Name\",barlabel=\"Position\",                     start=\"start\", end=\"end\",                    options=list(timeline=\"{groupByRowLabel:false}\",                                 backgroundColor='#ffd', height=350,                                 colors=\"['#cbb69d', '#603913', '#c69c6e']\"))  plot(tl)  # Datetime example  dat <- data.frame(Room=c(\"Room 1\",\"Room 2\",\"Room 3\"),                   Language=c(\"English\", \"German\", \"French\"),                   start=as.POSIXct(c(\"2014-03-14 14:00\", \"2014-03-14 15:00\",                                       \"2014-03-14 14:30\")),                  end=as.POSIXct(c(\"2014-03-14 15:00\", \"2014-03-14 16:00\",                                    \"2014-03-14 15:30\"))) tl <- gvisTimeline(data=dat, rowlabel=\"Language\",                    start=\"start\", end=\"end\") plot(tl)  if (FALSE) { require(timeline) data(ww2) timeline(ww2, ww2.events, event.spots=2, event.label='', event.above=FALSE) ww2$Person <- gsub(\"\\\\n\" ,\" \", ww2$Person) plot(gvisTimeline(ww2, barlabel=\"Person\", rowlabel=\"Group\",                   start=\"StartDate\", end=\"EndDate\",      options=list(width=600, height=350)) ) }"},{"path":"https://mages.github.io/googleVis/reference/gvisTreeMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","title":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","text":"gvisTreeMap function reads data.frame creates text output referring Google Visualisation API, can included web page, stand-alone page. actual chart rendered web browser.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTreeMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","text":"","code":"gvisTreeMap(   data,   idvar = \"\",   parentvar = \"\",   sizevar = \"\",   colorvar = \"\",   options = list(),   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisTreeMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","text":"data data.frame. data least four columns. row data table describes one node (rectangle graph). node (except root node) one parent nodes. node sized colored according values relative nodes currently shown. idvar column name data describing ID node. can valid JavaScript string, including spaces, length string can hold. value displayed node header. parentvar column name data match entries idvar. root node, leave NA. one root allowed per treemap. sizevar column name data positive values define size maps.  positive value allowed. value determines size node, computed relative nodes currently shown. value ignored non-leaf nodes (actually calculated size children). colorvar column name data values define range color. value used calculate color node. value, positive negative, allowed. color value first recomputed scale minColorValue maxColorValue, node assigned color gradient minColor maxColor. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/treemap#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTreeMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","text":"gvisTreeMap  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTreeMap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","text":"tree map visual representation data tree, node can zero children, one parent (except root, parents). node displayed rectangle, sized colored according values assign. Sizes colors valued relative nodes graph. can specify many levels display simultaneously, optionally display deeper levels hinted fashion. node leaf node, can specify size color; leaf, displayed bounding box leaf nodes. default behavior move tree user left-clicks node, move back tree user right-clicks graph. total size graph determined size containing element insert page. leaf nodes names long show, name truncated ellipsis (...).","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTreeMap.html","id":"warning-","dir":"Reference","previous_headings":"","what":"Warning","title":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","text":"Tree maps display tree like structure every child unique parent. Values column sizevar greater zero finite.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTreeMap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/treemap","code":""},{"path":[]},{"path":"https://mages.github.io/googleVis/reference/gvisTreeMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","text":"Markus Gesmann markus.gesmann@gmail.com, Diego de Castillo decastillo@gmail.com","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisTreeMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Tree Map with R\ntreemap\n\ngvisTreeMap — gvisTreeMap","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Internet ## connection to display the visualisation.  Tree <- gvisTreeMap(Regions,  idvar=\"Region\", parentvar=\"Parent\",                     sizevar=\"Val\", colorvar=\"Fac\") plot(Tree)   Tree2 <- gvisTreeMap(Regions,  \"Region\", \"Parent\", \"Val\", \"Fac\",                     options=list(width=600, height=500,                                  fontSize=16,                                  minColor='#EDF8FB',                                  midColor='#66C2A4',                                  maxColor='#006D2C',                                  headerHeight=20,                                  fontColor='black',                                  showScale=TRUE))  plot(Tree2)  ## Simple static treemap with no drill down options based on US states ## and their area. However we still have to create a parent id to use ## gvisTreeMap   require(datasets) states <- data.frame(state.name, state.area)  ## Create parent variable  total=data.frame(state.area=sum(states$state.area), state.name=\"USA\")  my.states <- rbind(total, states) my.states$parent=\"USA\" ## Set parent variable to NA at root level my.states$parent[my.states$state.name==\"USA\"] <- NA  my.states$state.area.log=log(my.states$state.area) statesTree <- gvisTreeMap(my.states, \"state.name\", \"parent\",                           \"state.area\", \"state.area.log\") plot(statesTree)   ## We add US regions to the above data set to enable drill down capabilities  states2 <- data.frame(state.region, state.name, state.area)  regions <- aggregate(list(region.area=states2$state.area),                      list(region=state.region), sum)  my.states2 <- data.frame(regionid=c(\"USA\",                                     as.character(regions$region),                                     as.character(states2$state.name)),                          parentid=c(NA, rep(\"USA\", 4),                                    as.character(states2$state.region)),                          state.area=c(sum(states2$state.area),                                       regions$region.area, states2$state.area))  my.states2$state.area.log=log(my.states2$state.area)  statesTree2 <- gvisTreeMap(my.states2, \"regionid\", \"parentid\",                            \"state.area\", \"state.area.log\")  plot(statesTree2)  ## Now we add another layer with US divisions  states3 <- data.frame(state.region, state.division, state.name, state.area)  regions <- aggregate(list(region.area=states3$state.area),                      list(region=state.region), sum)  divisions <- aggregate(list(division.area=states3$state.area),                      list(division=state.division, region=state.region),                      sum)  my.states3 <- data.frame(regionid=c(\"USA\",                                     as.character(regions$region),                                     as.character(divisions$division),                                     as.character(states3$state.name)),                          parentid=c(NA, rep(\"USA\", 4),                                     as.character(divisions$region),                                    as.character(states3$state.division)),                          state.area=c(sum(states3$state.area),                                       regions$region.area,                                       divisions$division.area,                                       states3$state.area))  my.states3$state.area.log=log(my.states3$state.area)  statesTree3 <- gvisTreeMap(my.states3, \"regionid\", \"parentid\",                            \"state.area\", \"state.area.log\")  plot(statesTree3)"},{"path":"https://mages.github.io/googleVis/reference/gvisWordTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Word Tree with R\nwordtree\n\ngvisWordTree — gvisWordTree","title":"Google Word Tree with R\nwordtree\n\ngvisWordTree — gvisWordTree","text":"word tree depicts multiple parallel sequences words. used  show words often follow precede target word  (e.g., \"Cats ...\") show hierarchy terms (e.g., decision tree).","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisWordTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Word Tree with R\nwordtree\n\ngvisWordTree — gvisWordTree","text":"","code":"gvisWordTree(   data,   textvar = \"\",   sizevar = \"\",   stylevar = \"\",   idvar = \"\",   parentvar = \"\",   options = list(),   method = \"implicit\",   chartid )"},{"path":"https://mages.github.io/googleVis/reference/gvisWordTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Google Word Tree with R\nwordtree\n\ngvisWordTree — gvisWordTree","text":"data data.frame contains data visualised textvar string refers column name data contains text used. sizevar string refers column name data contains size words word tree. stylevar string refers column name data contains stlye text.  warning message plot, called <textvar>.style. idvar (format explicit) string refers  column name data contains unique ID text. parentvar (format explicit) string refers  column name data contains ID parent text. options list configuration options, see:  https://developers.google.com/chart/interactive/docs/gallery/wordtree#Configuration_Options parameters can set via named list. parameters map Google documentation. Boolean arguments set  either TRUE FALSE, using R syntax. Google API parameters single value names  include \".\" set like one R,  options=list(width=200, height=300).  Exceptions rule width height options  gvisAnnotatedTimeLine gvisAnnotationChart. two functions, width height must character strings  format \"Xpx\", X number, \"automatic\".  example,  options=list(width=\"200px\", height=\"300px\"). Google API parameters names include \".\", require  multivalues set character, wrapped \"[ ]\" separated commas,  e.g. options=list(colors=\"['#cbb69d', '#603913', '#c69c6e']\") Google API parameters names include \".\" present parameters  several sub-options set character wrapped \" \". values sub-options set via parameter:value. Boolean values stated 'true' 'false'.  example Google documentaion states formating options  vertical axis states parameter vAxis.format.  paramter can set R :options=list(vAxis=\"{format:'#,###%'}\"). several sub-options set, e.g. titleTextStyle.color, titleTextStyle.fontName  titleTextStyle.fontSize, can combined one list item  :options=list(titleTextStyle=\"{color:'red', fontName:'Courier', fontSize:16}\") paramters can one value per sub-options  wrapped \"[ ]\". example set labels left right axes use:options=list(vAxes=\"[{title:'val1'}, {title:'val2'}]\") gvis.editor character label  -page button opens -page dialog box enabling users edit, change customise chart. default value given therefore button displayed. method string say whether word tree either: implicit - weight connect automatically, explicit - can specify weights connections chartid character. missing (default) random chart id  generated based chart type tempfile","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisWordTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Google Word Tree with R\nwordtree\n\ngvisWordTree — gvisWordTree","text":"gvisWordTree  returns list  class\"gvis\" \"list\".    object class \"gvis\" list containing least following components: type Google visualisation type chartid character id chart object. Unique chart ids required place several charts page. html list building blocks page header character string html page header: <html>...<body>, chart named character vector chart's building blocks: jsHeader Opening <script> tag reference Google's JavaScript library. jsData JavaScript function defining input data JSON object. jsDrawChart JavaScript function combing data  visualisation API user options. jsDisplayChart JavaScript function calling handler display chart. jsFooter End tag <\/script>. jsChart Call jsDisplayChart function. divChart <div> container embed chart page. caption character string standard caption, including data name chart id. footer character string html page footer: <\/body>...<\/html>, including used R googleVis version link Google's Terms Use.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisWordTree.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Google Word Tree with R\nwordtree\n\ngvisWordTree — gvisWordTree","text":"word tree chart may undergoing substantial revisions  future Google Charts releases.","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisWordTree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Google Word Tree with R\nwordtree\n\ngvisWordTree — gvisWordTree","text":"Google Chart Tools API:  https://developers.google.com/chart/interactive/docs/gallery/wordtree","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisWordTree.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Google Word Tree with R\nwordtree\n\ngvisWordTree — gvisWordTree","text":"Ashley Baldry","code":""},{"path":"https://mages.github.io/googleVis/reference/gvisWordTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Google Word Tree with R\nwordtree\n\ngvisWordTree — gvisWordTree","text":"","code":"## Please note that by default the googleVis plot command ## will open a browser window and requires Internet ## connection to display the visualisation.  wt1 <- gvisWordTree(Cats, textvar = \"Phrase\") plot(wt1)  Cats2 <- Cats Cats2$Phrase.style <- ifelse(Cats$Sentiment >= 7, \"green\",                               ifelse(Cats$Sentiment <= 3, \"red\", \"black\"))                               wt2 <- gvisWordTree(Cats2, textvar = \"Phrase\", stylevar = \"Phrase.style\",                     options = list(fontName = \"Times-Roman\",                                    wordtree = \"{word: 'cats'}\",                                    backgroundColor = \"#cba\")) plot(wt2)  # Explicit word tree exp.data <- data.frame(id = as.numeric(0:9),                        label = letters[1:10],                        parent = c(-1, 0, 0, 0, 2, 2, 4, 6, 1, 7),                        size = c(10, 5, 3, 2, 2, 2, 1, 1, 5, 1),                        stringsAsFactors = FALSE)  wt3 <- gvisWordTree(exp.data, idvar = \"id\", textvar = \"label\",                      parentvar = \"parent\", sizevar = \"size\",                     options = list(wordtree = \"{format: 'explicit'}\"),                     method = \"explicit\") plot(wt3)"},{"path":"https://mages.github.io/googleVis/reference/renderGvis.html","id":null,"dir":"Reference","previous_headings":"","what":"renderGvis — renderGvis","title":"renderGvis — renderGvis","text":"function lets use googleVis charts Shiny output.  Use wrap googleVis-generating function assign  output element server.R; create htmlOutput  name ui.R.","code":""},{"path":"https://mages.github.io/googleVis/reference/renderGvis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"renderGvis — renderGvis","text":"","code":"renderGvis(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://mages.github.io/googleVis/reference/renderGvis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"renderGvis — renderGvis","text":"expr expression returns gvis object. env environment evaluate expr quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://mages.github.io/googleVis/reference/renderGvis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"renderGvis — renderGvis","text":"Returns function can assigned Shiny outputelement.","code":""},{"path":"https://mages.github.io/googleVis/reference/renderGvis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"renderGvis — renderGvis","text":"Use googleVis Chart Shiny Output","code":""},{"path":"https://mages.github.io/googleVis/reference/renderGvis.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"renderGvis — renderGvis","text":"information shiny available online:   https://shiny.rstudio.com/.   find examples googleVis shiny mages' blog:  https://magesblog.com/tags/shiny/","code":""},{"path":"https://mages.github.io/googleVis/reference/renderGvis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"renderGvis — renderGvis","text":"Joe Cheng, joe@rstudio.com","code":""},{"path":"https://mages.github.io/googleVis/reference/renderGvis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"renderGvis — renderGvis","text":"","code":"if (FALSE) { # To run this example: shiny::runApp(system.file(\"shiny/\", package=\"googleVis\")) # server.R library(googleVis)  shinyServer(function(input, output) {   datasetInput <- reactive({     switch(input$dataset,            \"rock\" = rock,            \"pressure\" = pressure,            \"cars\" = cars)   })      output$view <- renderGvis({     gvisScatterChart(datasetInput(),                      options=list(title=paste('Data:',input$dataset)))   }) })  # ui.R shinyUI(pageWithSidebar(   headerPanel(\"googleVis on Shiny\"),   sidebarPanel(     selectInput(\"dataset\", \"Choose a dataset:\",                 choices = c(\"rock\", \"pressure\", \"cars\"))   ),   mainPanel(     htmlOutput(\"view\")   ) )) }"},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0613","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.13","title":"googleVis 0.6.13","text":"Added gvisGantt function renders gantt charts based https://developers.google.com/chart/interactive/docs/gallery/ganttchart","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0612","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.12","title":"googleVis 0.6.12","text":"CRAN release: 2022-04-06 Added example gvisAnnotationChart help file demonstrates change background colour annotated timeline now automatically uses Annotation Charts instead","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0611","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.11","title":"googleVis 0.6.11","text":"CRAN release: 2022-01-10 Started using pkgdown generate googleVis package website Fixed warning type.convert() Tidied layout googleVis vignette","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0610","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.10","title":"googleVis 0.6.10","text":"CRAN release: 2021-02-19 Allow custom HTML tooltips gvisGeoCharts","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-069","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.9","title":"googleVis 0.6.9","text":"CRAN release: 2020-11-05 Fixed URLs comply CRAN checks","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-068","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.8","title":"googleVis 0.6.8","text":"Fixed URLs comply CRAN checks","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-067","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.7","title":"googleVis 0.6.7","text":"Removed dependency package knitcitations","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-066","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.6","title":"googleVis 0.6.6","text":"CRAN release: 2020-07-08 Changed option YAML header vignette self_contained: false, otherwise plots displayed Re-organised vignettes use HTML output ","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-065","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.5","title":"googleVis 0.6.5","text":"CRAN release: 2020-06-08 Updated URLs Google’s online documentation","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-064","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.4","title":"googleVis 0.6.4","text":"CRAN release: 2019-05-16 added gvisWordTree function. Thanks Ashley Baldry contributing code.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-063","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.3","title":"googleVis 0.6.3","text":"CRAN release: 2018-11-12 Corrected URL gvisCalendar documentation Google Allow numeric colorvar input gvisBubbleChart create gradient color scale","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-062","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.2","title":"googleVis 0.6.2","text":"CRAN release: 2017-01-01 Updated links omegahat omegahat.org omegahat.net requested CRAN","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-061","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.1","title":"googleVis 0.6.1","text":"CRAN release: 2016-09-01 Flash based charts gvisGeoMap gvisAnnotatedTimeLine show warning, reminding users switch HTML5 charts gvisGeoChart gvisAnnotationChart instead. cases option settings converted porperly JSON objects.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-060","dir":"Changelog","previous_headings":"","what":"googleVis 0.6.0","title":"googleVis 0.6.0","text":"CRAN release: 2016-07-05 Changed package dependency RJSONIO jsonlite. Change demo AnimatedGeoMap AnimatedGeoChart","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0510","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.10","title":"googleVis 0.5.10","text":"CRAN release: 2015-08-26 Ordered factors ignored. Thanks Carsten Langer reporting issue.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-059","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.9","title":"googleVis 0.5.9","text":"CRAN release: 2015-07-04 Added note section width height help file gvisIntensityMap. Thanks Sarang Brahme comment. Updated NAMESPACE file comply new R CMD checks R-3.3.0","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-058","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.8","title":"googleVis 0.5.8","text":"CRAN release: 2015-01-22 Internal changes internal web server called, reflect changes R 3.2.0","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-057","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.7","title":"googleVis 0.5.7","text":"CRAN release: 2014-12-20 Updated DESCRPITION file comply new CRAN policy Clarified setting parameters help file. Thanks Nick Salkowski suggestions.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-056","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.6","title":"googleVis 0.5.6","text":"CRAN release: 2014-10-12 Rescaled column “% World Population” sample data set “Population” factor 0.01 gvisMotionChart: arguments xvar, yvar, sizevar colorvar always picked correctly. Thanks Juuso Parkkinen reporting issue.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-055","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.5","title":"googleVis 0.5.5","text":"CRAN release: 2014-08-16 Added example gvisMerge help file. README.md converted (X)HTML using current version pandoc showed minor problems validated using W3C Markup Validator. case xvar yvar arguments provided core charts output wasn’t sensible. bug introduced version 0.5.3. Thanks stanstrup reporting issue.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-054","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.4","title":"googleVis 0.5.4","text":"CRAN release: 2014-07-20 Tidying googleVis demo, vignette README file","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-053","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.3","title":"googleVis 0.5.3","text":"CRAN release: 2014-06-28 Default chart width set ‘automatic’ instead 500 pixels. Intervals columns roles end suffix “.”, integer. Several interval columns allowed, see Roles demo vignette details. order y-variables core charts wasn’t maintained. Thanks John Taveras reporting bug. Width height googleVis charts accepted pixels, although Google Charts API uses standard HTML units (example, ‘100px’, ‘80em’, ‘60’, ‘automatic’). units specified number assumed pixels. fixed. Thanks Paul Murrell reporting issue.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-052","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.2","title":"googleVis 0.5.2","text":"CRAN release: 2014-05-05 Fixed minor formatting issues documentation vignettes. Added examples demo googleVis show customize points lines help files gvisLineChart gvisScatterChart.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-051","dir":"Changelog","previous_headings":"","what":"googleVis 0.5.1","title":"googleVis 0.5.1","text":"CRAN release: 2014-04-13 New functions gvisSankey, gvisAnnotationChart, gvisHistogram, gvisCalendar gvisTimeline support new Google charts names (without ‘gvis’). New demo Trendlines showing trend-lines can added Scatter-, Bar-, Column-, Line Charts. New demo Roles showing different column roles can used core charts highlight data. New vignettes written R Markdown showcasing googleVis examples package works knitr. help files gvis charts longer show options, instead link online Google API documentation given. Updated googleVis demo googleVis output displayed default browser. previous versions googleVis output also displayed preview pane RStudio. feature longer available current version RStudio, likely introduced release RStudio version 0.99 higher.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-047","dir":"Changelog","previous_headings":"","what":"googleVis 0.4.7","title":"googleVis 0.4.7","text":"CRAN release: 2013-11-10 New option ‘googleVis.viewer’ controls default output googleVis plot method. package load set getOption(“viewer”). use RStudio, viewer pane used displaying non-Flash charts. Set options(“googleVis.viewer”=NULL) googleVis plot function open output default browser . package start-message makes user aware default viewer option. Added example gvisMap illustrates icon can changed.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-046","dir":"Changelog","previous_headings":"","what":"googleVis 0.4.6","title":"googleVis 0.4.6","text":"googleVis use Viewer pane RStudio (version >= 0.98.441) display non-Flash charts default. setting controlled via option viewer. Set options(“viewer”=NULL) googleVis plot function open output default browser .","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-045","dir":"Changelog","previous_headings":"","what":"googleVis 0.4.5","title":"googleVis 0.4.5","text":"CRAN release: 2013-08-29 indentation HTML output changed version 0.4.4, result stopped googleVis output rendered knitr.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-044","dir":"Changelog","previous_headings":"","what":"googleVis 0.4.4","title":"googleVis 0.4.4","text":"CRAN release: 2013-08-24 gvisTable() gained new parameter formats, allow users specify format numbers displayed table. Thanks Jacqueline Buros providing ideas code. Doughnut charts now possible pie charts hole. New examples gvisBarChart, gvisColumnChart, gvisComboChart demonstrating change width bars Extended FAQ section","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-043","dir":"Changelog","previous_headings":"","what":"googleVis 0.4.3","title":"googleVis 0.4.3","text":"CRAN release: 2013-05-25 givsGeoChart new argument ‘hovervar’ specify column input data can used show additional information geo chart. See new example plotting countries’ credit rating help file use case. Thanks John Muschelli suggesting feature.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-042","dir":"Changelog","previous_headings":"","what":"googleVis 0.4.2","title":"googleVis 0.4.2","text":"CRAN release: 2013-03-16 core charts (e.g. line, area, bar, column combo charts) accept now also date variables x-axis. Thanks Sebastian Campbell pointing . WorldBank demo uses now WDI package. Thanks John Maindonald providing code. Fixed typos Stock Andrew example data. Thanks Sebastian Campbell reporting issue.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-040","dir":"Changelog","previous_headings":"","what":"googleVis 0.4.0","title":"googleVis 0.4.0","text":"New function renderGvis support shiny. function allows user insert googleVis output shiny apps, similar renderText renderPlot. See help page details. Many thanks Joe Cheng support help. order support shiny order elements gvis*()htmlchart vector changed. positions jsChart jsFooter swapped. load mechanism Google API changed http https . Thanks Jacques Philip. package dependencies changed imports statements DESCRIPTION. Thanks Suraj Gupta pointing . R.rsp example demo googleVis moved demo Rrsp. FAQ shiny section added vignette. jsDisplayChart didn’t check google visualization function already loaded. Many thanks Mark Melling reporting issue providing solution. demo WorldBank didn’t download data first 12000 records. Many thanks John Maindonald reported issue.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-033","dir":"Changelog","previous_headings":"","what":"googleVis 0.3.3","title":"googleVis 0.3.3","text":"CRAN release: 2012-11-02 Clarified usage argument state help file gvisMotionChart. Thanks Leonardo Trabuco","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-033-1","dir":"Changelog","previous_headings":"","what":"googleVis 0.3.3","title":"googleVis 0.3.3","text":"CRAN release: 2012-11-02 plot.gvis didn’t open browser window options(gvis.plot.tag) set NULL, user explicitly called plot.gvis tag NULL. Thanks Sebastian Kranz reporting bug.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-032","dir":"Changelog","previous_headings":"","what":"googleVis 0.3.2","title":"googleVis 0.3.2","text":"plot.gvis gained argument ‘tag’, works similar argument name print.gvis. default tag argument NULL plot.gvis behaviour previous versions googleVis. However, argument can set outside plot.gvis via options(gvis.plot.tag=…). allows users switch plot statements print statements changing one setting. particular useful googleVis used combination knitr R.rsp. Setting options(plot.gvis.tag=“chart”) ensure plot(gvisOutput) statements included final HTML output. See help file plot.gvis vignette details. tag argument print.gvis can set globally outside function via options(gvis.print.tag) vignette new section describing set behaviour plot.gvis print.gvis via options(gvis.plot.tag), options(gvis.print.tag) respectively. section describing googleVis can used knitr extended additional example included. plot.gvis can open html file now, just gvis-objects. Like gvis-object copy file temporary directory display via R HTTP server.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-031","dir":"Changelog","previous_headings":"","what":"googleVis 0.3.1","title":"googleVis 0.3.1","text":"argument ‘browser’ introduced version 0.3.0 removed . argument set default output getOptions(‘browser’), interactive() returned TRUE, otherwise ‘false’. function getOptions(‘browser’) returns either string function call. later caused error message, experienced RStudio RGui.exe. check now handled internally plot.gvis. Thanks Sebastian Kranz reporting bug.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-030","dir":"Changelog","previous_headings":"","what":"googleVis 0.3.0","title":"googleVis 0.3.0","text":"CRAN release: 2012-10-20 plot.gvis new argument ‘browser’. argument passed function browseURL. ‘browser’ argument default set based output interactive(). prevents R CMD CHECK trying open browser windows package checking process. See help file plot.gvis details. Thanks Henrik Bengtsson comments suggestions. gvisMotionChart new arguments xvar, yvar, colorvar sizevar. arguments optional set various dimensions motion chart, similar gvisBubbleChart. Thanks Sebastian Kranz idea initial code. gvisGeoChart accepts tooltip.triggers following update Visualisation API Google, 24 September 2012 R data frames transformed JSON objects using new function provided Sebastian Kranz Wei Luo. new function speeds googleVis functions. Changed load mechanism Google API http https. Thanks Erik Bülow pointing (Issue 19). Changed example help file gvisMap show include html code tooltip. Chart editor validated properly XHMTL 1.0 Strict","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0217","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.17","title":"googleVis 0.2.17","text":"CRAN release: 2012-08-04 Added sections information ‘knitr’ ‘Rook’ vignette Added example gvisMerge demonstrating use ‘Reduce’ Data frames one row displayed chart. Thanks Oliver Jay Wai Tung Ho reporting issue. Fixed earth quake example, using data https://ds.iris.edu/seismon/eventlist/index.phtml, Mag read factor rather numeric","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0216","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.16","title":"googleVis 0.2.16","text":"CRAN release: 2012-06-02 Updated example help file gvisGeoChart individual colour axis Updated links Google API pages gvisMotionCharts accepts quarterly weekly time dimensions. Thanks Jason Pickering providing patch.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0215","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.15","title":"googleVis 0.2.15","text":"CRAN release: 2012-03-04 Updated documentation following new version Google API 22 February 2012. Moved vignette folder /inst/doc /vignettes Added gradient color mode bubble chart. Region interactivity marker mode now disabled default. keep old behavior? Set enableRegionInteractivity option true. Markers now opaque default. keep old behaviour? Set markerOpacity option 0.5. Marker size now 3 12 pixels default. keep old behavior? Set sizeAxis option {minSize: 2, maxSize: 30}. magnifying glass now opened user hovers cluttered markers (excluding IE<=8). keep old behaviour? Set magnifyingGlass option {enable: false}. Maps stretched default anymore, rather kept original aspect ratio. keep old behavior? Set keepAspectRatio option false.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0214","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.14","title":"googleVis 0.2.14","text":"CRAN release: 2012-02-05 Updated help files line Google Visualisation API pages Updated vignette new section dealing apostrophes column names updated example section “Setting options” Fixed typos vignette. Thanks Pat Burns pointing Updated links Google’s updated API Terms Use: https://developers.google.com/terms/site-terms New bubble chart function gvisBubbleChart","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0213","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.13","title":"googleVis 0.2.13","text":"CRAN release: 2011-12-19 argument ‘numvar’ renamed ‘colorvar’ reflect updated Google API. Additionally gvisGeoChart gained new argument ‘sizevar’. Updated googleVis vignette section using googleVis output presentations Renamed demo EventListner EventListener New stepped area chart function gvisSteppedAreaChart gvisGeoChart new marker mode, similar mode gvisGeoMap. See example(gvisGeoChart) new functionalities.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0212","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.12","title":"googleVis 0.2.12","text":"CRAN release: 2011-12-08 gvisMotionChart didn’t display data special characters, e.g. spaces, &, %, column names correctly. Thanks Alexander Holcroft reporting issue.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0211","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.11","title":"googleVis 0.2.11","text":"CRAN release: 2011-11-17 Updated vignette documentation instructions changing Flash security settings display Flash charts locally. Thanks Tony Breyal. New example plot weekly data gvisMotionChart Removed local copies gadget files reduce package file size. local copy R script generate original gadget files still included inst/gadgets","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-0210","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.10","title":"googleVis 0.2.10","text":"CRAN release: 2011-09-25 Updated section ‘Using googleVis output Google Sites, Blogger, etc.’ vignette Updated example gvisMotionChart, showing initial chart setting can changed, e.g display line chart. New example gvisAnnotatedTimeLine, showing shade areas. Thanks Mike Silberbauer providing initial code. New demo WorldBank. demonstrates country level data can accessed World Bank via API displayed Motion Chart. Inspired Google’s Public Data Explorer, see https://www.google.com/publicdata/home","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-029","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.9","title":"googleVis 0.2.9","text":"CRAN release: 2011-09-02 Support dual Y axes Ability crop zoom chart area specific ranges Ability set different properties series Ability enable disable chart interactivity Performance improvements GeoChart Setting options use -page chart editor Using googleVis Google products Blogger Google Sites Updated warning section gvisTreeMap New gvis.editor argument options, adds edit button page, allowing user edit, change customise chart fly.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-028","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.8","title":"googleVis 0.2.8","text":"CRAN release: 2011-07-31 Updated package welcome message. message asks user read Google’s Visualisation Maps API Terms Use uses functions googleVis package. caption gvis-plots contain additional link Google’s data policy. New example gvisBarChart using XML package chart online data Wikipedia","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-027","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.7","title":"googleVis 0.2.7","text":"CRAN release: 2011-07-23 output googleVis package can included WordPress pages, JavaScript event handlers can added charts. Clarified documentation Flash based charts help files motion chart, geo map, annotated time line. New demo ‘EventListener’ showcasing ‘Listener’ event can added charts gvisGeoMap documentation stated default dataMode ‘regions’, function actually used ‘markers’. default dataMode now ‘regions’ therefore line help file.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-026","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.6","title":"googleVis 0.2.6","text":"CRAN release: 2011-06-15 Updated demos gvisComboChart gvisGeoChart gvisCandlestickChart New function ‘gvisMerge’ align two charts next ","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-025","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.5","title":"googleVis 0.2.5","text":"CRAN release: 2011-06-07 gvisLineChart gvisBarChart gvisColumnChart gvisAreaChart gvisScatterChart gvisPieChart gvisGauge gvisOrgChart gvisIntensityMap New demo ‘AnimatedGeoMap’. demo shows Geo Map can animated additional JavaScript. Thanks Manoj Ananthapadmanabhan Anand Ramalingam, provided idea initial code. way RJSONIO treats backslashes changed version 0.7.1 result Google charts longer displayed.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-024","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.4","title":"googleVis 0.2.4","text":"CRAN release: 2011-02-08 plot.gvis longer writes package folder. Instead temporary files created. overcomes need install package directory write access. Many thanks Ben Bolker suggestion code contribution. plot.gvis longer requires web server provided R.rsp package display visualisation output. Instead uses internal R HTTP help server. Many thanks John Verzani suggestion code contribution. R >= 2.11.0 required plot googleVis output, uses internal R HTTP help server. Updated vignette section use googleVis RApache brew plot function generates web page includes link HTML code chart. Many thanks Henrik Bengtsson suggestion. gvis visualisation functions new argument ‘chart id’, set chart id exhibit manually. gvis functions return details visualisation chart structured way. Suppose x ‘gvis’ object, xhtmlchart named character vector chart’s JavaScript building blocks html tags. print.gvis new argument ‘tag’, gives user control output Brew example files : system.file(“brew”, package = “googleVis”) gvisTable accept datetime columns.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-023","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.3","title":"googleVis 0.2.3","text":"CRAN release: 2010-12-21 gvisAnnotatedTimeLine accepts date POSIX* formats Google date objects expect months Jan.- Dec. 0 - 11 1 - 12 Fixed typo Andrew data set. Pressure 1992-08-24 12:00:00 951 51","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-022","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.2","title":"googleVis 0.2.2","text":"CRAN release: 2010-12-13 Fixed typos documentation createGoogleGadget allows users create Google Gadgets XML output","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-021","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.1","title":"googleVis 0.2.1","text":"CRAN release: 2010-12-03 First version released CRAN gvisAnnotatedTimeLine generate interactive annotated time line charts","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-020","dir":"Changelog","previous_headings":"","what":"googleVis 0.2.0","title":"googleVis 0.2.0","text":"package renamed GoogleMotionChart googleVis reflect new flexible implementation. functions Google Visualisation API now available. New interfaces, visualisation functions start ‘gvis’. Output now class ‘gvis’ generic print plot functions. ‘gvis’ objects list lists, allow user extract various parts visualisation output, e.g. chart object. gvisMotionChart generate motion charts gvisGeoMap generate geographical maps gvisMap generate maps gvisTreeMap generate tree maps gvisTable generate table output print.gvis: generic function print ‘gvis’ objects plot.gvis: generic function display ‘gvis’ objects browser via R.rsp package.","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-014","dir":"Changelog","previous_headings":"","what":"googleVis 0.1.4","title":"googleVis 0.1.4","text":"package uses RJSONIO package Omegahat transform data.frame json DataTable","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-013","dir":"Changelog","previous_headings":"","what":"googleVis 0.1.3","title":"googleVis 0.1.3","text":"detailed motion chart configuration settings possible. options set via list. Arguments height width can set, plus configurations. Updated demo PerformanceAnalyticsMotionChart","code":""},{"path":"https://mages.github.io/googleVis/news/index.html","id":"googlevis-012","dir":"Changelog","previous_headings":"","what":"googleVis 0.1.2","title":"googleVis 0.1.2","text":"First public version.","code":""}]
